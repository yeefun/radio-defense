{"version":3,"sources":["boss.js","circle.js","enemy.js","index.js","polygon.js","prop.js","shooter.js","triangle.js","utility.js"],"names":["Boss","args","_classCallCheck","this","def","axisRotateR","axisRotateAngle","rotate","scale","rotateV","bullets","HP","beforeGenerateEnemyTime","Date","beginAppear","isAppearing","axisRotateAngleV","originPos","x","y","isDisappeared","degToPi","appearTimer","disappearTimer","ctx","moveTo","Object","lineTo","closePath","save","fillStyle","beginPath","fill","globalColor","white","red","blue","Math","PI","orange","strokeStyle","lineWidth","arc","stroke","forEach","bullet","appear","idx","arr","appearTimes","gameCrawler","textContent","TweenLite","to","ease","rotateNum","getRandom","concat","update","_this","setTimeout","game","isPause","shoot","isEnd","easeOut","Expo","onComplete","_this2","playSound","_this3","BossBullet","p","disappear","push","_this4","chooseEnemy","circles","Circle","isBossGenerate","triangles","Triangle","rotateAngle","polygons","Polygon","whole","big","small","num","color","moveX","moveXV","isBoss","drawWaveBullet","enemyMethods","attackShooter","r","beforeRotateTime","assign","axisRotateRV","isRotating","circleBigR","circleSmallR","subAxisRotateR","cos","sin","$triLineTo","isStart","approach","rotateTime","_loop","timer","CirBullet","clearTimeout","i","Power2","random","Back","config","translate","restore","enemy","_typeof","shooter","cirSolidLineW","isPolygon","shooterBody","seconds","distance","updateFPS","arguments","length","undefined","dieTime","effect","dieEffect","colorRGB","shadowBlur","enemyR","baseLog","effectX","effectY","effectR","shadowColor","requestAnimationFrame","hitShooter","enemies","enemyIdx","type","enemyAxisRotateR","enemyAxisRotateAngle","state","abs","mouseMoveAngle","shieldAngleRange","splice","polygonR","judgeWhatEnemyHit","shieldR","shieldLineW","bulletIdx","bulletLen","attackShooterResult","shooterShield","isProtect","bulletRotate","angleGap","currentLevel","boss","shooterHPBar","isAttacked","style","width","shooterHPBarW","hearts","crawlerClearedTimer","playerName","querySelectorAll","shooterHPBarOriginW","removeChild","shooterHeart","bgm","pause","bossDieResult","victoryBgm","endGame","canvas","ww","wh","gameW","updateTime","yellow","blueDark","props","document","getElementById","restartBtn","starsBtn","backBtn","restartBtnStars","cover","gamePanel","batteryInfo","heartWrapper","startBtn","prop","propImg","propLastTime","batteryNum","resultBoss","panel","container","gameTime","warning","resultBullet","resultRanking","resultScore","resultStars","getContext","gameHalfDiagonalL","gameH","initCanvas","round","sqrt","height","documentElement","clientWidth","clientHeight","coverCircle","coverTriangle","coverPolygon","Game","subTris","blockV","countdownSeconds","countdownTimer","hpRecoverTimer","countupTimer","propGeneratedTimer","propGeneratedInterval","beatBossSeconds","isDisplayStars","addEventListener","handleMouseMove","handleClick","window","handleKeyup","handlePlayerName","checkPlayerName","startGame","isMob","add","classList","remove","drawCover","render","result","setBlockV","recoverShooterHPBar","shareFb","handleGameStars","open","shareTwitter","encodeURIComponent","fillRect","drawBlock","url","circle","triangle","polygon","subTriangle","draw","Shooter","rotateR","mouseMovePos","mouseMovePosX","mouseMovePosY","_this5","display","value","innerHTML","cursor","keyboard","gameLevel","countdownStartTime","heart","clearCrawler","pointerEvents","currentTime","volume","rankingNum","loadingIcon","starWrapper1","starWrapper3","generateProp","resultBattery","bulletNum","handleGameResult","play","starWrapper2","name","level","battery","axios","get","data","res","rank","totalPlayers","secondStarData","secondData","thirdStarData","thirdData","starScoreHTML","fillStarScore","wave","bat","firstStarData","apply","_toConsumableArray","_this6","propName","Prop","_this7","countdownTime","_this8","floor","trueSeconds","minutes","TimeMinutes","TimeSeconds","countupTime","_this9","nowHPW","recoverHPBarW","_this10","form","_this11","angle","initLevel","setEnemy","handleLoad","init","evt","atan2","beforeShootTime","key","pauseGame","isMuted","muted","isJustSplite","drawLightning","rotateDirection","Circ","rNum","img","Image","src","complete","drawImage","replace","split","outerR","x1","y1","y2","ShooterBullet","waveLength","waveFreq","waveAmp","waveFlow","shootTime","recoverHeart","lastTime","drawCrackdownEffect","displayPropInfo","countLastTime","crackdownTime","createElement","polygonWholeR","bodyLen","appendChild","anglePanFn","v","bulletMoveLen","cirIdx","asin","shotRRangeFn","attackEnemy","triIdx","lengthX","lengthY","polyIdx","sideA","attackPolygon","beyondBoundary","enemyAngleMinus","enemyAnglePan","enemyAngleAdd","shotAngleRange","judgeShotAngleRange","shotRRange","sideB1Len","sideB2Len","angleAB1","angleAB2","rotateAngleJudge","angleB2","polyRotate","sideB1","sideB2","sideC1","cosineFormula","sideC2","bottomJudge","polyAxisRotateAngle","topJudge","angleB1","getAngleB","polyAngleMinus","polyAngleAdd","shooterRotateAngle","shooterAnglePan","beforeRotateAxisAngleTime","isGeneratedSub","shootTimer","triOuterBigR","triInnerBigR","triInnerSmallR","randomRotateAngle","rotateAxisAngleTime","Power0","easeNone","TriSub","order","TriBullet","isReproduceMoving","Power1","easeIn","degree","log","a","b","c","acos","min","max","instrument","note","synth","duration","timeout","Tone","MembraneSynth","toMaster","triggerAttackRelease","DuoSynth","MonoSynth","Synth","navigator","userAgent","match","angleAdd"],"mappings":"uZAAMA,gBACJ,SAAAA,EAAYC,GAAMC,gBAAAC,KAAAH,GAChB,IAAMI,EAAM,CACVC,YAAa,EACbC,gBAAiB,EACjBC,OAAQ,EACRC,MAAO,EANPR,iBAQkB,EAClBS,QAAS,EACTC,QAAS,GATbC,GAAA,GAAkBC,wBAAA,IAAAC,KAYdC,aAAa,EAXfC,aAAY,EACVV,eADU,EAEVC,YAAAA,EACAC,YAHU,KAIVC,eAJU,MAMVQ,OAAAA,OAAAA,EAAgBf,GAChBQ,OAAAA,OAPUN,KAAAC,uDAUVQ,IAAAA,OACAE,IAAAA,UAAaG,UAXHd,KAAAE,YAAAF,KAAAG,iBAAAY,EAAAD,UAAAd,KAAAE,YAAAF,KAAAG,iBAAAa,GAYVJ,IAAAA,MAAAA,KAAaP,MAZHL,KAAAK,OAaVY,IAAAA,OAAAA,KAAeb,OAbLc,SAeVC,IAAAA,UAAa,2BACbC,IAAAA,YAhBFC,IAAAC,OAAA,EAAA,GAkBAC,IAAMC,OAAN,GAAA,GACAD,IAAMC,OAAN,GAAc,GACfH,IAAAG,OAAA,GAAA,IAaGH,IAAIG,QAAQ,GAAI,IAChBH,IAAIG,QAAQ,GAAI,GAChBH,IAAIG,QAAQ,GAAI,GAChBH,IAAII,YAdNJ,IAAIK,OAEFL,IAAIhB,UAAWA,YAAYA,OAC3BgB,IAAIjB,YAgBJiB,IAAIC,OAAO,EAAG,GAddD,IAAIM,OAAAA,GAAJ,GACAN,IAAIO,OAAAA,GAAJ,IACAP,IAAIC,OAAO,GAAX,IACAD,IAAIG,QAAO,GAAX,IACAH,IAAIG,QAAO,GAAX,IACAH,IAAIG,QAAO,GAAI,GACfH,IAAIG,YACJH,IAAIG,OAEJH,IAAII,UAAJ,4BACAJ,IAAIQ,YAgBJR,IAAIC,OAAO,EAAG,IAddD,IAAIM,OAAAA,EAAJ,IACAN,IAAIO,OAAAA,GAAJ,IACAP,IAAIC,OAAO,GAAX,IACAD,IAAIG,QAAO,GAAX,IACAH,IAAIG,QAAO,GAAI,IACfH,IAAIG,QAAO,EAAI,IACfH,IAAIG,YACJH,IAAIG,OAEJH,IAAII,UAAJK,YAAAC,MACAV,IAAIQ,YAgBJR,IAAIC,OAAO,IAAK,GAdhBD,IAAIM,OAAAA,IAAY,GAChBN,IAAIO,OAAAA,GAAJ,IACAP,IAAIC,OAAO,GAAX,IACAD,IAAIG,OAAO,GAAG,IACdH,IAAIG,YACJH,IAAIG,OAEJH,IAAIG,UAAYM,YAAhBC,MACAV,IAAIG,YACJH,IAAII,QAAAA,IAAJ,GACAJ,IAAIQ,QAxCD,IAyCH,GAeAR,IAAIG,QAAO,GAAa,IAdxBH,IAAIM,QAAAA,GAAYG,IAChBT,IAAIO,QAAAA,GAAJ,IACAP,IAAIC,YACJD,IAAIG,OAEJH,IAAIG,UAAYM,YAAYE,IAC5BX,IAAIG,YACJH,IAAII,OAAAA,GAAJ,GACAJ,IAAIQ,OAlDD,GAmDH,GAeAR,IAAIG,OAAO,GAAqB,IAdhCH,IAAIM,OAAAA,GAAwBI,IAC5BV,IAAIO,OAAAA,GAAJ,IACAP,IAAIC,YACJD,IAAIG,OAEJH,IAAIG,UAAOM,YAAaG,KACxBZ,IAAIG,YACJH,IAAII,QAAAA,GAAJ,GACAJ,IAAIQ,QA5DD,GA6DH,GAeAR,IAAIG,QAAO,GAA0B,IAdrCH,IAAIM,QAAAA,GAAJ,IACAN,IAAIO,QAAAA,GAAJ,IACAP,IAAIC,YACJD,IAAIG,OAEJH,IAAIG,UAAY,2BAChBH,IAAIG,YACJH,IAAII,OAAAA,GAAJ,IACAJ,IAAIQ,OAtED,GAuEH,IAeAR,IAAIG,OAAO,GAAiB,IAd5BH,IAAIM,OAAAA,GAAwBM,IAC5BZ,IAAIO,OAEJP,IAAIG,YACJH,IAAIG,QAAO,GAAA,IACXH,IAAIG,QAAO,GAAA,IACXH,IAAIG,QAAO,GAAsB,IACjCH,IAAII,QAAAA,GAAJ,IACAJ,IAAIQ,OAEJR,IAAIM,YAAYG,YAAAC,MAChBV,IAAIO,UAAJ,IACAP,IAAIC,YACJD,IAAIG,IAAAA,GAAmB,GAAvB,IAAA,EAAA,EAAAU,KAAAC,IACAd,IAAIG,SAEJH,IAAIQ,YACJC,YAAAM,OACAf,IAAIO,YACJP,IAAIC,QAAO,KAAiB,IAC5BD,IAAIG,QAAO,KAAiB,IAAA,MAC5BH,IAAIG,QAAO,KAAsB,IAAA,IACjCH,IAAIG,QAAO,KAAsB,MACjCH,IAAIQ,SAEJR,IAAIgB,UAAJ,4BACAhB,IAAIiB,YACJjB,IAAIO,QAAAA,GAAJ,OACAP,IAAIkB,QAAI,GAA6B,IACrClB,IAAImB,QAAJ,GACA,IAeAnB,IAAIG,QAAO,GAAqB,IAdhCH,IAAIgB,YAgBJhB,IAAIQ,OAdJR,IAAAA,UAEAA,KAAGd,QAAQkC,QAAA,SAAAC,GACXrB,EAAIC,0CAKJD,KAAGV,aAAHX,KAAA2C,SACAtB,KAAGV,aAAc,GACdX,KAACwB,aAAOxB,KAAkBiB,cAG7BI,KAAGd,QAACkB,QAAJ,SAAAiB,EAAAE,EAAAC,GACAxB,EAAIQ,OAAJe,EAAAC,sCAGGtC,IAAAA,EAAAA,KACHmC,IAAAA,KAAAA,MAAAA,CACD1C,KAFD8C,aAAA,EAGD9C,KAAAiB,eAAA,EAgBCjB,KAAKY,aAAc,EACnBmC,YAAYC,YAAc,mBAC1BC,UAAUC,GAAGlD,KAAM,IAAK,CAhBxBK,MAAA,EACA8C,KAAKxC,KAAAA,UAmBL,IAAMyC,EAAYC,UAAU,GAAI,KAjBhCJ,UAAKC,GAAKtC,KAAAA,IAAN,CAmBFT,gBAAe,KAAAmD,OAAOF,GACtBhD,OAAM,KAAAkD,OAAOF,GAjBfD,KAAK5C,KAAAA,QACHmC,WAAOa,WADTC,EAAA5C,aAAA,KAuBIZ,KAAK8C,aAAe9C,KAAK8C,YAAc,EACzCW,WAAW,WApBN,IAAAD,EAAAhD,IAAAkD,KAAAC,SAsBHH,EAAKI,SArBTP,UAASQ,IAAO,MAEhBJ,WAAKxC,WACL,IAAKL,EAAAA,IAAL8C,KAAAC,SACAZ,EAAAA,iBACAE,UAAa,IAAM,MAEjBE,KAAAA,eAAWW,WAAAA,WAFb,IAAAN,EAAAhD,IAAAkD,KAAAC,SAIAH,EAAMJ,aACNH,UAAUC,IAAV,MACE/C,UAAAA,WAAe,KAAA,2CAET4D,IAAAA,EAAAA,KACNC,IAAAA,KAAAA,MAAAA,CACEhE,KAAAiB,eAAKL,EACNqC,UAAAC,GAAAlD,KAAA,IAAA,CANqBK,MAAxB,EA8BE8C,KAAMY,KAAKD,UArBXL,IAAAA,EAAWJ,UAAM,GAAA,KACfJ,UAAIC,GAAAlD,KAAA,IAAA,CAwBNG,gBAAe,KAAAmD,OAAOF,GAvBpBhD,OAAA,KAAAkD,OAAKM,GACNT,KAAEE,KAAAA,UAEHI,KAAAA,YAAWA,WAAM,WACX,IAAJQ,EAAIzD,IAAYkD,KAAKA,SAyBvBO,EAAKtB,UAxBH,KACDuB,UAAEb,WAAS,KAHF,uCA8BN,IAAAc,EAAAnE,KAzBNA,KAAAO,QAAKa,KAAAA,IAALgD,WAAsBX,CACpBY,EAAA,CA2BEtD,EAAGD,UAAUd,KAAKE,YAAaF,KAAKG,iBAAiBY,EA1BvDC,EAAAF,UAAKwD,KAALpE,YAAAF,KAAAG,iBAAAa,GAEFkD,YAAUlE,KAAAI,OACXF,YAAAF,KAAAE,eA6BCgE,UAAU,OAAQ,KAAM,KAAM,GAAI,IAClCT,WAAW,WA7BDU,EAAA5D,QAAAgE,KAAA,IAAAH,WAAA,CA+BNC,EAAG,CA9BHX,EAAAA,UAAYS,EAAAjE,YAAAiE,EAAAhE,iBAAAY,EAChBC,EAAKC,UAAAA,EAAgBf,YAArBiE,EAAAhE,iBAAAa,GAEEX,YADsB8D,EAAA/D,OAEtB+C,WAAWW,GAFb5D,YAAAiE,EAAAjE,eAKA+C,UAAUC,OAAV,KAAwB,KAAA,GAAA,KACtB/C,6CAEU,IAAAqE,EAAAxE,KAEZyE,EAAA,WAiCE,OAhCIpB,UAAA,EAAA,IACJ,KAAA,EACCK,KAHHgB,QAAAH,KAAA,IAAAI,OAAA,CAIAT,YAAUM,EAAYtE,YACvBC,gBAAAqE,EAAArE,gBAAA,IAiCSU,kBAAoBwC,UAAU,EAAG,GAAK,GACtCjD,OAAQiD,UAAU,EAAG,KACrBuB,gBAlCF,KAoCA,MAnCN,KAAKrE,EACFmD,KAAEmB,UAAAN,KAAA,IAAAO,SAAA,CACA5E,YAAYsE,EAAKtE,YACjBC,gBAAiBD,EAAAA,gBAAkBC,IAHPU,iBAAAwC,UAAA,EAAA,GAAA,GAK/B0B,OAAWP,EAAErE,gBALkB,IAM/BD,gBAAkBA,KAEpBgE,MACAT,KAAAA,EACE,IAAKlD,EAAQgE,UAASH,EAAAA,KACpBC,KAAGW,SAAAT,KAAA,IAAAU,QAAA,CACDlE,YAAa,CACZmE,MAAEpE,EAAUZ,YAHgBiF,IAAAX,EAAAtE,YAK/B6E,MAAWP,EAAEtE,aAEbA,gBAAiB,CAPnBgF,MAAAV,EAAArE,gBAAA,IA6CQgF,IAAKX,EAAKrE,gBAAkB,IApCpC+D,MAAUM,EAAQrE,gBAAT,KAEZC,OAAA,CAsCW8E,MAAO9E,EACP+E,IAAK/E,EACLgF,MAAOhF,GAETE,QAAS+C,UAAU,EAAG,GAAK,GAxC/BgC,gBAAJ,OAKM3B,IACExD,IACAC,IAAAA,KAAAA,UACAU,WAAAA,WACAT,KACAwE,cAIFlB,sBACExD,SAAAA,EAAAA,GAAAA,gBAAAA,KAAAA,GACAC,IAAAA,EAAAA,CACAU,EAAAA,CACAT,EAAAA,EACAwE,EAAAA,GAEF1E,YAAA,EA6CJoF,MAAOxD,YAAYM,OA5CjBmD,MAAA,EACEC,OAAA,EACA9B,YAAKsB,EACH9E,WAAAA,GACEgF,SAAAA,GACAC,QAAAA,EACAC,SAAAA,EAHWK,QAAA,GAMXP,OAAAA,OAAAA,EAAOpF,GACPqF,OAAAA,OAAAA,KAAKlF,uDAGPG,IAAAA,OACE8E,IAAAA,UAAAA,KAAO9E,EAAAA,EADDJ,KAAAqE,EAAArD,GAENmE,IAAAA,QAAAA,KAAK/E,YAFC,IAAAc,SAAAwE,eAXqB1F,KAAA,QAAA,IAAA,4BAgB7BM,IAAAA,yCAhB6BsC,EAA/BC,GAiEN7C,KAAKuF,OAASvF,KAAKwF,OA7CfG,aAAAC,cAAA5F,KAAA4C,EAAAC;uZC3RF8B,kBACJ,SAAAA,EAAY7E,GAAMC,gBAAAC,KAAA2E,GAChB,IAAM1E,EAAM,CACVC,YAAa,EACbC,gBAAiB,EACjB0F,EAAG,GACHzF,OAAQ,EACRC,MAAO,EAPPsE,aAQc,EACd9D,iBAAkB,EARtByE,MAAAxD,YAAkBM,OAAA5B,GAAA,EAYdD,QAAS,GAXXuF,iBAAY,IAAApF,KACVR,YAAW,EACXC,aAAAA,EACA0F,gBAHU,GAKVxF,OAAK0F,OALK9F,EAAAH,GAMVkG,OAAAA,OAAYhG,KANFC,uDAWVM,IAAAA,EAXUP,KAAA6F,EAAA,EAYVC,EAAkB9F,KAAIU,EAZZ,GAaVuF,EAbU,GAcVtF,IAAAA,OACAiE,IAAAA,UAAAA,UAAgB5E,KAAAE,YAAAF,KAAAG,iBAAAY,EAAAD,UAAAd,KAAAE,YAAAF,KAAAG,iBAAAa,GAfNK,IAAZjB,OAAAJ,KAAAI,OAAAc,SAiBAK,IAAAA,MAAOwE,KAAO9F,MAAKH,KAAnBO,OAEDgB,IAAAO,YAaCP,IAAIkB,IAAI,EAAG,EAAG2D,EAAY,EAAa,EAAVhE,KAAKC,IAClCd,IAAIM,UAAY,2BAChBN,IAAIQ,OAXJR,IAAAO,YACAP,IAAAkB,KAAM4D,GAAAA,EAAAA,EAAwB,EAA9B,EAAAjE,KAAAC,IACAd,IAAAM,UAAMyE,2BACN/E,IAAAA,OAEAA,IAAAA,YACAA,IAAAA,IAAIhB,EAAJ,EAAUL,KAAKK,EAAf,EAAA,EAAsB6B,KAAK7B,IAc3BgB,IAAIM,UAAY3B,KAAKsF,MAZrBjE,IAAAA,OAEAA,IAAAA,YACAA,IAAAA,UACAS,YAAAC,MACAV,IAAAA,IAAIO,EAAJM,KAAAmE,IAAA,GAAAnF,SAAAkF,EAAAlE,KAAAoE,IAAA,GAAApF,SAAA,IAAA,EAAA,EAAAgB,KAAAC,IACAd,IAAAA,OACAA,IAAAA,YACAA,IAAAA,IAAIQ,EACJK,KAAAmE,IAAA,IAAAnF,SAAAkF,EAAAlE,KAAAoE,IAAA,IAAApF,SAAA,IAAA,EAAA,EAAAgB,KAAAC,IAaAd,IAAIQ,OAZJR,IAAAA,YACAA,IAAAA,IAAIkB,EAAJL,KAAyBA,IAAA,IAAzBhB,SAAAkF,EAAAlE,KAAAoE,IAAA,IAAApF,SAAA,IAAA,EAAA,EAAAgB,KAAAC,IACAd,IAAAA,OAeAA,IAAIO,YAZJP,IAAAA,UAAAS,YAAAC,MACAV,IAAAA,QAAIM,EAAJ,GAcAN,IAAIkF,YAAY,EAAG,IAZnBlF,IAAAA,YAAQ+E,GAAAA,KACR/E,IAAAA,YAAA,IAAA,KACAA,IAAAA,YAAA,EAAA,KACAA,IAAAA,YAAQ+E,IAAAA,KACR/E,IAAAA,YACAA,IAAAA,OACAA,IAAAA,UAeArB,KAAKO,QAAQkC,QAAQ,SAACC,GAZtBrB,EAAIO,wCAKDgB,GAAC2D,IAAAA,EAAAA,KACJlF,KAAGV,aAAHX,KAAA2C,OAAA3C,KAAA4E,gBACAvD,KAAGV,aAAa,EAChBU,KAAGmF,SAAHb,aAAAc,SAAAzG,MAEAqB,KAAGd,QAAHkC,QACA,SAAAC,EAAAE,EAAAC,GAaEH,EAAOa,OAAOX,EAAKC,KAZrB7C,KAAAiG,aAGDjG,KAAAG,iBAAAH,KAAAa,kBAgBC,IAAM6F,EAAa,IAbd9D,KAAK8D,EAAA1G,KAAA8F,iBAAAzC,UAAA,IAAA,OAeRrD,KAAKiG,YAAa,EAdpBhD,UAAKtC,GAAAA,KAAL,GAAoB,CAkBhBP,OAAQJ,KAAKG,gBAdjBgD,KAAK5C,OAAQkC,QAAbuB,WAGA,WAeMR,EAAKyC,YAAa,EAdnBvC,KAAKuC,SACRzC,EAAKrD,WAkBLH,KAAK8F,iBAAmBY,GAd1Bf,aAAKe,WAAkBZ,KAAAA,QAAAA,EAAoBzC,SAAUrD,KAADE,YAAcF,KAAAG,iDAM9DgD,IAFA,IAAAc,EAAAjE,KAAA2G,EAAA,SAEAxD,GACA,IAAAyD,EAAAnD,WAAA,WACAO,EAAAA,QAAUO,KAAE,IAAAsC,UAAA,CACVxC,EAAA,CACAtD,EAAAD,UAAU0F,EAAVtG,YAAmB+D,EAAA9D,iBAAAY,EAkBjBC,EAAGF,UAAUmD,EAAK/D,YAAa+D,EAAK9D,iBAAiBa,GAhBxD+D,YAAAd,EAAA7D,OAVHmF,OAAAtB,EAAA4B,EAAA,GAcF3F,YAAA+D,EAAA/D,eAmBI4G,aAAaF,IAjBlBG,EAAA1D,UAAA,IAAA,OAZKF,EAAM6D,EAAAA,EAAOlD,UAJS,EAAA,GAAAiD,GAAA,EAAAJ,EAItBxD,GAiCJJ,YAAYC,YAA+B,IAAjBd,KAAK+E,SAAkB,iBAAmB,WACpE/C,UAAU,WAAY,qCAhBpBU,GACE7B,YAAIC,YAAc,oBAEdjC,UAAAA,GAAGD,KAAAA,GAAU,CACbE,MAAAA,EAFCmC,KAAA+D,KAD2BpD,QAAAqD,OAAA,OAM9B5B,UAAAA,KAAOvF,KAAC,IAAD,CACPI,OAAA,EACAF,KAAAA,KAAAA,QAAaiH,OAAKjH,OAsBpB0E,GApBAkC,UAAAA,GAAAA,KAAaF,IAXgB,CAa9B1G,YAAMmD,KAAAA,OAAUA,UAbjB,GAAA,MAHIF,KAAA6D,OAAAlD,UAENJ,KAAA8C,SAAAtC,UAAoBb,QAAa,KAAK,eA6CpCwD,qBACJ,SAAAA,EAAY/G,GAAMC,gBAAAC,KAAA6G,GAChB,IAAM5G,EAAM,CAzBZ8C,EAAAA,CA2BIhC,EAAG,EAzBPkC,EAAAA,GAEEE,YAAWW,EAFWwB,MAAxBxD,YAAAM,OAIAa,MAAAA,EACE7C,QAAM,IADkB2E,YAA1B,GAIAxD,OAAIqD,OAAAA,EAAAA,GACF3B,OAAAA,OAAUC,KAAGjD,uDAAWoB,IAAAK,OAIzBL,IAAA+F,UAAApH,KAAAqE,EAAAtD,EAAAf,KAAAqE,EAAArD,GA4BCK,IAAIjB,OAAOJ,KAAK+E,YAAc7D,SA3BhCwC,IAAI9B,YAELP,IAAAkB,IAAAvC,KAAAuF,MAAA,EAAA,EAAA,EAAA,EAAArD,KAAAC,IA4BGd,IAAIM,UAAY3B,KAAKsF,MACrBjE,IAAIQ,OACNR,IAAIgG,yCAECzE,EAAKC,GAEV7C,KAAKuF,OAASvF,KAAKwF,OA5BrBG,aAAAC,cAAkB5F,KAAA4C,EAAAC;8PC9JpB,IAAM8C,aAAe,CAEnBc,SAFmB,SAEVa,GACP,IAAMpH,EAAcoH,EAAMpH,YAHxByF,EAAe,WAAA4B,QAAArH,GACnB,IAAAoH,EAAAtB,aAAA,CACAS,IAFmBe,EAAA9D,KAAA8D,QAGXtH,EAAmBsH,EAACtH,EAA1BsH,EAAAC,cAAA,EACMC,GAAYA,EAAOxH,EAAiBgF,MAA1ChF,EAAAoH,EAAAzB,GAAA8B,EAKQC,EAAWvE,UAAU,GAAI,IAJjCiE,EAAKA,cAAoBO,GAAAD,EAAAE,WAEvBJ,EACMG,EAAAA,GAAQ3C,MACdhF,EAAiBmD,MAAAA,EAAjB8B,IAAAjF,EAAAgF,OAAAoC,EAAAtB,cAQE9F,EAAYiF,KAAOmC,EAAMtB,aAAe3C,UAAU,EAAG,GAJvDnD,EAAagF,OAAOoC,EAAAtB,aAAA3C,UAAA,EAAA,IAGlBiE,EAAApH,aAAAoH,EAAAtB,cAMFsB,UAtBe,SAsBTpH,EAAAA,EAAeoH,EAAMtB,GAA3B,IAAAP,EAAA,EAAAsC,UAAAC,aAAAC,IAAAF,UAAA,IAAAA,UAAA,GACDG,EAAA,EAqBC7G,sBA5Ce,SAAA8G,IA2BnBzE,KAAAC,UACAyE,GA5BmB,GA6BjB/G,IAAI6G,YAMF7G,IAAIK,OALNL,IAAI8G,YAAJ,QAAA7E,OAAa+E,EAAb,MAAA/E,QAAmB,GAAA4E,GAAA,GAAnB,KACE7G,IAAIM,UAAJ,QAAA2B,OAAmB+E,EAAnB,MAAA/E,QAAmB,GAAA4E,GAAA,IAAnB,KACEA,IAAAA,YAAAA,QAAAA,OAAAG,EAAAH,WACD7G,IAAAiH,WAAA,EAODjH,IAAIiB,UAAY,EANhBjB,IAAIO,EAAJ2G,EAAAC,QAAA,GAAAN,EAAA,GAAA,GAAA,EAAA,GACA7G,IAAIK,IAAJ+G,EAAAC,EAAAC,EAAA,EAAA,EAAAzG,KAAAC,IACAd,IAAIgB,OACJhB,IAAIM,SACJN,IAAIuH,UAEAtG,EAAJ,IACAuG,sBAAyBL,KAItB/C,GAQHhC,WAAW,WANXV,YAAcC,YAAI,gBAChB6F,GAUJ3E,UAAU,QAAS,KAAM,KAAM,EAAG,IAPlC2E,UAAAA,MAAAA,KAAsBV,KAAtB,EAAA,IASAjE,UAAU,MAAO,KAAM,KAAM,EAAG,KAJ/B4E,WAxDgB,SAyDjBC,EAAAC,EAAAC,EAAAC,EAAAC,GASA,IARAjF,EAQMoD,EAAQyB,EAAQC,GAChBxB,EAAU9D,KAAK8D,QAPrBtD,EADS,WAATA,EAAUkF,MACDlH,KAAcmH,IAAdC,eAATH,EAAAjI,UAAA,IAAAA,SAAAgB,KAAAmH,IAAAC,eAAAH,EAAAjI,UAAA,IAAAA,QAIFgB,KAAAmH,IAAAC,eAAAH,EAAAjI,UAAA,GAAAA,SAAAgB,KAAAmH,IAAAC,eAAAH,EAAAjI,UAAA,IAAAA,QAIE,IAAIqI,EAAJ,WASE,GAAa,QAATN,GAA2B,UAATA,EARxB,GAAIzB,EAAQ4B,OAARJ,EAAkB,GAEf,UAAAC,EAAA,CACLM,IAAAA,EAA4BD,WAATpH,EAASoH,eAAiBH,eAE/CxD,aAAAyC,UAAAd,EAAAzB,EAAA/E,UAAAoI,EAAAC,GAAApI,EAAAD,UAAAoI,EAAAC,GAAAnI,EAAAqH,OACA,CAUM1C,aAAayC,UADI,GACgBd,EAAMxG,UAAUmI,GAAMlI,EAAGuG,EAAMxG,UAAUmI,GAAMjI,EAAG,mBARnFiI,CACFF,EAAAA,GAAQS,IAAOR,EAWf,IAAMS,EAAoB,QAATR,EAAiB,GAAgB,GATlDtD,aAAayC,UAASqB,EAAAnC,EAAAxG,UAAAmI,GAAAlI,EAAAuG,EAAAxG,UAAAmI,GAAAjI,EAAA,eACC,IAArBsG,EAAMe,GAAAA,KAA+B,IAAXf,EAAA9G,GAAT4E,OACjBO,EAAAA,OAAayC,EAAUd,KAL3B4B,GAUO1B,EAAA3B,EAAA2B,EAAAC,cAAA,GAYPiC,IAVE/D,aAAM8D,sBAYRvF,UAAU,WAAY,OAEbqF,GAAqBL,GAAqB1B,EAAQmC,QAAWnC,EAAQoC,YAAc,IAZ1FF,IACEX,EAAAA,WAAeC,EAChBjG,YAAAC,YAAA,UACFkB,UAAA,WAAA,QAKDwF,cAnGe,SAmGfA,EAAiBG,EAAAtJ,GAAA,IAAAuJ,EAAA,EAAA/B,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,EACjBpC,EAAaoE,KAAAA,QACb7F,EAAUsD,EAAD3B,EACT2B,EAAAC,cAAA,EALFuC,EAMWT,EAAgBI,QAAKT,EAAgBU,YAAaD,EAE3DnC,KAAO6B,IAACY,EAAR1E,QAAA7C,EAAAxC,aAAAyH,EAAAmC,KAEA5F,aAAU6F,sBA3GKxJ,EAAAiJ,OAAAK,EAAA,GAgHnBnH,EAAA+C,OAAAvB,UAAA,OAAA,KAAA,KAAA,GAAA,IAAAA,UAAA,WAAA,OAEE,IAAMsD,EAAeA,EAArB/B,OAAA/C,EAAAqC,YAAA,GAAArC,EAAAqC,YACM4C,EAAWzF,KAAGsF,IAAA8B,eAAqB7B,SAAzCyC,EAAA,KAAAA,EAAA,EAAA,IAAA,MAcsB,WAAlB1C,EAAQ4B,MAXmB1G,KAAX6C,GAAkBrF,GAAeyH,IAEnD,IAAaoC,GACbI,GAAA,MACeN,KAAfR,IAAA3G,EAAA6C,QAAA7C,EAAAxC,aAAA8J,EAAAF,KAGFvJ,EAAAiJ,OAAAK,EAAA,GAYE9G,YAAYC,YAAc,UAC1BkB,UAAU,WAAY,QARtBqF,oBAlIe,WAmIhB,GAFD7F,KAEO8C,UAAA,KAAA9C,KAAA0G,cAAA1G,KAAA2G,MAAN,CACCd,IAAAA,EAAAA,KAAoBY,QAElBZ,EAAgBe,aAAc5H,YAAkBA,GAtInC,GAuIf8E,EAAA+C,YAAA,EAGArG,aAAUsG,MAAAC,MAAVvG,GAAAA,OAAAwG,EAAA,EAAA,EAAAA,EAAAxG,MA1IewG,GAAA,EAAA,CAgJnBX,IAAAA,EAAAA,OAeM,OANJO,KAAAA,UAcIpG,UAAU,QAAS,MAZnBwG,UAAAA,QAAJ,KAAwB,KAAA,KACtBxG,UAAA,QAAA,KAAA,KAAA,KACA4C,aAAY6D,KAAQC,0BAClB7H,YAAAC,YAAA,QAAAM,OAAAI,KAAAmH,WAAA,iBAZErD,IAAAA,EAAeA,SAArBsD,iBAAA,sBACMC,EAAAA,GAAAA,WACNC,YAAAC,EAAA,IAaIzD,EAAQmD,QAAU,EAXtBnD,aAAQ+C,MAAaE,MAArBjD,GAAAA,OAjBC,IAiBDA,MAyBAzE,YAAYC,YAA+B,IAAjBd,KAAK+E,SAAkB,SAAW,WATxDvD,cAtKa,WAuKbQ,IAAAA,EAAAA,KAAUmG,KACVnG,aAASkE,UAAU,IAAVtH,UAAAuJ,EAATnK,YAAAmK,EAAAlK,iBAAAY,EAAAD,UAAAuJ,EAAAnK,YAAAmK,EAAAlK,iBAAAa,EAAA,gBAAA,GACAkD,WAAAA,WACA4C,aAAAA,UAAkB8D,IAAAA,UAAAA,EAAlB1K,YAAAmK,EAAAlK,iBAAAY,EAAAD,UAAAuJ,EAAAnK,YAAAmK,EAAAlK,iBAAAa,EAAA,gBAAA,IACA+B,KACAU,WAAA,WACDkC,aAAAyC,UAAA,IAAAtH,UAAAuJ,EAAAnK,YAAAmK,EAAAlK,iBAAAY,EAAAD,UAAAuJ,EAAAnK,YAAAmK,EAAAlK,iBAAAa,EAAA,eAAA,IACF,KAcD0C,KAAK2G,KAAO,KA5LKa,IAAAC,QAmLnBC,IAAAA,YAnLmB,EAoLjBC,WAAW3H,OACXiC,WAAAA,OAAayC,GAEXzC,WAAAA,WADQjC,KAAV4H,WAGA7H,KACEkC,aAAAA,KAAayC,qBACdrF,YAFDC,YAAA;o2BC3LJ,IA6EMuI,GACAlK,GACFmK,MACAC,MACAC,kBAjFE5D,UAAY,GACd6D,WAAa,EAEX7J,YAAc,CAClBE,IAAK,UACLI,OAAQ,UACRwJ,OAAQ,UACR3J,KAAM,UACN4J,SAAU,UACV9J,MAAO,QAGH+J,MAAQ,CAAC,QAAS,YAAa,SAAU,SAAU,QAAnDA,SAASC,SAASC,eAAa,aAGrCC,WAAAF,SAAAC,eAAA,eACAE,SAAAH,SAAAC,eAAA,aACEG,QAAAJ,SAAAC,eAAA,YACAI,gBAAAL,SAAAC,eAAA,sBAEFK,MAAAN,SAAAC,eAAA,SAEAM,UAAAP,SAAAC,eAAA,cACAO,YAAAR,SAAAC,eAAA,gBACA1B,aAAAyB,SAAAC,eAAA,MAYMQ,aAAeT,SAASC,eAAe,iBAVvCS,KAAQV,SAAGA,eAASC,QACpBC,QAAUF,SAAWC,eAAR,aACbE,aAAWH,SAASC,eAAe,mBACnCG,WAAUJ,SAASC,eAAe,eAClCI,OAAAA,SAAkBL,eAASC,eAG3BM,MAASP,SAAGA,eAASC,SACrBO,UAAcR,SAASC,eAAe,aACtC1B,SAAYyB,SAAGA,eAASC,YACxBQ,SAAYT,SAAGA,eAASC,aACxBU,UAAOX,SAASC,eAAtB,cACMW,YAAUZ,SAASC,eAAe,gBAClCY,WAAeb,SAASC,eAAe,eACvCa,QAAUd,SAAWC,eAAR,WAYbc,WAAaf,SAASC,eAAe,eATrCe,cAAiBf,SAAAA,eAAvB,kBACMgB,aAAYjB,SAASC,eAAe,iBAEpCiB,WAAWlB,SAASC,eAAe,eAEnCjJ,cAAcgJ,SAASC,eAAe,kBACtCnB,YAAakB,SAASC,eAAe,gBACrCkB,YAAUnB,SAASC,eAAe,gBAIlCmB,IAAAA,SAAepB,eAASC,OAUxBX,WAAaU,SAASC,eAAe,eANrCoB,aAAgBrB,SAASC,eAAe,iBACxCqB,aAActB,SAASC,eAAe,iBACtCsB,aAAcvB,SAASC,eAAe,iBAGtCd,QAAMa,SAASC,eAArB,YACMX,aAAaU,SAASC,eAAe,iBAY3CT,OAAAQ,SAAAC,eAAA,QAEM3K,IAAMkK,OAAOgC,WAAW,MAK9B,SAAIC,aAGF9B,MAAQH,OAAOd,MADjBgD,MAASC,OAAAA,OACPhC,kBAAAxJ,KAAAyL,MAAAzL,KAAA0L,KAAArC,OAAAd,MAAAc,OAAAd,MAAAc,OAAAsC,OAAAtC,OAAAsC,QAAA,GACAJ,GAAK1B,SAAS+B,gBAAdC,YACAP,GAAAA,SAAAA,gBAAoBQ,aAOtB,IACIC,YACAC,cACAC,aACAzK,KAJExC,QAAUgB,KAAAC,GAAU,IAQpBiM,gBACJ,SAAAA,EAAAtO,GAAAC,gBAAAC,KAAAoO,GAAkB,IAAAnO,EAAA,CAEduH,QAAS,KADXkF,KAAS,KACPlF,WAAS,EACTkF,QAAM,GACNG,UAAU,GACVnI,SAAS,GACTG,QAAS,GACTG,SAAQ,EACRqJ,OAAO,EACP7H,SAAS,EACT3C,OAAO,CACPF,GAAAA,EACA2K,EAAAA,GAEEtN,aAAG,EAFGuN,iBAXE,EAgBVA,eAAgB,KAChBC,eAAA,KACAC,aAAc,KACdD,mBAnBU,KAoBVE,oBApBU,KAqBVC,sBAAoB,IACpB/D,KAAAA,KACAgE,WAAAA,GACAvE,gBAxBU,EAyBVQ,SAAAA,EACAgE,gBAAe,GAEfC,OAAAA,OAAAA,EAAgBhP,GA5BNyB,OAAZwE,OAAA/F,KAAAC,uDA+BAsB,IAAAA,EAAAA,KACDgK,OAAAwD,iBAAA,YAAAC,iBAGCzD,OAAOwD,iBAAiB,QAASE,aACjCC,OAAOH,iBAAiB,QAASI,aACjCC,mBACA3C,SAASsC,iBALJ,QAAA,WAAAvL,EAAA6L,mBAOH7L,EAAK8L,cALP/D,WAAOwD,iBAAiB,QAASE,WACjCC,EAAAA,cAEAzC,gBAASsC,iBAAiB,QAAS,WACjCvL,EAAA8L,cADFC,UAIAtD,WAAW8C,UAAAA,IAAAA,OACTtC,SAAK6C,UAALE,IAAA,OACDtC,QAFDuC,UAAAC,OAAA,QAIE1P,KAAA2P,YACD3P,KAdI4P,SAuBL5P,KAAKuD,SANHsH,KAAAA,YAEAqC,KAAAA,sBACDhB,SAAA6C,iBAAA,QAAA,WASC3B,cAAcqC,UAAUD,IAAI,OAR9BnC,YAAKsC,UAALH,IAAA,OACAlC,YAAAmC,UAAAC,OAAA,OACAG,OAAKtM,UACLiM,IAAA,OASOhM,EAAKsL,gBARZtL,EAAKsM,kBAELtM,EAAKuM,gBAAAA,IAEH3C,QAAAA,iBAAcqC,QAAc,WAC5BpC,cAAYoC,UAAUD,OAAI,OAC1BlC,YAAAA,UAAYmC,OAAUC,OACtBG,YAAOJ,UAAPD,IAAqB,OAUrBK,OAAOJ,UAAUC,OAAO,SARtBM,QAAAjB,iBAAKkB,QAAL,WACDf,OAAAgB,KAAA,sFAAA,GAAA,wFACDC,aAAKrB,iBAAiB,QAAtB,WAIAzB,OAAAA,KAAAA,gCAAAA,OAAA+C,mBAFMrB,0CAEN1B,SAAAA,OAAA+C,mBADAhD,aACA,GAAA,yHAFF,IAAAnJ,EAAAjE,KAOEkP,IAAAA,UAAYpN,YAAA+J,SACbxK,IAFDgP,SAAA,EAAA,EAAA3E,MAAA+B,OAIEzN,KAAAsQ,YACAtQ,KAAMuQ,SAAMvQ,KAAA6D,QACZxC,IAAAK,OACAwN,IAAAA,YAJF7N,IAAAkB,IAAAmJ,MAAA,EAAA+B,MAAA,EAAA,IAAA,EAAA,EAAAvL,KAAAC,IAMDd,IAAAgB,YAAA,2BAYKhB,IAAImB,SACJnB,IAAIO,YACJP,IAAIkB,IAAImJ,MAAQ,EAAG+B,MAbhB,EAAA,IAAA,EAAA,EAAAvL,KAAAC,IAAAd,IAAAiB,UAAA,IAeHjB,IAAIgB,YAAcP,YAAYC,MAdlCV,IAAAmB,SACAnB,IAAIM,WAGJ3B,KAAAwH,QAAK8I,OACLtQ,KAAA0E,QAAU8B,QAAN,SAAAgK,GACFnP,EAAIK,SAGFL,KAAAA,UAAIgB,QAAc,SAAAoO,GAClBpP,EAAImB,SAGJnB,KAAAA,SAAIiB,QAAY,SAAhBoO,GACArP,EAAIgB,SAGPrC,KACDqO,QAAA5L,QAAA,SAAAkO,GAgBEA,EAAYC,SAGd5Q,KAAK0M,MAAQ1M,KAAK0M,KAAKkE,OAfrBJ,KAAAA,MAAOI,KAAPvG,KAAAuG,OADF5Q,KAGAwG,SACAxG,KAAK6E,YAEJgE,sBACD,WAiBE5E,EAAK2L,4CAbP,IAAAzL,EAAAnE,KAiBA2L,YAAc,EAhBd3L,KAAKqO,SAALrO,KAAqB6D,QAEpB7D,KACDwH,QAAAjE,SACAvD,KAAK0M,QAAQjK,QAAKiK,SAAL8D,EAtCN5N,GAwDH4N,EAAOjN,OAAOX,KAflB5C,KAAI6E,UAAK2B,QAAS,SAAAiK,EAAA7N,GAChB6N,EAAAlN,OAAAX,KAqBA5C,KAAKgF,SAASvC,QAAQ,SAACiO,EAAS9N,GAlBlCiG,EAAAA,OAAAA,KAGD7I,KAAAqO,QAAA5L,QAAA,SAAAkO,EAAA/N,GAoBK+N,EAAYpN,OAAOX,KAnBhB5C,KAAA0M,MAAA1M,KAAA0M,KAAAnJ,SACPoI,KAAAA,MAAU3L,KAAVqK,KAAA9G,UACAE,WAAK,WACHU,EAAAZ,UACA,IAAKiE,+CAIJxH,KAFDwH,QAGA,IAAAqJ,QACA7Q,KAAA0E,QAAKG,KAAL,IAAepC,OAAQ,CACrBgO,YAASlN,UAATiK,kBAAA,EAAAA,kBAAA,KACDrN,gBACD,IAwBAU,kBAAoBwC,UAAU,EAAG,GAAK,GAvBtCjD,OAAK4E,UAASvC,EAAAA,QA2BhBzC,KAAK6E,UAAUN,KAAK,IAAIO,SAAS,CAvB/B5E,YAAKmO,UAAgBb,kBAACmD,EAAa/N,kBAAQ,KACzC+N,gBAAYpN,GACb1C,iBACDwC,UAAA,EAAA,GAAA,GAwBAjD,OAAQ,MArBR,IAAA0Q,EAAAzN,UAAamK,kBAAb,EAAAA,kBAAA,KACDpN,EAAAiD,UAAA,EAAA,KAyBK/C,EAAW+C,UAAU,EAAG,GAAK,GAxBnCI,KAAAA,SAAWc,KAAA,IAAAU,QAAM,CACf/E,YAAKqD,CADG2B,MAEP4L,EAEL3L,IAAA2L,EAyBM1L,MAAO0L,GAET3Q,gBAAiB,CACf+E,MAAO,IA1BXC,IAAKqC,IA4BDpC,MAAO,KAzBTlF,OAAAA,CACAC,MAAAA,EACAU,IAAAA,EACAT,MAAMA,GA6BNE,QAAAA,yCAtBAF,IAAAA,OAJ+BiB,IAVvBO,YA2CRP,IAAIgB,YAAc,4BA1BpBhB,IAAMyP,UAAUzN,GAEhB,IAAM/C,IAAAA,EAAO,EAAI+C,EAAAA,GAAU0D,GAAV,EACjB1F,IAAK2D,OAAST,GAAdwC,EAAuB9B,WAAQjF,KAAAsO,OAAAvN,EAAA,GAAA,GAC7Bb,IAAAA,OAAa,GAAF6G,EAAE4E,WAAA3L,KAAAsO,OAAAvN,EAAA,GAAA0M,OAGXrI,IAAAA,IAAK2B,EAAE+J,EAAAA,EAAAA,GAAAA,GAAAA,EAHIzP,IADgBC,OAAA,EAAA,GAAAyF,EAAA4E,WAAA3L,KAAAsO,OAAAtN,EAAA,IAM7Bb,IAAAA,OAAAA,MAAiB,GAAA4G,EAAA4E,WAAA3L,KAAAsO,OAAAtN,EAAA,IAEfmE,IAAAA,SACAC,IAAAA,8CAIAD,IAAAA,EAFM4L,aAAAhQ,EAAA2K,MAAA,EAGNtG,EAAOhF,aAAAA,EAAAA,MAAAA,EAETE,IAAAA,OAhB6Be,IAA/B+F,UAAA4J,EAAAC,GAmBF5P,IAAAgB,YAAAP,YAAAC,MA2BIV,IAAIiB,UAAY,GAChBjB,IAAIO,YACJP,IAAIC,QAhDyB,GAgDT,GACpBD,IAAIG,OAjDyB,GAiDV,GA5BrBH,IAAIK,OAAJ,GArB+B,IAsB7BL,IAAIO,OAAAA,EAtByB,IAuB7BP,IAAIgB,SACJhB,IAAAA,UA8BFA,IAAIM,UAAYG,YAAYC,MA5B1BV,IAAAO,YACEP,IAAAA,IAAIC,EAAO2P,EAAwB,IAAK3C,EAAxC,EAAwCA,KAAnBnM,IACrBd,IAAAA,2CAgCM,IAAAmD,EAAAxE,KA7BRyD,WAASsD,WACP1F,EAAGiN,OAAHvN,EAAyB4K,EAAX5E,KAAIE,SAAiB,EACnC5F,EAAGiN,OAAHtN,EAA6B2K,EAAlBD,KAAO3E,SAAW4E,EAC9BnH,EAAAsL,aA+BA,yCA3BL,IAAAoB,EAAAlR,KA+BEA,KAAKwG,SAAU,EACfxG,KAAK6D,OAAQ,EAEbwI,MAAM7B,MAAM2G,QAAU,OA/BtB7E,UAAM2E,MAAAA,QAAgBF,QAEtB1P,KAAGwL,WAAH,EACExL,WAAI+F,YAAU4J,KAAdnE,WAEAxL,aAAIiB,MAAYmI,MAAhB,QAEApJ,KAAGwJ,WAAS7C,WAAZoJ,MAEA/P,KAAGmG,QAAH,IAAeQ,QAEf3G,aAAAgQ,UAAA,GACFhQ,IAAG,IAACgG,EAAJ,EAAAN,EAAA/G,KAAAwH,QAAAmD,OAAA5D,IAAA,CACA1F,IAAIM,EAAJoK,SAAgBjK,cAAhB,OACAT,EAAIO,UAAJ4N,IAAA,qBACAnO,aAAQ2P,YAAeC,GAoCvBjR,KAAK0E,QAAQjC,QAAQ,SAAC+N,GACpBA,EAAOjQ,QAAU,KAEnBP,KAAK6E,UAAUpC,QAAQ,SAACgO,GAnCdA,EAAAlQ,QAAA,GAqCRkQ,EAASjQ,GAAK,IAnCdR,KAAA0E,QAAK4J,GACLtO,KAAA6E,UAAA,GAsCF7E,KAAKgF,SAAW,GArCdhF,KAAAqK,OACDrK,KAAEqK,KAJH9J,QAAA,GAMFP,KAAAqK,KAAA,MAwCE2C,UAAUxC,MAAM8G,OAAS,OAvCfzB,OAAAJ,UAAAD,IAAA,OACVzC,MAAAvC,MAAKhE,cAAL,OA4CA+F,YAAYkD,UAAUC,OAAO,OAE7B6B,SAAS9B,UAAUC,OAAO,OAE1B8B,UAAUxO,YAAc,GAxCxB6J,KAAAA,aAAW7J,EAEXsH,KAAAA,iBAAmBG,EAEnB1H,YAAK8H,YAAL,KAAAvH,OAA6B8N,KAA7BvG,WAAA,MA2CAoC,SAASjK,YAAT,OAAAM,OAA8BtD,KAAKuO,iBAAnC,MAzCmBsC,SAAnBY,IA2CEhO,WAAW,WAzCb+I,GAAA,IAAAA,EAAAA,iBAiDM,OANA0E,EAAK9G,cAAgB,EA1C3B8G,EAASnK,SAAQmK,EAAG9G,cAElBsH,EAAMjC,oBAGRyB,EAAAS,eACA,OAAAT,EAAKxM,kBAAgB,EACnB8L,SAAOjQ,YAAPiQ,OAAAA,OAAAU,EAAA3C,iBAAAiC,KADFU,EAAA3C,kBAGA,KAAK1J,EACH4L,YAAAzN,YAAA,uBACAyN,MAFF,KAAA,EAIK/L,YAAL1B,YAAA,oBACK6B,MACL,KAAKG,EA6CGjC,YAAYC,YAAc,aAK9BkB,UAAU,QAAS,MACnBuN,KA7CJzE,KAEA6C,GA+CA3L,UAAU,QAAS,OA7CnB6I,UAAMvC,QAAMoH,KAAAA,KAAgB,KAE5BrF,WAAAA,QA+CAlB,WAAWwG,YAAc,EA7CzBN,IAAAA,OA+CArG,IAAI4G,OAAS,GAEb1E,cAAcqC,UAAUC,OAAO,OA7C/BrC,YAAKjD,UAAesF,OACpB,OA8CApC,YAAYmC,UAAUD,IAAI,OA7C1BK,OAAKtB,UAAAA,OAAL,OAGAtB,IAAAA,EAASjK,qDA8CT+O,WAAWV,UAAYW,EA7CvBC,aAAMR,UAAkBO,EACtBvO,aAAAA,UAAWuO,EACTE,aAAIb,UAAK9C,EAgDbvO,KAAK8O,gBAAiB,oCA5ChB9O,KAAAwG,SAAK2L,EAiDXnS,KAAK6D,OAAQ,EA9CP,KAAA7D,KAAAoK,aACD0C,WAAA9J,YAAA,KACD8J,WAAKyB,YAAAA,KAALM,gBAqDJuD,cAAcpP,YAAchD,KAAK6M,WAnD7BM,aAAAnK,YAAauL,KAAAA,QAAb8D,UAEItP,OAAAA,UAAAA,OAAYC,OAsDpBuJ,YAAYkD,UAAUD,IAAI,OAnDlBzM,SAAAA,UAAAA,IAAYC,OAuDpB0J,KAAK+C,UAAUD,IAAI,OApDXzM,UAAAA,MAAAA,OAAYC,OAwDpB+J,MAAMvC,MAAMoH,cAAgB,OAtDtB5R,KAAAsS,mBACExL,aAAA9G,KAAAwO,gBAXJ1H,aAAA9G,KAAA0O,cAoEJ5H,aAAa9G,KAAK2O,wDAjFlB3O,KAAAoK,eAsFApK,KAAK2D,SAAW3D,KAAK2D,QAxDrB8N,KAAAA,SACAvN,aAAUlE,KAADwO,gBACTtK,aAAUlE,KAAD0O,cA0DP5H,aAAa9G,KAAK2O,oBAxDpBtD,aAAWF,KAAXP,uBAEAM,KAAIqH,eACJrH,KAAI4G,eA0DG9R,KAAKqK,MAtDZiD,KAAAA,cACMtN,KAACyP,KAAPxO,eA0DM6F,aAAa9G,KAAKqK,KAAKlJ,aAxDvB6Q,KAAAA,KAAAA,WAENC,aAAaZ,KAAbhH,KAAyB2H,gBACzBQ,KAAAA,KAAanB,cARbjE,KAAAA,6DAuEA,IAvDA/C,EAuDMoI,EAAOzS,KAAK6K,WACZ6H,EAAQ1S,KAAKoK,aACbuI,EAAU3S,KAAK6M,WA1DrBnK,EAAA1C,KAAewH,QAAf6K,UAIAhI,EADA,KAAAqI,GAAA1S,KAAAqK,KACA,KACIrK,KAAKoK,gBAERwI,MAFDC,IAEO,wGAAA,CACL/F,OAAAA,CACD2F,KAAAA,EA4DGC,MAAAA,EA3DJN,QAAAA,EACAjF,OAAAA,EA6DI9C,KAAAA,KAzDJkC,KAAAA,SAAAA,GA6DE,IAAMuG,EAAOC,EAAID,KA3DnBvB,WAAS9B,UAAT8B,gBAAAA,OA6DSuB,EAAKE,KA7DdzB,+BAAAA,OAEe/B,EAAIyD,aAFnB1B,+DAOAqB,MAAAC,IAAKP,uGACLxL,KAAAA,SAAAA,GACAA,IAAAA,EAAaiM,EAAKrE,KAClB5H,EAAkB6H,EAAAA,UAEpBuE,EAAAJ,EAAAK,WA4DYC,EAAgBN,EAAKO,UACvBC,EAAgB,GACpB,SAASC,EAAcd,EAAMe,EAAMC,EAAK/Q,EAAQ2H,GAC9CiJ,EAAa,yCAAAhQ,OA7DKmP,EA6DL,oIAAAnP,OA3DDkQ,EA2DC,uKAAAlQ,OAvDCsH,EAuDD,2KAAAtH,OAYkBZ,EAZlB,yKAAAY,OAhDf+G,EAgDe,oHA3CbvD,EAAAA,WAAAA,EAAAA,mBAAa4M,IACbzB,aAAAZ,UAAAiC,EACDC,EAAAI,WAAA,EAAAC,mBAAAV,IACFV,aAAAnB,UAAAiC,EACFC,EAAAI,WAAA,EAAAC,mBAAAR,IACFlB,aAAAb,UAAAiC,2CAEc,IAAAO,EAAA7T,KAEbA,KAAM2S,OACN3S,KAAA2O,mBAAoBnH,WAApB,WAGE6C,IAAIyJ,GAFND,EAAIxJ,uBAAJ,EAC+B,IAA3BqI,EAAK9D,yBAIRkF,EADKD,EAAGrM,QAAKqH,OAAAA,EACb/C,MAAAzI,UAAA,EAAA,IACSyI,MAAAzI,UAAA,EAAA,IAENoP,EAAAA,KADM,IAAAsB,KAAA,CAENrB,IAAAA,SAAAA,OAFMoB,EAENpB,QACAC,YAAAA,kBACAjQ,gBAJMW,UAAA,EAAA,OADVwQ,EAAAjF,sBASe,KAEbmD,EAAAA,gBAXF,8CAmFc,IAAAiC,EAAAhU,KACdA,KAAKwO,eAAiB/K,WAAW,WAlEjCmP,GAAU,IAAVA,EAAArE,iBAII,OAFAyF,EAAMlB,cAAN,OACAkB,EAAMN,SAAAA,EAAatJ,cAGnB4J,EAAAzF,kBAAA,EAmEFtB,SAASjK,YAAT,MAAAM,OAA6B0Q,EAAKzF,iBAAmB,GAAxB,IAAAjL,OAAiC0Q,EAAKzF,kBAAqByF,EAAKzF,iBAA7F,KAlEEyF,EAAAC,iBACEX,2CAqEM,IAAAY,EAAAlU,KA/CRuT,KAAAA,aAAa9P,WAAb,WACAwO,EAAAA,iBAAA,EACAsB,IAAAA,EAAarR,KAAbiS,MAAAD,EAAArF,gBAAiBqE,IACjBV,EAAanB,EAAbxC,gBAAA,GACA0E,EAAaa,EAAb,GAAa,IAAA9Q,OAAb8Q,GAAiBhB,EACjBlB,EAAab,EAAYiC,GAAZjC,IAAAA,OAAYiC,GAAzBe,EACDpH,SApCHjK,YAoCG,GAAAM,OApCHgR,EAoCG,KAAAhR,OApCHiR,EAoCG,KAELL,EAAAM,eAgDK,mDAGiB,IAAAC,EAAAzU,KAlDPA,KAAAyO,eAAAhL,WAAA,WAoDX,IAAIgR,EAAK9Q,SAAY8Q,EAAKjO,QAA1B,CAhDA,IAAAkO,EAAK9F,aAAAA,YAqDL,GAAI8F,EAAS,IAAK,CAnDlB,IAAIC,EAAK/F,EAAAA,EACPtE,aAAIwJ,MACJrJ,MADA,GAAAnH,OACAqR,EADA,MAEAF,EAAA1E,2BARJ0E,EAAA1E,uBASM+D,4CAGD,IAAAc,EAAA5U,KAqDL+C,YAAYC,YAAc,GAlDpB9C,KAAAA,oBAAasN,WAFM,WAGnBrN,EAAAA,gBAHmB,sCAOtB0U,GAAA,IAAAC,EAAA9U,KAAA4H,EAAA,EAAAG,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,EAsDHtE,WAAW,WArDT,OAAIoR,GAnB8B,IAApC,SAsBFC,EAAApQ,QAAAH,KAAA,IAAAI,OAAA,CAsDUzE,YAAamD,UAAUmK,kBAAoB,EAAGA,mBAC9CrN,gBAAiBkD,UAAU,EAAG,KAC9BxC,kBAAoBwC,UAAU,EAAG,GAAK,GACtCjD,OAAQiD,UAAU,EAAG,QAEvB,MAxDJ,IAAI,WA4DA,IAAM0R,EAAQ1R,UAAU,EAAG,KA1D7ByR,EAAAjQ,UAAAN,KAAc,IAAK6F,SAAAA,CA4DflK,YAAamD,UAAUmK,kBAAoB,EAAGA,mBA3DlDrN,gBAAA4U,EACDlU,iBAAAwC,UAAA,EAAA,GAAA,GA6DKjD,OAAQ2U,KA3Dd9H,MACA,IAAA,UACC,IATH6D,EAAAzN,UAAAmK,kBAAA,EAAAA,kBAAA,KAUDzI,EAAA1B,UAAA,EAAA,KA+DajD,EAASiD,UAAU,EAAG,KAC5ByR,EAAK9P,SAAST,KAAK,IAAIU,QAAQ,CAC7B/E,YAAa,CAhETgF,MAAA4L,EAkEF3L,IAAK2L,EAjEVpC,MAAAA,GAEG2F,gBAAeF,CACfC,MAAAA,EACAG,IAAAA,EACAD,MAAAA,GAoEAlU,OAAQ,CAlEV8E,MAACsP,EAPPrP,IAAA/E,EAUFgF,MAAAhF,GAoEUE,QAAS+C,UAAU,EAAG,GAAK,QAhE1B0M,IAALnI,qCAED8K,EAAA9K,GAyEH4J,UAAUxO,YAAV,QAAAM,OAAgCoP,GAxE9B1S,KAAAuO,iBAAejE,EA0EjB2C,SAASjK,YAAT,MAAAM,OAA6BtD,KAAKuO,iBAAlC,KAzEEvO,KAAAiU,iDAGCvB,GA2EH,OAAQA,GA1EN,KAAA,EAV8B1S,KAAhCgV,UAAA,KAAA,IAeAjS,KAAAA,SAAYC,SAAc,GAE1B,MA+EE,KAAK,EA9EPhD,KAAK4K,UAAAA,KAAAA,IACH5K,KAAAiV,SAAKtD,WAAL,GADmC3R,KAAAiV,SAArC,UAAA,IAIF,MA+EI,KAAK,EACHjV,KAAKgV,UAAU,KAAM,IACrBhV,KAAKiV,SAAS,UAAW,GACzBjV,KAAKiV,SAAS,SAjFXJ,GAAmB7U,KAAAiV,SAAA,UAAA,IAmFtB,MAnFsB,KAAbrN,EACbnE,KAAAA,UAAW,KAAM,IACfzD,KAAAiV,SAAA,SAAA,GACEjV,KAAAiV,SAAK,WAAL,GAAejV,KAAAiV,SAAA,UAAA,IACbjV,KAAAiV,SAAKvQ,WAAL,IACExE,KAAAA,SAAAA,UAAamD,IACblD,MACAU,KAAAA,EACAT,KAAAA,UAAM,KAAEiD,IAJmBrD,KAAAiV,SAA7B,SAAA,GA2FFjV,KAAKiV,SAAS,SAAU,GArFtBjV,KAAAiV,SAAA,UAAA,IACDjV,KAAAiV,SAAA,WAAA,IAuFD,MAtFA,KAAA,EAAiBjV,KAAAgV,UAAA,KAAA,IACfhV,KAAAiV,SAAA,WAAA,GACAjV,KAAAiV,SAAMF,WAAQ1R,GAyFhBrD,KAAKiV,SAAS,SAAU,IAxFtBjV,KAAAiV,SAAKpQ,SAAUN,IACbrE,KAAAA,SAAAA,UAAamD,IACblD,MACAU,KAAAA,EACAT,KAAAA,UAAM,KAAE2U,IAJuB/U,KAAAiV,SAAjC,SAAA,GA+FFjV,KAAKiV,SAAS,WAAY,GAzFxBjV,KAAAiV,SAAA,SAAA,IACDjV,KAAAiV,SAAA,WAAA,IA2FDjV,KAAKiV,SAAS,UAAW,IA1FzBjV,KAAAiV,SAAK,UAAL,IAAgBjV,KAAAiV,SAAA,WAAA,IACdjV,KAAAiV,SAAMnE,WAAUzN,IAChBrD,KAAAiV,SAAMlQ,UAAc1B,IACpBrD,KAAAiV,SAAM7U,SAASiD,IA6FjB,MA5FE,KAAA,EACEnD,KAAAA,UAAAA,KAAa,IACXgF,KAAAA,SAAAA,SADW,GAEXC,KAAAA,SAAG,WAFQ,IAGXC,KAAAA,SAAAA,UAAO0L,IAHI9Q,KAAAiV,SADgB,SAAA,IAM7B9U,KAAAA,SAAAA,UAAiB,IACf+E,KAAAA,SAAAA,WAAOH,IACPI,KAAAA,SAAG,UAAEJ,IACLK,KAAAA,SAAAA,WAAOL,IAHQ/E,KAAAiV,SANY,SAAA,IAW7B7U,KAAAA,SAAM,UAAE,IACN8E,MACAC,KAAAA,EACAC,KAAAA,UAAK,KAAEhF,IAHDJ,KAAAiV,SAXqB,SAAA,GAgB7B3U,KAAAA,SAAAA,WAAkB,GAhBWN,KAAAiV,SAA/B,WAAA,GA+GFjV,KAAKiV,SAAS,UAAW,IA7FvBjV,KAAAiV,SAAA,SAAA,IACDjV,KAAAiV,SAAA,UAAA,IA+FDjV,KAAKiV,SAAS,SAAU,IA9FxBjV,KAAAiV,SAAA,WAAA,IACE,MA9CJ,KAAA,GADQzD,UAiDAxO,YAjDV,UAmDF,IAAAI,EAAAC,UAAA,EAAA,KA+FMrD,KAAKqK,KAAO,IAAIxK,KAAK,CACnBK,YAAamD,UAAUoK,MAAQ,EAAGA,MAAQ,KAC1CtN,gBAAiBiD,EACjBhD,OAAQgD,EAjGNsP,KAER1S,KAAKuO,cAsGLrK,UAAU,QAAS,gDA/FjB,QAAA2G,WAAAuG,QAIEvG,WAAA4E,UAAAD,IAAA,QACAtL,UAAA,QAAA,MACAA,UAAA,QAAA,KAAA,KAAA,MACA,YAMA,SAAAgR,aACAxR,KAAA,IAAA0K,KACAV,aAqGNhK,KAAKyR,OAjGCjG,OAAAH,iBAAc,OAAdmG,YACAhG,OAAAH,iBAAc,SAAdrB,YAIA,IAAAqD,aAAKkE,GACL3L,eAAK2L,EACL,SAAAjG,gBAAcoG,GACdrE,aAAKkE,EAAAA,EAALlU,EAAcyK,GAAA,EACduF,aAAKkE,EAAAA,EAALjU,EAAcyK,GAAA,EACd,IAAAsJ,EAAA7S,KAAAmT,MAAAtE,aAAA/P,EAAA+P,aAAAhQ,GAuGNuI,eAAiByL,EAAQ,EAAKA,EAAQ,EAAI7S,KAAKC,GAAM4S,EApG/C,IAAAO,gBAAKL,IAASvU,KACd,SAAAuO,cACAvL,KAAAC,SACAD,KAAA8D,QAAKyN,QAEP,SAAA9F,YAAAiG,GACE,GAAA1R,KAAA8C,QACKyO,MAALG,EAAAG,KACA7R,KAAA8D,QAAKyN,QAEAA,MAALG,EAAAG,KACA7R,KAAA8R,iBAEF,GAAA,UAAAJ,EAAAG,IAAA,CACE,IAAA7R,KAAKsR,kBAAL,OACAtR,KAAA4L,YAGK2F,MAALG,EAAAG,MACA7R,KAAA+R,SAAKR,KAASQ,QACdvK,IAAAwK,OAAKT,IAAAA,MACL5J,WAAK4J,OAAS5J,WAAdqK,OAIA,SAAAtG,mBA0GNvE,WAAWkE,iBAAiB,QAAS,WAzGjClE,WAAA4E,UAAAC,OAAA,SACE7E,WAAKmK,UAAUtF,OAAM,UAGrB7E,WAAAkE,iBAAc,WAAd,WACAlE,WAAKoK,OACLpK,WAAKoK,UAASzF,IAAA,WAId3E,WAAAkE,iBAAc,QAAd,WACAlE,WAAKoK,MACLxI,SAAAgD,UAAAD,IAAA,SACF/C,SAAAgD,UAAAC,OAAA;uZClyBAzK,mBACJ,SAAAA,EAAYnF,GAAMC,gBAAAC,KAAAiF,GAChB,IAAMhF,EAAM,CACVC,YAAa,CACXgF,MAAO,EACPC,IAAK,EACLC,MAAO,GANTH,gBAQiB,CACfC,MAAO,EACPC,IAAK,EATXC,MAAA,GAYIhF,OAAQ,CAXJH,MAAM,EACVC,IAAAA,EACEgF,MAAO,GAEPE,GAAAA,CAJQF,MAAA,EAMV/E,IAAAA,EACE+E,MAAO,GAEPE,aAAO,EAHQ9E,QANP,EAWVF,MAAM0B,YAAEE,IAENmD,cAFM,EAGNC,MAAK,EAHCzE,aAXE,EAgBVH,gBAAI,GAEF2E,OAAGY,OAFD9F,EAAAH,GAGFsF,OAAAA,OAAOpF,KAAAC,0DAIJ4U,GACL,MAAA,CACAc,EAAAA,MAAY,EAAE3V,KAzBJE,YAAA2U,GAAA3S,KAAAmE,IAAArG,KAAAG,gBAAA0U,GAAA3T,SA0BVb,EAAAA,MA1BU,EAAAL,KAAAE,YAAA2U,GAAA3S,KAAAoE,IAAAtG,KAAAG,gBAAA0U,GAAA3T,yCAgCblB,KAAAQ,GAAA0E,OAaG7D,IAAIK,OACJL,IAAI+F,UAAUpH,KAAKc,UAAU,SAASC,EAAGf,KAAKc,UAAU,SAASE,GACjEK,IAAIjB,OAAOJ,KAAKI,OAAO8E,MAAQhE,SAC/BG,IAAIhB,MAAML,KAAKK,MAAOL,KAbhB6U,OAEN9T,IAACa,YACDZ,IAACW,UAAE3B,KAAcsF,MAFZjE,IAAPC,OAAA,GAAAY,KAAAmE,IAAA,EAAAnF,SAAA,GAAAgB,KAAAoE,IAAA,EAAApF,UAIDG,IAAAkF,WAAA,GAAA,IAcGlF,IAAIkF,WAAW,GAAI,KACnBlF,IAAIkF,WAAW,GAAI,KACnBlF,IAAIkF,WAAW,GAAI,KAZrBlF,IAAIkF,WAAQrB,GAAO,KACjB7D,IAAAA,YACAA,IAAAA,OAEAA,IAAAA,YAcAA,IAAIM,UAAY,4BAZhBN,IAAAA,OAAIO,KAAJ,GACAP,IAAAA,WAAA,GAAgB,KAChBA,IAAAA,WAAW,GAAKa,GAChBb,IAAAA,WAAIkF,GAAJ,IACAlF,IAAAA,WAAIkF,GAAJ,IACAlF,IAAAA,YACAA,IAAAA,OAEAA,IAAAA,YACAA,IAAAA,UACA,4BAaAA,IAAIC,OAAO,GAAKY,KAAKmE,IAAI,GAAKnF,SAAU,GAAKgB,KAAKoE,IAAI,GAAKpF,UAZ3DG,IAAAA,WAAA,GAAA,IACAA,IAAAA,WAAA,GAAgB,KAChBA,IAAAA,QAAA,IAAA,GACAA,IAAAA,YACAA,IAAAA,OAEAA,cAAIkF,CACJlF,GAAII,GACJJ,GAAIQ,KAEJR,IAAAA,YAGAA,KAAIkF,GAAAA,MACJlF,IAAIkF,OACJlF,IAAIG,UAAQxB,KAAZc,UAAA,OAAAC,EAAAf,KAAAc,UAAA,OAAAE,GACAK,IAAII,OAAAA,KAAJrB,OAAA+E,IAAAjE,SAeEG,IAAIO,YAZNgU,IAAAA,UAAc5V,KAAAsF,MACZvE,IAACO,OADW,GAAAY,KAAAmE,IAAA,GAAAnF,SAAA,GAAAgB,KAAAoE,IAAA,GAAApF,UAEZF,IAACuF,WAAG,GAAA,KAFQlF,IAAdkF,WAAA,GAAA,KAIAlF,IAAIgG,WAAJ,GAAA,KAxCFhG,IAAAI,YA0CEJ,IAAAQ,OAEER,IAAAA,UAAA,4BACAA,IAAAA,YACAA,IAAAA,QAAA,IAAW,GAcXA,IAAIkF,WAAW,IAAK,IAZpBlF,IAAAA,WAAA,GAAA,IACAA,IAAAA,WAAA,GAAgB,KAChBA,IAAAA,YACAA,IAAAA,OAEAA,cAAIkF,CACJlF,GAAII,GACJJ,GAAIQ,GAcD,IAZHR,IAAAA,WAGAA,KAAIkF,GAAAA,QACJlF,IAAAA,OACAA,IAAAA,UAAIkF,KAAJzF,UAAA,SAAAC,EAAAf,KAAAc,UAAA,SAAAE,GACAK,IAAAA,OAAII,KAAJrB,OAAAgF,MAAAlE,SAeAG,IAAIO,YAZJgU,IAAAA,UAAc5V,KAAAsF,MACZvE,IAAAA,OADY,GAAAmB,KAAAmE,IAAA,GAAAnF,SAAA,GAAAgB,KAAAoE,IAAA,GAAApF,UAEZF,IAAAA,WAAI,GAAA,KAFQK,IAADkF,WAAb,GAAA,KAIAlF,IAAAA,WAAA,GAAA,GACDA,IACDI,YAaEJ,IAAIQ,OAZNR,IAAIO,YACFP,IAAAA,UAAA,4BACAA,IAAAA,OAAI+F,GAAUlF,KAAKpB,IAAAA,GAALI,SAAwBH,GAAGmB,KAAKpB,IAAAA,GAAUI,UACxDG,IAAAA,WAAW,IAAKjB,IAehBiB,IAAIkF,WAAW,GAAI,IAbnBlF,IAAAA,YACAA,IAAAA,OAEAA,IAAAA,YACAA,IAAAA,UAAA,4BACAA,IAAAA,OAAIkF,KAAW,GACflF,IAAAA,WAAA,GAAA,KACAA,IAAAA,WACA,GAAA,GAcAA,IAAIkF,WAAW,GAAI,IAbnBlF,IAAAA,WAAA,GAAA,IACAA,IAAAA,YACAA,IAAAA,OAEAA,cAAIkF,CACJlF,EAAG,GACHA,GAAIQ,GAeD,IAbHR,IAAAA,2CAMAA,GAKEN,GAJFM,KAAAA,aAAArB,KAAA2C,OAAA3C,KAAA4E,gBACAvD,KAAAA,aACA,EAcJsE,aAAac,SAASzG,MAZhBe,KAACP,GAAE0E,MACHlE,KAAAA,OAAIkE,MAAAlF,KAAAI,OAAA+E,IAAAnF,KAAAI,OAAAgF,OAAApF,KAAAM,QAENe,KAAAA,SAAAsE,aAAAmD,WAAApF,KAAAsB,SAAApC,EAAA,QAAA5C,KAAAE,YAAAgF,MAAAlF,KAAAG,gBAAA+E,WACD,CAiBD,GAAIlF,KAAK2V,aAAc,CAXzB,IAAKhV,EAAgCiE,IAAZjC,KAALsE,SAAiBrC,GAArC,EACA3B,UAAKtC,GAAAA,KAAcR,gBAAnB,IAAA,CACAwF,IAAAA,KAAAA,OAAac,UAAS,GAHZ,IAIVoP,GAcMzQ,MAAK,KAAA9B,OAAOD,UAAU,GAAI,IAAMwS,GAblC1S,KAAK3C,KAAG0E,UAgBRjC,UAAUC,GAAGlD,KAAKE,YAAa,IAAK,CAbtCwD,IAAK8C,KAAAA,OAALnD,UAAgBsC,GAAAA,MAHlBP,MAIO,KAAA9B,OAAAD,UAAA,GAAA,MACLF,KAAA2S,KAAAhS,UAEAb,UAAS0S,GAAAA,KAAAA,OAAc,IAAA,CACrBxQ,IAAA,KAAA7B,OAAAD,UAAA,IAAA,MACA+B,MAAA,KAAA9B,OAAAD,UAAA,IAAA,MACAF,KAAM0S,KAAAA,UAGJzQ,KAAAA,cAAK,EAGPnC,KAAAA,GAAAA,MAEEmC,KAAAA,OAAKD,KAAiB,IAAjBnF,KAAOqD,QACZF,aAAM2S,WAAKhS,KAAAA,SAAAA,EAAAA,MAAAA,KAAAA,YAAAA,IAAAA,KAAAA,gBAAAA,MAGXqB,KAAG3E,GAAA4E,QAEHjC,KAAAA,OAAM2S,OAAKhS,IAAAA,KAAAA,QAHkB6B,aAK/BmD,WAAApF,KAAAsB,SAAApC,EAAA,QAAA5C,KAAAE,YAAAkF,MAAApF,KAAAG,gBAAAiF,wCAIFR,GAqBF,GApBI7B,YAAAC,YAAA,oBACAC,UAAAC,GAAK9C,KAAO+E,GAAZ,CACAQ,MAAAA,EACDxC,KACD+D,KAAApD,QAAAqD,OAAA,OAgBEvC,EAAgB,CAflB,IAAIxB,EAAQgC,UAAO,GAAA,IACjB2Q,EAAA1S,UAAA,GAAA,IACAJ,UAAK7C,GAAAA,KAAOgF,gBAAc9E,IAAU,CACpCqF,MAAAA,KAAAA,OAAAA,GACDR,IAAA,KAAA7B,OAAAF,GACFgC,MAAA,KAAA9B,OAAAF,GACFD,KAAA6D,OAAAlD,UAkBGb,UAAUC,GAAGlD,KAAKE,YAAa,IAAK,CAClCgF,MAAK,KAAA5B,OAAOyS,GAfhBhT,IAAAA,KAAAA,OAAYC,GACZC,MAAAA,KAAAA,OAAa8S,GACX1V,KAAK2G,OADiBlD,UAoBxBJ,KAAK8C,SAAWtC,UAAU,QAAS,KAAM;uZCxOvC6P,gBACJ,SAAAA,EAAYjU,GAAMC,gBAAAC,KAAA+T,GAChB,IAAM9T,EAAM,CACV+V,IAAK,IAAIC,MACTC,IAAK,GACLhW,YAAa,EACb8F,aAAc,EAPpB7F,gBAAA,EACM4T,EAQG,IAELxS,OAAOwE,OAAO9F,EAAKH,GATrByB,OAAAwE,OAAYjG,KAAMG,uDACVA,KAAM+V,IAAAE,MAIVlQ,KAAAA,IAAAA,IAJUhG,KAAAkW,KAMTlW,KAAEgW,IAAAG,WANL9U,IAAAK,OAQAH,IAAM6F,UAAQnH,UAAdD,KAAAE,YAAAF,KAAAG,iBAAAY,EAAAD,UAAAd,KAAAE,YAAAF,KAAAG,iBAAAa,GAEDK,IAAA+U,UAAApW,KAAAgW,IAAA,EAAA,GAeG3U,IAAIO,YACJP,IAAIgB,YAAc,2BAdpBhB,IAAIkB,IAACvC,KAAAgW,IAALvL,MAAmB,EAAAzK,KAAAgW,IAAAnI,OAAA,EAAA7N,KAAA6F,EAAA,EAAA,EAAA3D,KAAAC,IACjBd,IAAAmB,SACAnB,IAAAgG,4CAmBF,IAAKrH,KAAKgG,aAAc,CAfxB,IAAI4B,EAASuO,UAAU,EAAA,GACrB9U,KAAG2E,cAAHwH,mBAAA5F,EAAAE,WAkBF9H,KAAKE,aAAeF,KAAKgG,aAbvB,IAAAwB,EAAA9D,KAAA8D,QACAnG,GAAAA,KAAIO,YAAJ5B,KAAA6F,GAAA2B,EAAA3B,EAAA2B,EAAAC,cAAA,EAAA,CAEApG,KAAGqL,KAAK,GACRrL,IAAImB,EAAJxC,KAAAkW,IAAAG,QAAA,SAAA,IAAAC,MAAA,KAAA,GACAjV,EAAIgG,QAAJyM;uZChCAjD,mBACJ,SAAAA,EAAY/Q,GAAMC,gBAAAC,KAAA6Q,GAChB,IAAM5Q,EAAM,CACVqF,MAAOxD,YAAYC,MAEnB8D,EAAG,KAEH8D,QAAS,GAETlC,cAAe,EARnBmC,YAAY9J,EAAMiF,YAAA,EAYdxE,QAAS,GAXX8R,UAAY,EACV/M,OAAOxD,EACPsH,MAAA,GACAvD,YAHU,EAIVoE,WAAA,EACAN,gBALU,IAAAjJ,MAOV+G,OAAAA,OAAAA,EAPU3H,GAQVyB,OAAAwE,OAAA/F,KAAAC,uDAGAM,GAAAA,KAAOiG,SAXG9C,KAAAG,MAWVtD,CACA8R,IAAAA,OAEAjJ,IAAAA,UAdUsC,MAAA,EAAA+B,MAAA,GAeVlD,IAAAA,OACAN,IAAAA,YACAqL,IAAAA,YAAe,2BAjBLjU,IAAZiH,WAAA,GAmBA/G,IAAAA,UAActB,KAAKH,cACnByB,IAAAA,IAAOwE,EAAAA,EAAO/F,KAAd6F,EAAoB5F,EAApB,EAAAiC,KAAAC,IACDnC,KAAAuK,YAeGlJ,IAAIgB,YAAcP,YAAYE,IAC9BhC,KAAKuK,YAAa,GAHlBlJ,IAAIgB,YAAcrC,KAAKsF,MAVzBjE,IAAAA,SAEAA,IAAAA,YACAA,IAAAA,OAAA,EAAA,GACAA,IAAAA,WAAArB,KAAA6F,EAAA,EAAA7F,KAAA+E,aACA1D,IAAAA,OAAIuH,EAAAA,GACJvH,IAAAA,WAAIiH,KAAazC,EAAjB,IAAA7F,KAAA+E,aACA1D,IAAAA,OAAIiB,EAAAA,GACJjB,IAAAA,WAAArB,KAAc6F,EAAd,IAAyB3D,KAAKC,aAC9Bd,IAAAiB,UAAUiI,KACRlJ,IAAAA,SACDA,IAFDgG,UAIEhG,IAAAgB,YAAKkI,KAAajF,MAEpBjE,IAgBA,IAAMkV,EAASvW,KAAK6F,EAAI,GAhBpBrD,EAAJ,EACAuE,EAAA,IAAAA,GAAA,EAAA,CAiBE,IAAMyP,EAAKD,EAASrU,KAAKmE,IAAIU,EAAI7F,QAAUlB,KAAK+E,aAhB9CnD,EAAAA,EAAJM,KAAAoE,IAAAS,EAAA7F,QAAAlB,KAAA+E,aACIzD,EAAOiV,EAAXrU,KAAAmE,KAAAU,EAAA,GAAA7F,QAAAlB,KAAA+E,aACIwB,EAAAA,EAAgBV,KAApBS,KAA0BS,EAAKhC,GAAAA,QAA/B/E,KAAA+E,aACIzD,EAAAA,GAAJ,IACAD,IAAIkF,YACJlF,IAAIC,OAAJkV,EAAAC,GACApV,IAAIkF,OAAAA,EAAWmQ,GAkBXrV,IAAIiB,UAAY,EAhBpBjB,IAAIiB,UAIJjB,IAAAA,YAkBAA,IAAIiB,UAAYtC,KAAK4J,YAEF,WAAf5J,KAAKoJ,MAjBT/H,IAAAkB,IAAK,EAAK,EAAVvC,KAAiB2J,QAAS,IAAOzI,QAAAlB,KAAA+E,YAAA,IAAA7D,QAAAlB,KAAA+E,aAE/B1D,IAAAkB,IAAQ,EAAGgU,EAAAA,KAAM5M,QAAG,GAAazI,QAAUlB,KAAK+E,YAAhD,IAAA7D,QAAAlB,KAAA+E,aAEA/E,KAAQiK,WAEN5I,IAAAA,YAAAS,YAAAG,KACAZ,KAAAA,WAAA,GAgBFA,IAAIgB,YAAcrC,KAAKsF,MAdrBjE,IAAAA,SAEDA,IAAAO,YACFP,IACDK,OAmBAL,IAAIuH,YAAc,2BAClBvH,IAAIiH,WAAa,GAnBjBjH,IAAAA,OAAIO,KAAJmD,aACA1D,IAAAA,UAAIiB,KAAYuD,EAAK+D,EAAAA,GAqBrBvI,IAAIC,OAAO,EAAG,GAjBbD,IAFDG,OAEO,EAAA,KACLH,IAAAA,OAAA,KAAA,KACDA,IAAAG,OAAA,KAAA,KAqBDH,IAAIG,OAAO,MAAO,KApBlBH,IAAAG,OAAK,MAAKyI,KACR5I,IAAAA,OAAIgB,GAAAA,KACLhB,IAFDI,YAGEJ,IAAAA,UAAIgB,KAAJiD,MACAjE,IAAAQ,OACDR,IAAAgG,UAsBDhG,IAAIgG,UAEJrH,KAAKO,QAAQkC,QAAQ,SAACC,GArBtBrB,EAAIO,2CAIJP,KAAG0D,YAAaA,eAChB1D,KAAGd,QAAC6G,QAAevB,SAALnD,EAAdE,GACAvB,EAAIC,OAAUsB,qCAGVpB,IAAAA,EAAAA,KACAA,EAAJ,IAAAd,KACAW,GAAA,IAAAA,EAAWiU,gBAAX,CACAjU,IAAIG,EAGJH,EADA,WAAIG,KAAAA,MACJ,EAEA,EAEAH,IAAIgG,IAAAA,EAAJ,EACAN,EAAAsL,EAAAtL,IAsBuB,SAAf/G,KAAKoJ,MArBb3F,WAAahB,WACXC,EAAOkO,WAAP,EADFpN,EAAAjD,QAAAgE,KAAA,IAAAoS,cAAA,CA0BUzW,YAAa,KACb6E,YAAauE,kBAtBlBvE,UAAL,WAAmBuE,OACd/I,IAAQkC,GAAbgB,WAAA,WAGDD,EAAA6O,WAAA,EAyBS7O,EAAKjD,QAAQgE,KAAK,IAAIoS,cAAc,CAClCC,WAAYvT,UAAU,GAAI,IAC1BwT,SAAUxT,UA1Bd,EAAA,GAAA,GAAAyT,QAAAzT,UAAA,EAAA,GA4BI0T,SAAU1T,UAAU,EAAG,GAEvBnD,YAAa,KA5BnB8W,YAAY1B,kBA+BRpR,UAAU,OAAQ,KAAM,KAAM,GAAI,KA5BpC,IAAKkF,GAGPiJ,gBAAA2E,mCAEFlD,GAAU,IAENrQ,EAFMQ,EAAAjE,KAGJ,OAAA8T,GA+BN,IAAK,QA9BC9T,KAAAiX,eACEC,EAAA,EACAhX,YAAAA,YAFkC,cAGlC6E,MAHkC,IAAA,YAoCxC/E,KAAKmX,sBA/BDjT,EAAAA,EACDnB,YAAEC,YARH,SASD,MACCS,IAAAA,SACEyT,EAAI,KAiCRnU,YAAYC,YAAc,kBAhCtB,MACE4T,IAAAA,SACAC,EAAAA,IACAC,YAAAA,YAAkB,iBAClBC,MACA,IAAA,OACA7W,EAAAA,KACA6E,YAAAA,YAAauE,gBAPqB,MA0C1C,QAjCMpF,EAAAA,EAGLlE,KAAAoJ,MAAA0K,EAaD9T,KAAAoX,gBAAAtD,EAAAoD,GACOC,cAALrD,IACAoD,UAAAA,QAAA,MACAnU,UAAAA,QAAYC,KAAAA,KAAc,MAfVgU,SAAlB1B,IACD7R,WAAA,WACFC,KAAA8C,UAoCS9C,KAAKC,QACP0T,IAGe,GAvCLH,GAAA,KAChBG,KAyCQpT,EAAKmF,MAAQ,GAtCnB1F,KAAKyO,kBAGHpP,KAgDJsU,iDAtCI,IAAAC,EAAA,EA2CEjN,EAAO3G,KAAK2G,KAuElBxB,sBAjHO,SAALV,IACE+O,KAAAA,UACAnU,GAAYC,GA6Cd3B,IAAIK,OA3CJL,IAAAO,YACEsV,IAAAA,YAAW,4BACXnU,IAAAA,WAAYC,EA8Cd3B,IAAIgB,YAAJ,uBAAAiB,QAA0C,IAAMgU,GAAiB,GAAjE,KA5CAjW,IAAAM,UAAA,uBAAA2B,QAAA,IAAAgU,GAAA,IAAA,KACEJ,IAAAA,UAAA,EAKJ,IAAMG,EAAAA,IAAgB7O,QAAhB6O,GAAAA,EAAsB,GAAA,GAAA,GAAA,GAC1B5T,IAAAA,IAAAA,MAAW,EAAAgK,MAAM,EAAA9E,EAAA,EAAA,EAAAzG,KAAAC,IACfd,IAAAQ,OA+CFR,IAAImB,SA9CFnB,IAAAgG,UAEC3D,KAFDgB,QAEOjC,QAAA,SAAA+N,EAAA5N,GACLsU,EAAQ1G,EAARtQ,cAgDAyF,aAAayC,UAAUoI,EAAO3K,EAAG/E,UAAU0P,EAAOtQ,YAAasQ,EAAOrQ,iBAAiBY,EAAGD,UAAU0P,EAAOtQ,YAAasQ,EAAOrQ,iBAAiBa,EAAG,gBA/CnJ0C,KAAAgB,QAAIwS,OAActU,EAAA,MAGhBc,KAAAmB,UAAKuE,QAAQ,SAAAqH,EACb7N,GAgDA+F,EAAU8H,EAASvQ,cA/CnBwD,aAAKyO,UAAL1B,EAAA5K,EAAA/E,UAAA2P,EAAAvQ,YAAAuQ,EAAAtQ,iBAAAY,EAAAD,UAAA2P,EAAAvQ,YAAAuQ,EAAAtQ,iBAAAa,EAAA,gBACD0C,KAAAmB,UAAA2E,OAAA5G,EAAA,MAGNc,KACDsB,SAAAvC,QAAA,SAAAiO,EAAA9N,GAgDQ+F,EAAU+H,EAAQxQ,YAAYgF,QAC5BwL,EAAQlQ,GAAG0E,MAEbS,aAAayC,UAlDA0L,KAkDyBpD,EAAQ5P,UAAU,SAASC,EAAG2P,EAAQ5P,UAAU,SAASE,EAAG,gBAhDxGkD,EAAU1D,GAAS2E,MAEpBQ,aAAAyC,UAD0B,GAC1BsI,EAAA5P,UAAA,OAAAC,EAAA2P,EAAA5P,UAAA,OAAAE,EAAA,eAmDS0C,KAAKsB,SAASwE,OAAO5G,EAAK,IAhDtC8N,EAAAlQ,GAAA4E,QAoDYO,aAAayC,UADS,GACgBsI,EAAQ5P,UAAU,SAASC,EAAG2P,EAAQ5P,UAAU,SAASE,EAAG,eAClG0C,KAAKsB,SAASwE,OAAO5G,EAAK,KAlD9ByH,KAAIrF,SAAQqF,OAAlBzH,EAAA,MAEEc,KAAA2K,QAAU1K,QAAS,SAAAgN,EAAA/N,GACjB0U,EAAAA,EAAApX,aACDwD,KAAA2K,QAAA7E,OAAA5G,EAAA,KAGDvB,KAAIuH,MACAN,EAAJ+B,EAPmBnK,aAQnB,IAAAmK,EAAA7J,IAuDImF,aAAayF,gBApDjB/J,EAAA,KACAwH,sBAAAV,KA2DEkC,IACFA,EAAK7J,IAAM,GArDXa,UAAIQ,QAAJ,KAAA,6CAQG,IAAA6P,EAAA3F,SAAAwL,cAAA,OACF7F,EALDjC,UAAAD,IAAA,qBAMA9L,aAAKmB,YAAUpC,GACbzC,KAAA2K,QAAIhC,0CAEG9D,EAAU2E,GAChB,GAAA,cAAAsK,GAAA,UAAAA,EAAA,CACFpH,KALD+C,UAAAC,OAAA,OAMAhM,QAAIwS,IAAJxS,SAAAA,OAAcjB,EAAdiB,eACEwT,GAAIvO,IACFiE,aAAI8D,YAAWxL,GACPsS,SAANH,IAED5T,WAHD,WAIEC,KAAIgN,UACFhN,KAAAC,QACAgC,KAODuR,GAAA,EACFtK,aAAA5J,YAAA,IAAAkU,EAAAA,EAAA,IAAA5T,OAAA4T,GA0DCA,EAzDFxT,IAjBJgJ,KAAA+C,UAAAD,IAAA,UAsBI9L,KAEH2T,aAMAV,yBA2DL,SAAAA,EAAY7W,GAAMC,gBAAAC,KAAA2W,GA1Dd,IAAA1W,EAAIqX,CAEHG,QAAA,MACFvX,YArED,EAiIEoF,MAAOxD,YAAYC,MA3DrB8G,EAAAA,GA6DE9D,YAAa,EA5Df6R,WAAU,GACRvM,SAAA,GACDyM,QACD,EA6DEC,SAAU,GA5DZ7S,OAAAA,OAAUjE,EAADH,GAETyB,OAAAwE,OAAA/F,KAAAC,uDAGDoB,IACDK,OA6DEL,IAAI+F,UAAUsE,MAAQ,EAAG+B,MAAQ,GACjCpM,IAAIjB,OAAOJ,KAAK+E,aAEW,SAAvBrB,KAAK8D,QAAQ4B,OA7DjBsI,IAAAA,YACAlF,IAAAA,UAAakL,2BAEdrW,IAAAkB,KAAA,KAAAvC,KAAAE,YAAA,EAAA,KAAA,EAAA,EAAAgC,KAAAC,IAgEGd,IAAIQ,OACJR,IAAIO,YACJP,IAAIM,UAAY,2BA/DlB+K,IAAInK,KAACkN,KAAUC,KAAfxP,YAAA,EAAA,IAAA,EAAA,EAAAgC,KAAAC,IACAwK,IAAAA,OACAuK,IAAAA,YACAtK,IAAAA,UAAa5J,2BACb3B,IAAMgW,KAAAA,MAAarX,KAAGE,YAAhBmX,EAAAA,IAAgB,EAAM,EAAAnV,KAAAC,IAC1Bd,IAAAQ,OAEER,IAAAO,YAmEFP,IAAIM,UAAY3B,KAAKsF,MAjEjB+R,IAAAA,IAAAA,EAAAA,KAAAA,YAAa,EAAA,IAAA,EAAA,EAAAnV,KAAAC,IACbd,IAAAQ,OAGFR,IAAAO,YAEAP,IAAAC,OAAA,KAAAtB,KAAAE,YAAA,MACAmB,IAAAG,OAAAxB,KAAAyX,QAAAzX,KAAAE,YAAA,GAoEFmB,IAAIG,OAAO,KAAOxB,KAAKE,aAAc,MAnEnCgX,IAAAA,YACAtK,IAAAA,QACAlH,eAAIwR,KAAU,cAAA,IAAA,6BAEb7V,IAAAgG,yCAGAwC,GAAA,IAuED8N,EApEJN,EAHKlT,EAAAnE,KA2EL,GAzECA,KAtBDE,aAAAF,KAAA4X,EA+F2B,SAAvBlU,KAAK8D,QAAQ4B,MAAkB,CACjC,IAAMyO,EAAgB7X,KAAKE,YAAcF,KAAKyX,QAE9C/T,KAAKgB,QAAQjC,QAAQ,SAAC+N,EAAQsH,GArE9BnB,EAsEe,WACX,OAAOzU,KAAK6V,KAAKvH,EAAO3K,EAAI2K,EAAOtQ,cAtE3C8X,EAAA,WAAkB,OAAAH,GAAArH,EAAAtQ,YAAAsQ,EAAA3K,EAAA,GAAAgS,GAAArH,EAAAtQ,YAAAsQ,EAAA3K,EAAA,GACV5F,EAAGgY,YAAGzH,EAAAsH,EAAApU,KAAAgB,QAAAmF,EAAA8N,EAAAK,EAAA,kBAGV9X,KAAAA,UAHUuC,QAAA,SAAAgO,EAAAyH,GAIV5S,EAAOxD,WACJ,IALOqW,EAAA1H,EAAAvQ,YAAAuQ,EAAA5K,EAAA,EAMVd,EANU0L,EAAA5K,EAAA,EAAA3D,KAAA0L,KAAA,GAOVgJ,OAAU1U,KAPAmT,MAAA+C,EAAAD,IASVrB,EATU,WAUVC,OAAUc,GAAApH,EAAAvQ,aAAA2X,GAAApH,EAAAvQ,YAAAuQ,EAAA5K,EAAA,GAEZtE,EAAOwE,YAAYjG,EAAnBoY,EAAAxU,KAAAmB,UAAAgF,EAAA8N,EAAAK,EAAA,kBA6EEtU,KAAKsB,SAASvC,QAAQ,SAACiO,EAAS2H,GAE1B3H,EAAQlQ,GAAG0E,OACb8S,EAAe,WA5EjBtW,IAAJ4W,EAAA5H,EAAAxQ,YAAAgF,MACIkC,OAA0BkR,GAAhB5M,GAAdmM,GAAAS,EAAA,GA+EMnU,EAAKoU,cAAc7H,EAAS2H,EAAS,QAAS,GAAI,GAAK,GAAoB,GAAS,GAAIxO,EAAWmO,KAzEnGrW,EAAJnB,GAAgB2E,MA8EV6S,EAAe,WA5EjBzV,IAAK+V,EAAO5H,EAAKxQ,YAAgBiF,IACjCtD,OAAJyW,EAAA,GAAAT,GAAAA,GAAAS,EAAA,IAEI3W,EAAAA,cAAY+O,EAAA2H,EAAA,MAChB,GAAA,GAAA,GAAA,GAAA,GAAAxO,EAAAmO,IAEInW,EAAJrB,GAAA4E,QACIxD,EAAJ,WACID,IAAAA,EAAY+O,EAAAxQ,YAAAkF,MA8ER,OAAyBkT,EAAQ,GAAzBT,GAAgCA,GAAkBS,EAAQ,IA3EtEzW,EAAJ0W,cACA7H,EAAA2H,EAAA,QAAA,GAAA,GAAA,KAAA,KAAA,KAAAxO,EAAAmO,OAIA3W,IAAIkB,EAAImB,KAAI2G,KACZhJ,IA8EEsW,EAAa,WA5EftW,OAAIO,KAAJmW,KACA,IAAA1N,EAAAnK,YAAA,KACAmB,EAAW,WACXA,OAAAwW,GAA0BxN,EAAKnK,YA3BE,EA4BjC,GAAA2X,GAAAxN,EAAAnK,YAAA,IACAmB,KAAIG,YAAO6I,EAAYnK,IAAAA,KAAvB2J,EAAA8N,EAAAK,EAAA,gBAAA,YAAA,QAEG,CAGJtU,KAAAgB,QAAAjC,QAAA,SAAA+N,EAAAsH,GA8EGH,EAAa,WA7EbtQ,OAAJnF,KAAA6V,KAAAvH,EAAA3K,EAAA2K,EAAAtQ,cAgFI8X,EAAe,WACb,OAAQ7T,EAAKjE,aAAgBsQ,EAAOtQ,YAAesQ,EAAO3K,EAAI,GAAS1B,EAAKjE,aAAgBsQ,EAAOtQ,YAAesQ,EAAO3K,EAAI,GA/EnH1B,EAAA8T,YAAAzH,EAAAsH,EAAApU,KAAAgB,QAAAmF,EAAA8N,EAAAK,EAAA,eAAA,UAEhBtU,KAAKxD,UAAAA,QAAe,SAAAuQ,EAApByH,GACAP,EAAA,WACIK,IAAAA,EACJvH,EAAAvQ,YAAAuQ,EAAA5K,EAAA,EACAuS,EAAA3H,EAAA5K,EAAA,EAAA3D,KAAA0L,KAAA,GAkFM,OAAO1L,KAAKmT,MAAM+C,EAASD,IAhF/BH,EAAMH,WAmFF,OAAQ1T,EAAKjE,aAAeuQ,EAASvQ,aAAiBiE,EAAKjE,aAAgBuQ,EAASvQ,YAAeuQ,EAAS5K,EAAI,GAhFlH8R,EAAAA,YAAalH,EAAAyH,EAAAxU,KAAMmB,UAAAgF,EAAA8N,EAAAK,EAAA,eAAA,UAqFrBtU,KAAKsB,SAASvC,QAAQ,SAACiO,EAAS2H,GAjF5B3H,EAAQmH,GAAAA,OACTG,EAFD,WAsFI,IAAMM,EAAQ5H,EAAQxQ,YAAYgF,MAnFtC,OAAK+S,EAAAA,aAAoBH,GAAapT,EAAAA,aAAoBiT,EAA1D,GAsFExT,EAAKoU,cAAc7H,EAAS2H,EAAS,QAAS,GAAI,GAAK,GAAoB,GAAS,GAAIxO,EAAWmO,EAAc,UAhFjHtH,EAAM0H,GAAOjT,MACb6S,EAAY3C,WAHd,IAAAiD,EAAA5H,EAAAxQ,YAAAiF,IAyFM,OAAQhB,EAAKjE,aAAeoY,EAAQ,GAAOnU,EAAKjE,aAAgBoY,EAAQ,IAnF5EnU,EAAAoU,cAAQV,EAAiBpH,EAASvQ,MAA3B,GAA4C2X,GAAAA,GAA0B,GAAgBpH,GAAAA,EAA7FuH,EAAA,SAEFtH,EAAKuH,GAAAA,QAEPD,EAAA,WAsFQ,IAAMM,EAAQ5H,EAAQxQ,YAAYkF,MArFrCJ,OAASvC,EAAAA,aAASiO,EAAS2H,GAAVlU,EAAsBjE,aAAAoY,EAAA,IAE1CnU,EAAIuM,cAAJA,EAAsB2H,EAAA,QAAA,GAAA,GAAA,KAAA,KAAA,KAAAxO,EAAAmO,EAAA,SAGVH,IAARnH,EAAQmH,GAAAA,KAA4BA,IAAXS,EAAlB9X,GAA6BqX,QACrCnU,KAHDsB,SAAAwE,OAAA6O,EAAA,GAIA3U,KAAAmJ,YAAK0L,EALP1L,WAMO7J,YAAAU,KAAAmJ,eAKD,IAAAxC,EAAA3G,KAAM4U,KACNjO,IACDsN,EAHD,WA2FF,OAAOzV,KAAK6V,KAAK,IAAM1N,EAAKnK,YAAc,KAtFzC8X,EACD,WAwFA,OAAQ7T,EAAKjE,aAAgBmK,EAAKnK,YAAc,EAAI,GAAQiE,EAAKjE,aAAgBmK,EAAKnK,YAAc,IAvFpGF,KAAAiY,YAAYzX,EAAG4E,IAAO,KAAAyE,EAAA8N,EAAAK,EAAA,gBAAA,QAAA,IAInBhY,KAAAwY,eAHD3O,uCAMHvC,EAAA0B,EAAAD,EAAAc,EAAA8N,EAAAK,EAAA3P,GAAA,IAAAY,EAAA,EAAAlB,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,WAAAtC,EAAA,EAAAsC,UAAAC,aAAAC,IAAAF,UAAA,IAAAA,UAAA,GAKD4P,EAAaA,IACXc,EAAiBnR,EAAM+C,gBAAA,IAAvBnJ,QAAAwX,EACDC,EAFDrR,EAAAnH,gBAAA,IAAAe,QAAAwX,EA8FEE,EAAiB5Y,KAAK6Y,oBAAoBJ,EAAiBE,EAAe1P,GA1F1E6P,EAAQjB,IAKZ,GAyFG9U,YAAYC,cA5FbD,YAAKkV,YAA6BpO,IAAlC3H,KAAA+E,SAA6C0Q,SAA7C,UAGFiB,GAAAE,EAAA,CASE,GAPFpV,KAAAA,QAAKgB,QAAQjC,OAAQoH,EAAA,GAEjBvC,EAAA9G,IAAA,EADF,aAECyI,EA8FD/E,UAAU,WAAY,MA5FpBA,UAAA,OAAahE,KAAAA,KAAL,GAAqBsQ,IAE1ByH,IAAL3Q,EAAI9G,GAACyX,CACN,GACDxS,EAEEkS,YADFjU,aAAejB,gBAIXsG,EAAAS,OAAY6L,EAAM+C,GAiGlBzS,aAAayC,UAAUd,EAAMzB,EAAG/E,UAAUwG,EAAMpH,YAAaoH,EAAMnH,iBAAiBY,EAAGD,UAAUwG,EAAMpH,YAAaoH,EAAMnH,iBAAiBa,EAAGqH,GA9F9I3E,KAAAmJ,YAAa3M,EACd2M,WAFD7J,YAAAU,KAAAmJ,WAID9J,YACDC,YAAA,IAAAd,KAAA+E,SAAA,eAAA,+CAGMyJ,EAAWxL,EAAO2P,EAAAkE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtP,EAAAmO,GAAA,IA6BlBnL,EACDuM,EA9BmBnQ,EAAA,GAAAlB,UAAAC,aAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAA,WACpBiQ,EAAetH,EAAAvQ,gBAAM0U,GACnBwE,EAAW3I,EAAGA,OAAQxQ,GAEvBoY,EAHD5H,EAAAxQ,YAAA2U,GAqGAyE,EAASP,EAjGTQ,EAAKhB,EAyHLiB,EAASC,cAAcnB,EAAOgB,EAAQL,GArGtCS,EAAIhJ,cAAA4H,EAAwB5H,EAAQlQ,GAwGpCmZ,EAAeC,GAAuB,MAAUP,EAAa,IAAOF,GAA2CA,EAAmB,KAAzCE,EAAa,KArGpG3V,EAAA,IAAKmJ,IAALsM,GAAAE,EAAA,KAAAA,EAAA,IAAAF,EAAA,KA9BNpW,YAmCAC,cAsGAD,YAAYC,YAA+B,IAAjBd,KAAK+E,SAAkB,SAAW,UAnG1D0Q,EAqGAgC,GAAeE,GAtGjBC,EAAIzP,UAAMiO,EAAAiB,EAAAG,GACR/B,UAAaW,EAAAgB,EAAAE,KAEZM,EAFDC,UAAAzB,EAAAgB,EAAAE,GA0GQO,UAAUzB,EAAOiB,EAAQG,IAnGlC,IAAAM,EAAAJ,EAAA,IAAA1Y,QAAA4Y,EAEHG,EAAAL,EAAA,IAAA1Y,QAAAkY,EAyGMR,EAAiB5Y,KAAK6Y,oBAAoBmB,EAAgBC,EAAchR,GAxG9E6P,EAAKN,IAGP,GAAAI,GAAAE,EAAA,CAkHI,GAPApV,KAAK8D,QAAQjH,QAAQiJ,OAAOK,EAAW,GAEvC6G,EAAQlQ,GAAGqU,IAAS,EA5GgG,UAAnC5L,GAAmC/E,UAAA,QAAA,KAAA,OAiH7F,IAAnBwM,EAAQlQ,GAAG2E,KAAkC,IAArBuL,EAAQlQ,GAAG4E,MAAa,CAElD,IAAMqE,EAAoB,QAAToL,EAAiB,GAAgB,GAClDlP,aAAayC,UAAUqB,EAAUiH,EAAQ5P,UAAU+T,GAAM9T,EAAG2P,EAAQ5P,UAAU+T,GAAM7T,EAAG,eA5GpEsG,IAAjBqR,EAAAA,GAAAA,KAAgB,IAAOxY,EAAAA,GAAAA,QAC7BuD,KAAMkV,SAAAA,OAAiBP,EAAKQ,GAE5BnV,KAAMoV,YAAad,EAgHfnL,WAAW7J,YAAcU,KAAKmJ,YA7GhC9J,YAAAA,YAA0B,IAA1Bb,KAA0BA,SAAA,gBAAkC,QAE9D,aAAA+G,EA+GI/E,UAAU,WAAY,MA9G1BA,UAAI0U,OAAc,KAAIE,KAAtB,GAAkC,iDAqHhBL,EAAiBE,EAAe1P,GAhHhD,IAAAiR,EAgIF,GA7HIhW,EADDyU,EAAM,EAAAzW,KAAAC,IAAAnC,KAAA+E,YAAA7C,KAAAC,GACInC,KAAA+E,YAAT,EAAS7C,KAATC,GAoHDsW,EAAkB,GAAKE,EAAgB,GAhHtCF,EAAY,GAAA,EAAAE,GAAA3Y,KAAA+E,YAAA7C,KAAAC,GACVnC,KAAA+E,YAAA,EAAA7C,KAAAC,GAEAnC,KAAA+E,YAsHO,SAATkE,EAjHEtD,OAAuB2B,GAAvB3B,GAA0C2B,GAAmBA,EAG7DuF,IAAAA,EAAW7J,KAAXqS,MAA6BrV,KAAC6M,WAA9B7M,KAAAE,aAqHJ,OAAQuY,GAnHPyB,EAAAC,GADED,EAAAC,GAoH6CxB,yCAIrC9O,GAhHM6G,KAAnB1Q,KAAMqZ,aAuHJ3V,KAAK8D,QAAQjH,QAAQiJ,OAAOK,EAAW;uZC9sBvC/E,oBACJ,SAAAA,EAAYhF,GAAMC,gBAAAC,KAAA8E,GAChB,IAAM7E,EAAM,CACVC,YAAa,EACbC,gBAAiB,EACjB0F,EAAG,GACHzF,OAAQ,EACRC,MAAO,EAPPyE,aAQc,EACdjE,iBAAkB,EAClByE,MAAOxD,YAAYG,KATvB1B,QAAA,GAAkB6Z,0BAAA,IAAA1Z,KAYd4U,gBAAiB,IAAI5U,KAXvBF,GAAMP,EACJC,gBADU,EAEVC,WAAAA,KACA0F,aAHU,EAIVzF,gBAJU,GAMV4F,OAAAA,OAAY/F,EANFH,GAOVe,OAAAA,OAAAA,KAAkBZ,uDAMlBoa,IAAAA,EAAgBra,KAbN6F,EAAA,EAcVyU,EAdUta,KAAA6F,EAAA,GAeVlF,EAfUX,KAAA6F,EAAA,GAgBVjB,IAAAA,OAEFrD,IAAAA,UAActB,UAAdD,KAAAE,YAAAF,KAAAG,iBAAAY,EAAAD,UAAAd,KAAAE,YAAAF,KAAAG,iBAAAa,GACAO,IAAAA,MAAOwE,KAAO1F,MAAMJ,KAApBI,OACDgB,IAAAjB,OAAAJ,KAAAI,OAAAc,SAaCG,IAAIK,OACJL,IAAI+F,UAAU,EAAG,GACjB/F,IAAIO,YACJP,IAAIC,OAAOiZ,EAZNrY,KAAAmE,IAAA,GAAAnF,SAAAqZ,EAAArY,KAAAoE,IAAA,GAAApF,UACLG,IAAAkF,WAAMgU,EAAe,KACrBlZ,IAAAkF,WAAMiU,EAAe,KACrBnZ,IAAAI,YACAJ,IAAAA,UACA,2BAYAA,IAAIQ,OAXJR,IAAAA,UAEAA,IAAAA,YACAA,IAAAA,OAAArB,KAAA6F,EAAA3D,KAAAmE,IAAA,GAAAnF,SAAAlB,KAAA6F,EAAA3D,KAAAoE,IAAA,GAAApF,UACAG,IAAAA,WAAArB,KAAA6F,EAAA,KACAxE,IAAAA,WAAArB,KAAA6F,EAAA,KACAxE,IAAAA,YACAA,IAAAA,UAAArB,KAAeua,MACflZ,IAAAA,OAEAA,IAAAA,UAAIM,GAAY,KAChBN,IAAAA,UAAAS,YAAAC,MACAV,IAAAA,YAaAA,IAAIC,OAAO,EAAG,GAXdD,IAAAA,WAAAmZ,EAAA,IACAnZ,IAAAA,WAAWmZ,EAAcnU,KACzBhF,IAAAA,YACAA,IAAAA,OAEAA,IAAAA,UAAIM,EAAYO,KAAKoD,KAArB,GAAApE,SAAA,EAAAgB,KAAAoE,KAAA,GAAApF,UACAG,IAAAA,YAaAA,IAAIC,OAAO,EAAG,GAXdD,IAAAA,WAAAoZ,EAAA,IACApZ,IAAAA,WAAAoZ,EAA4B1Y,KAC5BV,IAAAA,YACAA,IAAAA,OACAA,IAAAA,UAEAA,KAAGd,QAACkB,QAAJ,SAAAiB,GACArB,EAAIQ,wCAMDe,GAAC2D,IAAAA,EAAAA,KACJlF,KAAGV,aAAHX,KAAA2C,OAAA3C,KAAA4E,gBACAvD,KAAGV,aAAH,EACAU,KAAGmF,SA5CEb,aA6CLc,SAAAzG,MACAA,KAAAO,QAAKA,QAAQkC,SAAbC,EAAqBE,EAACF,GACpBA,EAAAA,OAAAE,EAAAC,KAeF,IACI6X,EADEC,EAAsB,IAAIja,KAiB5BsD,GAfA2W,EAAsB3a,KAXhBoa,0BAAA/W,UAAA,IAAA,OAaJrD,KAAKsa,YAZXxT,aAAKnG,KAAe2Z,YAEpB5W,GAAsC,KAAtBiC,KAAAA,SAChB,GAAA,GAAAtC,UAAA,GAAA,IACAJ,UAAK1C,GAAQkC,KAAAA,GAAQ,CACnBC,gBAAcE,KAAAA,OAAd8X,GADFvX,KAGAyX,OAAAC,WAEA5X,UAAIyX,GAAAA,KAAAA,IAAJ,CAcIta,OAAM,KAAAkD,OAAOoX,EAAoB,KAbrCvX,KAAIwX,OAAAA,UACF3W,WAAA,WAGCN,KAAA8C,UAAA9C,KAAAC,SAAA,IAAAH,EAAAhD,KAeGgD,EAAKI,QAELJ,EAAK8W,WAAa7W,WAAW,WAdxBC,KAAI8C,SAAW,IAAAhD,EAAAhD,IACtBL,EAAAA,SACAgD,UAAa0X,KAAAA,WAGf5X,KAAAA,0BAAwB0X,GAGZ,IAAV3W,KAAAA,KAAYhE,KAAAqa,eAAM,CAChB,IAAA,IAAAtT,EAAA,EAAAA,GAAA,EAAAA,GAAA,EACArD,KAAA2K,QAAA9J,KAAA,IAAAuW,OAAA,CACA5a,YAAUsG,KAAAA,YAgBVrG,gBAAiBH,KAAKG,gBAftBC,OAAKwD,KAALxD,OAiBA2a,MAAOhU,KAdLhE,YAAIC,YAAA,kBAkBVhD,KAAKqa,gBAAiB,EAjBhBnW,UAAA,QAAA,KAAA,OAXkByB,aAAxBmD,WAAApF,KAAAmB,UAAAjC,EAAA,WAAA5C,KAAAE,YAAAF,KAAAG,iDAmBAH,KAAAO,QAASwG,KAAT,IAAiBiU,UAAQ,CACvBtX,EAAAA,CACExD,EAAAA,UAAAA,KAAaA,YAAKA,KADSC,iBAAAY,EAE3BZ,EAAAA,UAAAA,KAAAA,YAAsBA,KAAAA,iBAFKa,GAI3B+Z,YAAOhU,KAAAA,YAJoBhC,YAA7B/E,KAAAI,UA0BJ2C,YAAYC,YAA+B,IAAjBd,KAAK+E,SAAkB,iBAAmB,WAnBlElE,UAAAA,WAAYC,qCAyBT4B,GApBLe,YAAAA,YAAwBjC,oBACzBT,UAAAC,GAAAlD,KAAA,GAAA,CAsBGK,MAAO,EACP8C,KAAM+D,KAAKpD,QAAQqD,OAAO,OAlB5B,IAAA/D,EAAamB,EACXF,GAAAA,EAAG,CACDtD,EAAGD,UAAeZ,GAAAA,IAClBc,IAAC+U,EAAEjV,UAAeZ,GAAAA,IAFjB+C,UAD2BC,GAAAlD,KAAA,IAAA,CAK9BE,gBAAa,KAAAoD,OAAKpD,GAClB6E,YAAW,KAAAzB,OAAOlD,GANpB+C,KAAA6D,OAAAlD,UAUDb,UAAAC,GAAAlD,KAAA,IAAA,CAqBGI,OAAM,KAAAkD,OAAOF,EAAY,KACzBD,KAAM+D,KAAKpD,QAAQqD,OAAO,OAjB5BpE,KAAAA,SAAYC,UAAZ,QAA0B,KAAA,eAyBxB8X,kBAnBF,SAAAA,EAAIlW,GAAAA,gBAAAA,KAAAA,GACFxB,IAAAA,EAAAA,CACAlD,YAAamD,EACbJ,gBAAa,EAEX/C,EAAAA,KACAiD,OAAI,EAHkB7C,QAAxB,EAKDgF,MAAAxD,YAAAG,KAqBCzB,GAAI,EApBNyC,mBAAmB,EACjB7C,MAAAA,GADsBmB,OAAxBwE,OAAA9F,EAAAH,GAIA4D,OAAK8C,OAALxG,KAAgBkE,uDAwBhB,IAAMqW,EAAeva,KAAK6F,EAAI,IACxB2U,EAAexa,KAAK6F,EAAI,IACxB4U,EAAiBza,KAAK6F,EAAI,IAChCxE,IAAIK,OAEJL,IAAI+F,UAAUtG,UAAUd,KAAKE,YAAaF,KAAKG,iBAAiBY,EAAGD,UAAUd,KAAKE,YAAaF,KAAKG,iBAAiBa,GAtBvHK,IAAAjB,OAAAJ,KAAYF,OAAMoB,SAAAG,IAAAK,OA0BhBL,IAAI+F,UAAU,IAAMlF,KAAK0L,KAAK,OAzB9BvM,IAAMpB,YACJC,IAAAA,OAAAA,EADUgC,KAAAmE,IAAA,GAAAkU,EAAArY,KAAAoE,IAAA,IAEVnG,IAAAA,OAAAA,EAFU+B,KAAAmE,IAAA,IAAAnF,SAAAqZ,EAAArY,KAAAoE,IAAA,IAAApF,UAGVG,IAAAG,OAAA+Y,EAAArY,KAAAmE,IAAA,IAAAnF,SAAAqZ,EAAArY,KAAAoE,IAAA,IAAApF,UACA2E,IAACpE,YACDrB,IAAAA,UALU,2BAMVE,IAAAA,OACAgF,IAAAA,UAEA2V,IAAAA,YACAF,IAAAA,OAAO/a,KAAA6F,EAAA3D,KAAAmE,IAAA,GAAArG,KAAA6F,EAAA3D,KAAAoE,IAAA,IAVGjF,IAAZG,OAAAxB,KAAA6F,EAAA3D,KAAAmE,IAAA,IAAAnF,SAAAlB,KAAA6F,EAAA3D,KAAAoE,IAAA,IAAApF,UAYAK,IAAAA,OAAOwE,KAAO9F,EAAKH,KAAnBuG,IAAA,IAAAnF,SAAAlB,KAAA6F,EAAA3D,KAAAoE,IAAA,IAAApF,UACAK,IAAAA,YACDF,IAAAM,UAAA3B,KAAAsF,MA2BCjE,IAAIQ,OAEJR,IAAI+F,WAAW,MAAO,KACtB/F,IAAIM,UAAYG,YA7BXC,MACLV,IAAAO,YACAP,IAAAC,OAAMkZ,EAAAA,GACNnZ,IAAAG,OAAMiZ,EAAiBvY,KAAAmE,IAAvB,GAAAnF,SAAAsZ,EAAAtY,KAAAoE,IAAA,GAAApF,UACAG,IAAAA,OAAAmZ,EACAtY,KAAAmE,IAAA,GAAAnF,SAAAsZ,EAAAtY,KAAAoE,IAAA,GAAApF,UA6BAG,IAAII,YA5BJJ,IAAAA,OAEAA,IAAAA,UAAW,GAAKjB,MAChBiB,IAAAA,YACAA,IAAAA,OAAI+F,EAAAA,GACJ/F,IAAAA,OAAIO,EAAJM,KAAAmE,IAAA,GAAAnF,SAAAuZ,EAAAvY,KAAAoE,IAAA,GAAApF,UACAG,IAAAA,OAAIC,EAAsBY,KAAKmE,IAAI,GAAIkU,SAAAA,EAAvCrY,KAAAoE,IAAA,GAAApF,UACAG,IAAAA,YACAA,IAAAA,OACAA,IAAAA,yCAEGuB,GAAH,IAAAqB,EAAAjE,KACAqB,KAAGjB,QAAHJ,KACAM,QA6BKN,KAAKib,oBA5BV5Z,UAAIO,GAAJ5B,KAAA,GAAA,CACAqB,gBAAW,GAAAiC,OAAsB,IAAbpB,KAAKmE,MAAQ,KAAcC,KAApC,MACXjF,KAAIG,OAAOsC,QACXzC,WAAW,WACPI,UAAJyB,GAAAe,EAAA,IAAA,CACItC,YAAY,EACZE,KACJqZ,OAAAC,YAGA9Z,KAAIO,mBAAJ,GAGAP,aAAWmZ,WAAAA,KAAetY,QAASU,EAAK1B,WAAUsZ,KAAAA,YAAoBlU,KAAInG,0BAM1EkB,qBACAA,SAAAA,EAAIG,GAAOiZ,gBAAAA,KAAAA,GACXpZ,IAAIG,EAAJ,CACAH,EAAG,CACHA,EAAIQ,EACJR,EAAIgG,GA+BF9B,MAAO,EACPC,QAAS,IACTT,YAAa,EA/BLO,MAAAxD,YAAAG,MACVV,OAAKnB,OAALH,EAAeH,GAkCfyB,OAAOwE,OAAO/F,KAAMC,uDA/BhBE,IAAAA,OACAgD,IAAAA,UAAM6D,KAAOlD,EAAAA,EAAAA,KAFSO,EAAArD,GAGtBgD,IAAAA,OAAAA,KAAUe,YAAE7D,SACV+B,IAAAA,UAAAA,KAAUC,MAAG,GAEXC,IAAAA,UAAM+X,KAAAA,MAFgB7Z,IAAAO,YAIzBP,IAAAC,QAAA,GAAA,GARqBD,IAAAkF,WAAxB,GAAA,KAUAlF,IAAAkF,WAAK0U,KAAAA,KACN5Z,IACDI,YAkCAJ,IAAIQ,OAjCJ8D,IAAAA,UAAamD,2BACdzH,IAAAO,YAoCCP,IAAIC,QAAQ,KAAM,GAClBD,IAAIkF,WAAW,GAAI,KACnBlF,IAAIkF,WAAW,KAAM,KACrBlF,IAAII,YACJJ,IAAIQ,OAnCFmZ,IAAAA,yCAsCGpY,EAAKC,GArCM7C,KAAAuF,OAAAvF,KAAAwF,OAChBG,aAAYC,cAAA5F,KAAA4C,EAAAC,EAAA,MAER9B,KAACyX,eADA5V,EAAAC,0CADOD,EAAAC,GAOVkC,KAAAA,QAPU,MAQVO,EAAAA,OAAOxD,EAAAA;aCjRZ,SAED4D,eAAAhD,EAAA5B,EAAAwB,EAAAsG,GAEEvH,IAAIgB,YAAcK,EAAO4C,MACzBjE,IAAIiB,UAAYA,EAFlBjB,IAAAuH,YAASlD,EACPrE,IAAIgB,WAAJ,EAEAhB,IAAIuH,YACJvH,IAAIiH,IAAAA,EAAAA,EAAJvB,EACArE,EAAAkU,WAAA7P,GAAA,EAAA,CAGE,IAAMqU,EAAUrU,EAAIrE,EAAOmU,SAAalL,WAAajJ,EAAOqU,SAF9D1V,IAAIO,OAAJc,EAAA5B,GAAA4B,EAAAoU,QAAA5U,KAAAoE,IAAA8U,GAAArU,GACA1F,IAAAmB,SAEEnB,IAAAA,YACD,IAAA,IAAA0F,EAAA,EAAAA,EAAArE,EAAAkU,WAAA7P,GAAA,EAAA,CAKC,IAAMqU,EAAUrU,EAAIrE,EAAOmU,SAAalL,WAAajJ,EAAOqU,SAJ9D1V,IAAImB,OAX6DE,EAYjE5B,GAAA4B,EAAAoU,QAAA5U,KAAAoE,IAAA8U,IAAArU,GACA1F,IAAIO,SA8CN,SAAAgU,gBAAA,IAAAxO,EAAA,EAAAW,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAAhH,EAAA,EAAAC,EAAA,GAAAX,EAAA,EAAA0H,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,EACA1G,IAAAM,UAAAG,YAAAC,MAIAV,IAAA+F,UAAAA,EAAArG,EAAAqG,EAAApG,GAIEK,IAAIO,YACJP,IAAIC,OAAO,EAAG,GAJhBD,IAAAjB,OAASwV,GAAAA,SAAqDvU,IAAvC+F,OAAAA,EAAuC,GAAA/G,GAAzBU,IAACqG,UAAH,EAAA,GAAA/G,GAAQW,IAACZ,QAAE,GAAAc,SAAgBG,IAAXhB,OAAW,GAAAA,EAAA,GAC5DgB,IAAIM,UAAJ,GAAgBG,EAAAA,GAEhBT,IAAIO,OAAAA,GAAJV,SACAG,IAAIC,OAAO,EAAG,GAAdjB,GACAgB,IAAIjB,UAAO,EAAKc,GAAAA,GAChBG,IAAIG,QAAJ,GAAcN,SAEdG,IAAIjB,OAAO,IAAMc,SAEjBG,IAAIG,OAAO,GAAA,GAAKnB,GAChBgB,IAAI+F,UAAU,GAAA,GAAK/G,GAEnBgB,IAAIjB,QAAO,IAAKc,SAEhBG,IAAI+F,QAAAA,EAAJ/G,EAAsBA,GACtBgB,IAAIjB,YAEJiB,IAAIjB,OAMJiB,SAAII,UAAJvB,EAAAC,GACAkB,MAAIQ,CACLd,EAAA2K,MAAA,EAAAxL,EAAAgC,KAAAmE,IAAAlG,EAAAe,SAOGF,EAAIyM,MAAQ,EAAKvN,EAAcgC,KAAKoE,IAAInG,EAAkBe,UAO9D,SAASsH,QAAQzH,EAAGC,GAClB,OAAOkB,KAAKmZ,IAAIra,GAAKkB,KAAKmZ,IAAIta,GAMhC,SAAS0Y,cAAc6B,EAAGC,EAAGxG,GAC3B,OAAO7S,KAAK0L,KAAK0N,EAAIA,EAAIC,EAAIA,EAAI,EAAID,EAAIC,EAAIrZ,KAAKmE,IAAI0O,EAAQ7T,UAGhE,SAAS6Y,UAAUuB,EAAGC,EAAGC,GACvB,OAAOtZ,KAAKuZ,MAAMH,EAAIA,EAAIE,EAAIA,EAAID,EAAIA,IAAM,EAAID,EAAIE,IAQrD,SAAAnY,UAAAqY,EAAAC,GADC,OAAOzZ,KAAKiS,MAAMjS,KAAK+E,UAAY0U,EAAMD,EAAM,GAAKA,GAMpD,SAAIhY,UAAJkY,EAAkBC,GAAA,IACdC,EADcC,EAAA,EAAAhU,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,KAAAiU,EAAA,EAAAjU,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,EAAA+J,EAAA,EAAA/J,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,EAClB,IAAI+T,KAAJrG,QACA,OAAQmG,GACN,IAAK,WACHnY,WAAW,YACTqY,GAAQ,IAAIG,KAAKC,eAAgBC,YAC3BC,qBAAqBP,EAAME,GACjCD,EAAMhK,OAAOV,MAAQU,GACpBkK,GACH,MACF,IAAK,MAALvY,WAAA,YACEA,GAAU,IAACwY,KAAAI,UAAMF,YACVC,qBAAGP,EAAoBM,GAC5BL,EAAMM,OAAAA,MAAAA,GACNN,GACD,MACD,IAAA,OAEArY,WAAW,YADbqY,GAAA,IAAAG,KAAAK,WAAAH,YACE1Y,qBAAiBoY,EAAAE,GACfD,EAAKhK,OAAOmK,MAAKK,GACjBR,GACAA,MACD,QACDrY,WAAA,YAGEqY,GAAQ,IAAIG,KAAKM,OAAQJ,YAF7BC,qBAAAP,EAAAE,GACEtY,EAAAA,OAAW2N,MAAMU,GACfgK,IAxBN,SAAAvM,QA8BD,SAAAiN,UAAAC,UAAAC,MAAA,aAIGF,UAAUC,UAAUC,MAAM,WAF9BF,UAAAC,UAAiBC,MAAA,YACfF,UAAIA,UAAUC,MAAUC,UAQtBF,UAAOC,UAAPC,MAAA,UARFF,UASOC,UAAAC,MAAA,gBACLF,UAAOC,UAAPC,MAAA,mBApLJrb,IAAIkF,WAAa,SAAUV,EAAGkP,GAAqB,IAAd4H,EAAc,EAAA5U,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAC9C,OAAO1G,IAAIG,OAAOqE,EAAI3D,KAAKmE,IAAI0O,EAAQ7T,QAAUyb,GAAW9W,EAAI3D,KAAKoE,IAAIyO,EAAQ7T,QAAUyb","file":"index.js","sourcesContent":["class Boss {\n  constructor(args) {\n    const def = {\n      axisRotateR: 0,\n      axisRotateAngle: 0,\n      rotate: 0,\n      scale: 0,\n      // axisRotateRV: 1,\n      axisRotateAngleV: 1,\n      rotateV: 1,\n      bullets: [],\n      HP: 24,\n      beforeGenerateEnemyTime: new Date(),\n      beginAppear: true,\n      isAppearing: false,\n      isDisappeared: false,\n      appearTimes: 0,\n      appearTimer: null,\n      disappearTimer: null,\n    }\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n  draw() {\n    ctx.save();\n      ctx.translate(originPos(this.axisRotateR, this.axisRotateAngle).x, originPos(this.axisRotateR, this.axisRotateAngle).y);\n      ctx.scale(this.scale, this.scale);\n      ctx.rotate(this.rotate * degToPi);\n      // 透明頭\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.4)';\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(11, 0);\n      ctx.lineTo(18, 6);\n      ctx.lineTo(18, 15);\n      ctx.lineTo(-18, 15);\n      ctx.lineTo(-18, 6);\n      ctx.lineTo(-11, 0);\n      ctx.closePath();\n      ctx.fill();\n      // 黃頭\n      ctx.fillStyle = globalColor.orange;\n      ctx.beginPath();\n      ctx.moveTo(0, 9);\n      ctx.lineTo(11, 9);\n      ctx.lineTo(18, 15);\n      ctx.lineTo(18, 36);\n      ctx.lineTo(-18, 36);\n      ctx.lineTo(-18, 15);\n      ctx.lineTo(-11, 9);\n      ctx.closePath();\n      ctx.fill();\n      // 裝飾內透明頭\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.25)';\n      ctx.beginPath();\n      ctx.moveTo(0, 9 + 8);\n      ctx.lineTo(4, 9 + 8);\n      ctx.lineTo(14, 24);\n      ctx.lineTo(14, 36 - 8);\n      ctx.lineTo(-14, 36 - 8);\n      ctx.lineTo(-14, 24);\n      ctx.lineTo(-4, 9 + 8);\n      ctx.closePath();\n      ctx.fill();\n      // 右白肩\n      ctx.fillStyle = globalColor.white;\n      ctx.beginPath();\n      ctx.moveTo(18, -6);\n      ctx.lineTo(18 + 8, -6);\n      ctx.lineTo(18 + 8 + 8, 15);\n      ctx.lineTo(18 + 8 + 8, 36 + 6);\n      ctx.lineTo(18, 36 + 6);\n      ctx.closePath();\n      ctx.fill();\n      // 左白肩\n      ctx.fillStyle = globalColor.white;\n      ctx.beginPath();\n      ctx.moveTo(-18, -6);\n      ctx.lineTo(-18 - 8, -6);\n      ctx.lineTo(-18 - 8 - 8, 15);\n      ctx.lineTo(-18 - 8 - 8, 36 + 6);\n      ctx.lineTo(-18, 36 + 6);\n      ctx.closePath();\n      ctx.fill();\n      // 右紅翼\n      ctx.fillStyle = globalColor.red;\n      ctx.beginPath();\n      ctx.moveTo(18 + 8 + 8, 9);\n      ctx.lineTo(18 + 8 + 8 + 8, 9);\n      ctx.lineTo(18 + 8 + 8 + 8 + 16, 36 + 6);\n      ctx.lineTo(18 + 8 + 8 + 8 + 16, 36 + 6 + 8);\n      ctx.lineTo(18 + 8 + 8, 36 + 6 + 8);\n      ctx.closePath();\n      ctx.fill();\n      // 左藍翼\n      ctx.fillStyle = globalColor.blue;\n      ctx.beginPath();\n      ctx.moveTo(-18 - 8 - 8 + 4, 9);\n      ctx.lineTo(-18 - 8 - 8 - 8 + 4, 9);\n      ctx.lineTo(-18 - 8 - 8 - 8 - 16 + 4, 36 + 6);\n      ctx.lineTo(-18 - 8 - 8 - 8 - 16 + 4, 36 + 6 + 8);\n      ctx.lineTo(-18 - 8 - 8 + 4, 36 + 6 + 8);\n      ctx.closePath();\n      ctx.fill();\n      // 右灰風口\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.3)';\n      ctx.beginPath();\n      ctx.moveTo(18 + 8 + 8, 36 + 6 + 8);\n      ctx.lineTo(18 + 8 + 8, 36 + 6 + 8 + 6);\n      ctx.lineTo(18 + 8 + 8 + 16, 36 + 6 + 8 + 6);\n      ctx.lineTo(18 + 8 + 8 + 16, 36 + 6 + 8);\n      ctx.fill();\n      // 左灰風口\n      ctx.beginPath();\n      ctx.moveTo(-18 - 8 - 8 + 4, 36 + 6 + 8);\n      ctx.lineTo(-18 - 8 - 8 + 4, 36 + 6 + 8 + 6);\n      ctx.lineTo(-18 - 8 - 8 - 16 + 4, 36 + 6 + 8 + 6);\n      ctx.lineTo(-18 - 8 - 8 - 16 + 4, 36 + 6 + 8);\n      ctx.fill();\n      // 右裝飾白圈\n      ctx.strokeStyle = globalColor.white;\n      ctx.lineWidth = 2.8;\n      ctx.beginPath();\n      ctx.arc(18 + 8 + 8 + 11, 36 + 6 - 2, 4.4, 0, Math.PI * 2);\n      ctx.stroke();\n      // 左裝飾黃叉\n      ctx.strokeStyle = globalColor.orange;\n      // ctx.lineWidth = 2.8;\n      ctx.beginPath();\n      ctx.moveTo(-18 - 8 - 8 + 4 - 3.2, 9 + 16);\n      ctx.lineTo(-18 - 8 - 8 + 4 - 3.2 - 9.6, 9 + 16 + 9.6);\n      ctx.moveTo(-18 - 8 - 8 + 4 - 3.2 - 9.6, 9 + 16);\n      ctx.lineTo(-18 - 8 - 8 + 4 - 3.2, 9 + 16 + 9.6);\n      ctx.stroke();\n      // 左裝飾透明四邊形\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.24)';\n      ctx.beginPath();\n      ctx.moveTo(-18 - 8 - 8 - 8 - 16 + 4 + 4, 36 + 6 - 8.25);\n      ctx.lineTo(-18 - 8 - 8 - 8 - 16 + 4, 36 + 6);\n      ctx.lineTo(-18 - 8 - 8 - 8 - 16 + 4, 36 + 6 + 8);\n      ctx.lineTo(-18 - 8 - 8 - 6 + 4, 36 + 6 + 8);\n      ctx.closePath();\n      ctx.fill();\n    ctx.restore();\n    // 繪製 boss 子彈\n    this.bullets.forEach((bullet) => {\n      bullet.draw();\n    });\n  }\n  update() {\n    // boss 出現\n    this.beginAppear && this.appear();\n    this.beginAppear = false;\n    if (!this.isAppearing && !this.isDisappeared) {\n    }\n    // 更新 boss 子彈\n    this.bullets.forEach((bullet, idx, arr) => {\n      bullet.update(idx, arr);\n    });\n  }\n  appear() {\n    if (game.isEnd) return;\n    this.appearTimes += 1;\n    this.isDisappeared = false;\n    this.isAppearing = true;\n    gameCrawler.textContent = '⚠ BOSS IS COMING';\n    TweenLite.to(this, 1.2, {\n      scale: 1,\n      ease: Expo.easeOut,\n    });\n    const rotateNum = getRandom(45, 135);\n    TweenLite.to(this, 1.6, {\n      axisRotateAngle: `+=${rotateNum}`,\n      rotate: `+=${rotateNum}`,\n      ease: Expo.easeOut,\n      onComplete: () => {\n        this.isAppearing = false;\n      },\n    });\n    if (this.appearTimes && this.appearTimes % 3) {\n      setTimeout(() => {\n        if (this.HP === 0 || game.isPause) return;\n        this.shoot();\n      }, getRandom(1000, 2000));\n    } else {\n      setTimeout(() => {\n        if (this.HP === 0 || game.isPause) return;\n        this.generateEnemy();\n      }, getRandom(1000, 2000));\n    }\n    this.disappearTimer = setTimeout(() => {\n      if (this.HP === 0 || game.isPause) return;\n      this.disappear();\n    }, getRandom(3000, 4000));\n    playSound('membrane', 'A4', '4n');\n  }\n  disappear() {\n    if (game.isEnd) return;\n    this.isDisappeared = true;\n    TweenLite.to(this, 1.2, {\n      scale: 0,\n      ease: Expo.easeOut,\n    });\n    const rotateNum = getRandom(45, 225);\n    TweenLite.to(this, 1.6, {\n      axisRotateAngle: `+=${rotateNum}`,\n      rotate: `+=${rotateNum}`,\n      ease: Expo.easeOut,\n    });\n    this.appearTimer = setTimeout(() => {\n      if (this.HP === 0 || game.isPause) return;\n      this.appear();\n    }, 2000);\n    playSound('membrane', 'F3', '4n');\n  }\n  shoot() {\n    this.bullets.push(new BossBullet({\n      p: {\n        x: originPos(this.axisRotateR, this.axisRotateAngle).x,\n        y: originPos(this.axisRotateR, this.axisRotateAngle).y,\n      },\n      rotateAngle: this.rotate,\n      axisRotateR: this.axisRotateR,\n    }));\n    playSound('mono', 'F2', '4n', 0, -10);\n    setTimeout(() => {\n      this.bullets.push(new BossBullet({\n        p: {\n          x: originPos(this.axisRotateR, this.axisRotateAngle).x,\n          y: originPos(this.axisRotateR, this.axisRotateAngle).y,\n        },\n        rotateAngle: this.rotate,\n        waveLength: 14,\n        axisRotateR: this.axisRotateR,\n      }));\n      playSound('mono', 'F2', '4n', 0, -10);\n    }, 200);\n  }\n  generateEnemy() {\n    let num;\n    const chooseEnemy = () => {\n      num = getRandom(1, 3);\n      switch (num) {\n        case 1:\n          game.circles.push(new Circle({\n            axisRotateR: this.axisRotateR,\n            axisRotateAngle: this.axisRotateAngle % 360,\n            axisRotateAngleV: -(getRandom(2, 8) / 10),\n            rotate: getRandom(0, 360),\n            isBossGenerate: true,\n          }));\n          break;\n        case 2:\n          game.triangles.push(new Triangle({\n            axisRotateR: this.axisRotateR,\n            axisRotateAngle: this.axisRotateAngle % 360,\n            axisRotateAngleV: getRandom(2, 8) / 10,\n            rotate: this.axisRotateAngle % 360,\n            isBossGenerate: true,\n          }));\n          break;\n        case 3:\n          const rotate = getRandom(0, 360);\n          game.polygons.push(new Polygon({\n            axisRotateR: {\n              whole: this.axisRotateR,\n              big: this.axisRotateR,\n              small: this.axisRotateR,\n            },\n            axisRotateAngle: {\n              whole: this.axisRotateAngle % 360,\n              big: this.axisRotateAngle % 360,\n              small: this.axisRotateAngle % 360,\n            },\n            rotate: {\n              whole: rotate,\n              big: rotate,\n              small: rotate,\n            },\n            rotateV: getRandom(4, 8) / 10,\n            isBossGenerate: true,\n          }));\n          break;\n        default:\n          break;\n      }\n    }\n    chooseEnemy();\n    chooseEnemy();\n    if (Math.random() >= 0.5) {\n      setTimeout(() => {\n        chooseEnemy();\n      }, 400);\n    }\n  }\n}\n\nclass BossBullet {\n  constructor(args) {\n    const def = {\n      p: {\n        x: 0,\n        y: 0,\n      },\n      axisRotateR: 0,\n      color: globalColor.orange,\n      moveX: 8,\n      moveXV: 4,\n      rotateAngle: 0,\n      waveLength: 22,\n      waveFreq: 0.3,\n      waveAmp: 4,\n      waveFlow: 3,\n      isBoss: true,\n    }\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n  draw() {\n    ctx.save();\n      ctx.translate(this.p.x, this.p.y);\n      ctx.rotate((this.rotateAngle - 90) * degToPi);\n      // 開始畫 boss 子彈\n      drawWaveBullet(this, 'moveX', 2.4, 'rgba(245, 175, 95, 0.72)');\n    ctx.restore();\n  }\n  update(idx, arr) {\n    // boss 子彈移動\n    this.moveX += this.moveXV;\n    enemyMethods.attackShooter(this, idx, arr);\n  }\n}","class Circle {\n  constructor(args) {\n    const def = {\n      axisRotateR: 0,\n      axisRotateAngle: 0,\n      r: 22,\n      rotate: 0,\n      scale: 0,\n      axisRotateRV: 0,\n      axisRotateAngleV: 0,\n      // rotateV: 0,\n      color: globalColor.orange,\n      HP: 2,\n      bullets: [],\n      beforeRotateTime: new Date(),\n      isRotating: false,\n      beginAppear: true,\n      isBossGenerate: false,\n    }\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n\n\n  draw() {\n    const circleBigR = this.r + 5;\n    const circleSmallR = this.r - 10;\n    const subAxisRotateR = 14;\n    ctx.save();\n    ctx.translate(originPos(this.axisRotateR, this.axisRotateAngle).x, originPos(this.axisRotateR, this.axisRotateAngle).y);\n    ctx.rotate(this.rotate * degToPi);\n    ctx.scale(this.scale, this.scale);\n    // 大淡圓\n    ctx.beginPath();\n    ctx.arc(4, 0, circleBigR, 0, Math.PI * 2);\n    ctx.fillStyle = 'rgba(245, 175, 95, 0.21)';\n    ctx.fill();\n    // 小淡圓\n    ctx.beginPath();\n    ctx.arc(-20, 0, circleSmallR, 0, Math.PI * 2);\n    ctx.fillStyle = 'rgba(245, 175, 95, 0.21)';\n    ctx.fill();\n    // 主體圓\n    ctx.beginPath();\n    ctx.arc(0, 0, this.r, 0, Math.PI * 2);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    // 小三圓\n    ctx.beginPath();\n    ctx.fillStyle = globalColor.white;\n    // ctx.arc(subAxisRotateR, 0, 2.4, 0, Math.PI * 2);\n    ctx.arc(subAxisRotateR * Math.cos(60 * degToPi), subAxisRotateR * Math.sin(60 * degToPi), 2.4, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(subAxisRotateR * Math.cos(180 * degToPi), subAxisRotateR * Math.sin(180 * degToPi), 2.4, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(subAxisRotateR * Math.cos(300 * degToPi), subAxisRotateR * Math.sin(300 * degToPi), 2.4, 0, Math.PI * 2);\n    ctx.fill();\n    // 神經\n    ctx.beginPath();\n    ctx.fillStyle = globalColor.white;\n    ctx.lineTo(-8, 0);\n    ctx.$triLineTo(-2, 32);\n    ctx.$triLineTo(-12, 120);\n    ctx.$triLineTo(-2.4, 176);\n    ctx.$triLineTo(-8, 240);\n    ctx.$triLineTo(-1.6, 320);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n    // 繪製圓形子彈\n    this.bullets.forEach((bullet) => {\n      bullet.draw();\n    });\n  }\n\n\n  update(idx) {\n    this.beginAppear && this.appear(this.isBossGenerate);\n    this.beginAppear = false;\n    game.isStart && enemyMethods.approach(this);\n    // 更新圓形子彈\n    this.bullets.forEach((bullet, idx, arr) => {\n      bullet.update(idx, arr);\n    });\n    // 當圓形自身在旋轉時，圓形不要移動\n    if (!this.isRotating) {\n      this.axisRotateAngle += this.axisRotateAngleV;\n    }\n    // 每 4-8 秒，自身旋轉一次\n    const rotateTime = new Date();\n    if ((rotateTime - this.beforeRotateTime) > getRandom(4000, 8000)) {\n      this.isRotating = true;\n      TweenLite.to(this, 0.4, {\n        // rotate: this.axisRotateAngle - 180,\n        // rotate: this.axisRotateAngle % 360,\n        rotate: this.axisRotateAngle,\n        ease: Power2.easeOut,\n        // 自身旋轉完後射擊\n        onComplete: () => {\n          this.isRotating = false;\n          if (!game.isStart) return;\n          this.shoot();\n        },\n      });\n      this.beforeRotateTime = rotateTime;\n    }\n    // 當圓形撞上 shooter\n    enemyMethods.hitShooter(game.circles, idx, 'circle', this.axisRotateR, this.axisRotateAngle);\n  }\n\n\n  shoot() {\n    // 射 1-2 發\n    for (let i = 0; i < getRandom(1, 2); i += 1) {\n      const timer = setTimeout(() => {\n        this.bullets.push(new CirBullet({\n          p: {\n            x: originPos(this.axisRotateR, this.axisRotateAngle).x,\n            y: originPos(this.axisRotateR, this.axisRotateAngle).y,\n          },\n          rotateAngle: this.rotate,\n          moveX: -this.r - 10,\n          // rotateAngle: Math.sin(this.rotate * degToPi),\n          axisRotateR: this.axisRotateR,\n        }));\n        clearTimeout(timer);\n        // 間隔 0.2-0.4 秒\n      }, i * getRandom(200, 400));\n    }\n    gameCrawler.textContent = Math.random() >= 0.8 ? 'UNDER ATTACK🤕' : 'ATTACK⚡️';\n    playSound('membrane', 'D5');\n  }\n\n\n  appear(isBossGenerate) {\n    gameCrawler.textContent = '⚠ ENEMY IS COMING';\n    // gameCrawler.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i>ENEMY IS COMING!';\n    TweenLite.to(this, 0.8, {\n      scale: 1,\n      ease: Back.easeOut.config(1.7),\n    });\n    TweenLite.from(this, 1.6, {\n      rotate: 0,\n      ease: Back.easeOut.config(1.7),\n    });\n    if (isBossGenerate) {\n      TweenLite.to(this, 1.6, {\n        axisRotateR: `+=${getRandom(80, 160)}`,\n        ease: Power2.easeOut,\n      });\n    }\n    game.isStart && playSound('synth', 'F4', '4n');\n    // playSound('synth', 'B4', '8n', 50);\n  }\n}\n\n\n\nclass CirBullet {\n  constructor(args) {\n    const def = {\n      p: {\n        x: 0,\n        y: 0,\n      },\n      axisRotateR: 0,\n      color: globalColor.orange,\n      moveX: 0,\n      moveXV: -4.5,\n      // v: 4,\n      rotateAngle: 0,\n    }\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n  draw() {\n    ctx.save();\n      ctx.translate(this.p.x, this.p.y);\n      ctx.rotate(this.rotateAngle * degToPi); \n      ctx.beginPath();\n      ctx.arc(this.moveX, 0, 4, 0, Math.PI * 2);\n      ctx.fillStyle = this.color;\n      ctx.fill();\n    ctx.restore();\n  }\n  update(idx, arr) {\n    // 圓形子彈移動\n    this.moveX += this.moveXV;\n    // 子彈擊中 shooter\n    enemyMethods.attackShooter(this, idx, arr);\n  }\n}","/* \n ** 敵人方法\n */\nconst enemyMethods = {\n  // 逼近 shooter\n  approach(enemy) {\n    const axisRotateR = enemy.axisRotateR;\n    const isPolygon = typeof(axisRotateR) === 'object';\n    if (!enemy.axisRotateRV) {\n      const shooter = game.shooter;\n      const shooterBody = (shooter.r + (shooter.cirSolidLineW / 2));\n      const distance = (isPolygon ? axisRotateR.whole : (axisRotateR - enemy.r)) - shooterBody;\n      const seconds =  getRandom(30, 40);\n      enemy.axisRotateRV = -(distance / (seconds * updateFPS));\n    }\n    if (isPolygon) {\n      if (enemy.HP.whole) {\n        axisRotateR.small = axisRotateR.big = axisRotateR.whole += enemy.axisRotateRV;\n      } else {\n        // 重物引力較強\n        axisRotateR.big += enemy.axisRotateRV * getRandom(3, 4);\n        // 輕物引力較弱\n        axisRotateR.small += enemy.axisRotateRV * getRandom(1, 4);\n      }\n    } else {\n      enemy.axisRotateR += enemy.axisRotateRV;\n    }\n  },\n\n\n  // 死亡效果\n  dieEffect(enemyR, effectX, effectY, colorRGB, isBoss = false) {\n    let dieTime = 1;\n    let effect = () => {\n      if (!game.isPause) {\n        dieTime += 1;\n      }\n      ctx.beginPath();\n      ctx.save();\n      ctx.strokeStyle = `rgba(${colorRGB}, ${(48 - dieTime) / 46})`;\n      ctx.fillStyle = `rgba(${colorRGB}, ${(48 - dieTime) / 230})`;\n      ctx.shadowColor = `rgba(${colorRGB}, 0.48)`;\n      ctx.shadowBlur = 2;\n      ctx.lineWidth = 2;\n      const effectR = enemyR * baseLog(3, (((dieTime - 2) / 46) * 8) + 1);\n      ctx.arc(effectX, effectY, effectR, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n      // }\n      if (dieTime < 48) {\n        requestAnimationFrame(effect);\n      }\n    }\n    requestAnimationFrame(effect);\n    if (!isBoss) {\n      setTimeout(() => {\n        gameCrawler.textContent = 'ENEMY DIES😇';\n      }, 0);\n    }\n    // playSound('duo', 'F4', '4n');\n    playSound('synth', 'G2', '8n', 0, 25);\n    playSound('duo', 'F2', '4n', 0, 15);\n    playSound('duo', 'E2', '4n', 0, 10);\n  },\n\n\n  // 敵人撞擊 shooter 判定\n  hitShooter(enemies, enemyIdx, type, enemyAxisRotateR, enemyAxisRotateAngle) {\n    const enemy = enemies[enemyIdx];\n    const shooter = game.shooter;\n    let shieldAngleRange;\n    if (shooter.state !== 'shield') {\n      shieldAngleRange = Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) >= (135 * degToPi) && Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) <= (225 * degToPi);\n    } else {\n      shieldAngleRange = Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) >= (90 * degToPi) && Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) <= (270 * degToPi);\n    }\n    // const shieldAngleRange = Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) >= (135 * degToPi) && Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) <= (225 * degToPi);\n    // 判斷是多邊形或其它敵人撞上 shooter\n    const judgeWhatEnemyHit = function () {\n      if (type !== 'big' && type !== 'small') {\n        enemies.splice(enemyIdx, 1);\n        // 移除敵人效果\n        if (type !== 'whole') {\n          const colorRGB = type === 'circle' ? '245, 175, 95' : '54, 118, 187';\n          enemyMethods.dieEffect(enemy.r, originPos(enemyAxisRotateR, enemyAxisRotateAngle).x, originPos(enemyAxisRotateR, enemyAxisRotateAngle).y, colorRGB);\n        } else {\n          const polygonR = (34 + 22) / 2;\n          enemyMethods.dieEffect(polygonR, enemy.originPos(type).x, enemy.originPos(type).y, '231, 70, 93');\n        }\n      } else {\n        enemy.HP[type] -= 1;\n        const polygonR = type === 'big' ? (34 + 22) / 2 : (23 + 21) / 2;\n        enemyMethods.dieEffect(polygonR, enemy.originPos(type).x, enemy.originPos(type).y, '231, 70, 93');\n        if (enemy.HP.big === 0 && enemy.HP.small === 0) {\n          enemies.splice(enemyIdx, 1);\n        }\n      }\n    }\n    // 當敵人撞上 shooter 主體\n    if (enemyAxisRotateR <= (shooter.r + (shooter.cirSolidLineW / 2))) {\n      // shooter.HP -= 1;\n      judgeWhatEnemyHit();\n      enemyMethods.attackShooterResult();\n      playSound('membrane', 'B4');\n      // 當敵人撞上 shooter 護盾\n    } else if (shieldAngleRange && (enemyAxisRotateR <= (shooter.shieldR + (shooter.shieldLineW / 2)))) {\n      judgeWhatEnemyHit();\n      shooter.isProtect = true;\n      gameCrawler.textContent = 'BLOCK😉';\n      playSound('membrane', 'D4');\n    }\n  },\n\n\n  // 敵人子彈擊中 shooter 判定\n  attackShooter(bullet, bulletIdx, bullets, bulletLen = 0) {\n    const shooter = game.shooter;\n    const shooterBody = shooter.r + (shooter.cirSolidLineW / 2);\n    const shooterShield = shooter.shieldR + (shooter.shieldLineW / 2);\n    // 當敵人子彈擊中 shooter 主體\n    if (Math.abs(bullet.moveX) >= (bullet.axisRotateR - (shooterBody + bulletLen))) {\n      // 子彈擊中後\n      enemyMethods.attackShooterResult();\n      // 移除敵人子彈\n      bullets.splice(bulletIdx, 1);\n      bullet.isBoss ? playSound('mono', 'C2', '8n', 0, -10) : playSound('membrane', 'B4');\n    }\n    // 當敵人子彈射中 shooter 的護盾\n    const bulletRotate = bullet.isBoss ? bullet.rotateAngle + 90 : bullet.rotateAngle;\n    const angleGap = Math.abs((mouseMoveAngle / degToPi) - ((bulletRotate % 360) + (bulletRotate < 0 ? 360 : 0)));\n    let shieldAngleRange;\n    if (shooter.state !== 'shield') {\n      shieldAngleRange = (angleGap >= 135) && (angleGap <= 225);\n    } else {\n      shieldAngleRange = (angleGap >= 90) && (angleGap <= 270);\n    }\n    if (shieldAngleRange && (Math.abs(bullet.moveX) >= (bullet.axisRotateR - (shooterShield + bulletLen)))) {\n      // 移除子彈\n      bullets.splice(bulletIdx, 1);\n      gameCrawler.textContent = 'BLOCK😉';\n      playSound('membrane', 'D4');\n    }\n  },\n\n\n  // 敵人撞擊或子彈擊中 shooter 後\n  attackShooterResult() {\n    if (!game.isStart || (game.currentLevel === 10 && !game.boss)) return;\n    const shooter = game.shooter;\n    const shooterHPBarOriginW = 216;\n    // 命條減 1/3\n    const shooterHPBarW = shooterHPBar.offsetWidth - (shooterHPBarOriginW / 3);\n    shooter.isAttacked = true;\n    // shooter 命減 1\n    // shooter.HP -= 1;\n    shooterHPBar.style.width = `${shooterHPBarW < 0 ? 0 : shooterHPBarW}px`;\n    // 若 shooter 已經沒有命條\n    if (shooterHPBarW <= 0) {\n      // 若 shooter 還有愛心\n      if (shooter.hearts) {\n        // 減掉一顆愛心\n        const shooterHeart = document.querySelectorAll('.panel__game-heart');\n        shooterHeart[0].parentNode.removeChild(shooterHeart[0]);\n        shooter.hearts -= 1;\n        // 回復命條\n        shooterHPBar.style.width = `${shooterHPBarOriginW}px`;\n      } else {\n        // 如果沒有愛心，結束遊戲\n        game.endGame();\n        playSound('synth', 'A3');\n        playSound('synth', 'E2', '8n', 160);\n        playSound('synth', 'A2', '8n', 320);\n        clearTimeout(game.crawlerClearedTimer);\n        gameCrawler.textContent = `YOU, ${game.playerName}💀, ARE DEAD`;\n        return;\n      }\n    }\n    gameCrawler.textContent = Math.random() >= 0.5 ? 'OUCH😣' : 'UGGH😫';\n  },\n\n\n  bossDieResult() {\n    let boss = game.boss;\n    enemyMethods.dieEffect(264, originPos(boss.axisRotateR, boss.axisRotateAngle).x, originPos(boss.axisRotateR, boss.axisRotateAngle).y, '245, 175, 95', true);\n    setTimeout(() => {\n      enemyMethods.dieEffect(264, originPos(boss.axisRotateR, boss.axisRotateAngle).x, originPos(boss.axisRotateR, boss.axisRotateAngle).y, '54, 118, 187', true);\n    }, 300);\n    setTimeout(() => {\n      enemyMethods.dieEffect(264, originPos(boss.axisRotateR, boss.axisRotateAngle).x, originPos(boss.axisRotateR, boss.axisRotateAngle).y, '231, 70, 93', true);\n    }, 600);\n    game.boss = null;\n    // 改變背景音樂\n    bgm.pause();\n    bgm.currentTime = 0;\n    victoryBgm.play();\n    victoryBgm.volume = 0.5;\n    // 3 秒後，結束遊戲\n    setTimeout(() => {\n      game.endGame();\n    }, 3000);\n    clearTimeout(game.crawlerClearedTimer);\n    gameCrawler.textContent = 'BOSS DIES!!!🎊';\n  }\n}","/* Environment Variable */\nconst updateFPS = 30;\nlet updateTime = 0;\n\nconst globalColor = {\n  red: '#e7465d',\n  orange: '#f5af5f',\n  yellow: '#f7b52c',\n  blue: '#3676bb',\n  blueDark: '#001d2e',\n  white: '#fff',\n}\n\nconst props = ['heart', 'crackdown', 'shield', 'double', 'wave'];\n\n\n/* GUI Controls */\n// const controls = {\n  // amp: 8,\n  // freq: 0.3,\n  // testAngle: 40,\n// }\n\n// const gui = new dat.GUI();\n// gui.add(controls, 'testAngle', 0, 90).step(1).onChange((value) => {});\n// gui.add(controls, 'freq', 0, 1).step(0.1).onChange((value) => {});\n\nconst startBtn = document.getElementById('start-btn');\nconst restartBtn = document.getElementById('restart-btn');\nconst starsBtn = document.getElementById('stars-btn');\nconst backBtn = document.getElementById('back-btn');\nconst restartBtnStars = document.getElementById('restart-btn--stars');\n\nconst cover = document.getElementById('cover');\nconst gamePanel = document.getElementById('game-panel');\nconst batteryInfo = document.getElementById('battery-info');\nconst shooterHPBar = document.getElementById('hp');\nconst heartWrapper = document.getElementById('heart-wrapper');\nconst prop = document.getElementById('prop');\nconst propImg = document.getElementById('prop__img');\nconst propLastTime = document.getElementById('prop__last-time');\nconst batteryNum = document.getElementById('battery-num');\nconst result = document.getElementById('game-result');\n// const resultNum = document.getElementById('result-num');\nconst panel = document.getElementById('panel');\nconst container = document.getElementById('container');\nconst keyboard = document.getElementById('keyboard');\nconst gameTime = document.getElementById('game-time');\nconst gameLevel = document.getElementById('game-level');\nconst gameCrawler = document.getElementById('game-crawler');\nconst playerName = document.getElementById('player-name');\nconst warning = document.getElementById('warning');\n\nconst resultBoss = document.getElementById('result-boss');\nconst resultBattery = document.getElementById('result-battery');\nconst resultBullet = document.getElementById('result-bullet');\n// const totalPlayers = document.getElementById('total-players');\nconst rankingNum = document.getElementById('ranking-num');\n\nconst resultRanking = document.getElementById('result-ranking');\nconst resultScore = document.getElementById('result-score');\nconst resultStars = document.getElementById('result-stars');\n\n// const share = document.getElementById('share');\nconst bgm = document.getElementById('bgm');\nconst victoryBgm = document.getElementById('victory-bgm');\n\nconst starWrapper1 = document.getElementById('star-wrapper1');\nconst starWrapper2 = document.getElementById('star-wrapper2');\nconst starWrapper3 = document.getElementById('star-wrapper3');\n\nconst shareFb = document.getElementById('share-fb');\nconst shareTwitter = document.getElementById('share-twitter');\n\n\n\n\n/* Initialize Canvas Settings */\nconst canvas = document.getElementById('game');\nconst ctx = canvas.getContext('2d');\nlet ww;\nlet wh;\nlet gameW;\nlet gameH;\nlet gameHalfDiagonalL;\n\nfunction initCanvas() {\n  gameW = canvas.width;\n  gameH = canvas.height;\n  gameHalfDiagonalL = Math.round(Math.sqrt(canvas.width * canvas.width + canvas.height * canvas.height) / 2);\n  ww = document.documentElement.clientWidth;\n  wh = document.documentElement.clientHeight;\n}\n\n\n\nconst degToPi = Math.PI / 180;\nlet coverCircle;\nlet coverTriangle;\nlet coverPolygon;\nlet game;\n\n\n\nclass Game {\n  constructor(args) {\n    const def = {\n      shooter: null,\n      prop: null,\n      batteryNum: 0,\n      circles: [],\n      triangles: [],\n      polygons: [],\n      subTris: [],\n      isStart: false,\n      isEnd: false,\n      isPause: false,\n      blockV: {\n        x: -2,\n        y: 2,\n      },\n      currentLevel: 0,\n      countdownSeconds: 0,\n      // countupSeconds: 0,\n      hpRecoverTimer: null,\n      countdownTimer: null,\n      countupTimer: null,\n      propGeneratedTimer: null,\n      crawlerClearedTimer: null,\n      propGeneratedInterval: 200,\n      boss: null,\n      playerName: '',\n      beatBossSeconds: 0,\n      isMuted: false,\n      isDisplayStars: false,\n    };\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n  init() {\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleClick);\n    window.addEventListener('keyup', handleKeyup);\n    handlePlayerName();\n    startBtn.addEventListener('click', () => {\n      if (!this.checkPlayerName()) return;\n      this.startGame();\n    });\n    restartBtn.addEventListener('click', () => {\n      this.startGame();\n    });\n    restartBtnStars.addEventListener('click', () => {\n      this.startGame();\n    });\n    // 檢查是否為手機\n    if(isMob()) {\n      playerName.classList.add('dpn');\n      startBtn.classList.add('dpn');\n      warning.classList.remove('dpn');\n    }\n    this.drawCover();\n    this.render();\n    this.update();\n    // 初始化方格移動速率與計時器\n    this.setBlockV();\n    // 緩慢恢復 shooter 生命條\n    this.recoverShooterHPBar();\n    starsBtn.addEventListener('click', () => {\n      resultRanking.classList.add('dpn');\n      resultScore.classList.add('dpn');\n      resultStars.classList.remove('dpn');\n      result.classList.add('t20');\n      if (!this.isDisplayStars) {\n        this.handleGameStars();\n      }\n      this.isDisplayStars = true;\n    });\n    backBtn.addEventListener('click', function () {\n      resultRanking.classList.remove('dpn');\n      resultScore.classList.remove('dpn');\n      resultStars.classList.add('dpn');\n      result.classList.remove('t20');\n    });\n    shareFb.addEventListener('click', function () {\n      window.open('https://www.facebook.com/sharer/sharer.php?u=https://yeefun.github.io/radio-defense', '', 'left=0,top=0,width=550,height=450,personalbar=0,toolbar=0,scrollbars=0,resizable=0');\n    });\n    shareTwitter.addEventListener('click', function () {\n      // 參考 https://gist.github.com/McKinneyDigital/2884508\n      const url = 'https://yeefun.github.io/radio-defense';\n      const name = 'szyeefun';\n      window.open(`http://twitter.com/share?url=${encodeURIComponent(url)}&via=${encodeURIComponent(name)}`, '', 'left=0,top=0,width=550,height=450,personalbar=0,toolbar=0,scrollbars=0,resizable=0');\n    });\n  }\n  render() {\n    // if (!this.isPause) {\n    ctx.fillStyle = globalColor.blueDark;\n    ctx.fillRect(0, 0, gameW, gameH);\n    // 繪製方格\n    this.drawBlock();\n    if (!this.isStart && !this.isEnd) {\n      ctx.save();\n        ctx.beginPath();\n        ctx.arc(gameW / 2, gameH / 2, 264, 0, Math.PI * 2);\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.arc(gameW / 2, gameH / 2, 184, 0, Math.PI * 2);\n        ctx.lineWidth = 1.6;\n        ctx.strokeStyle = globalColor.white;\n        ctx.stroke();\n      ctx.restore();\n    }\n    // 繪製 shooter\n    this.shooter.draw();\n    // 繪製每個 circle\n    this.circles.forEach((circle) => {\n      circle.draw();\n    });\n    // 繪製每個 triangle\n    this.triangles.forEach((triangle) => {\n      triangle.draw();\n    });\n    // 繪製每個 polygon\n    this.polygons.forEach((polygon) => {\n      polygon.draw();\n    });\n    // 繪製每個 sub triangle\n    this.subTris.forEach((subTriangle) => {\n      subTriangle.draw();\n    });\n    // 繪製 prop（道具）\n    this.prop && this.prop.draw();\n    // 繪製魔王\n    this.boss && this.boss.draw();\n    if (this.isStart) {\n      // 繪製滑鼠\n      this.drawMouse();\n    }\n    requestAnimationFrame(() => {\n      this.render();\n    });\n  }\n  update() {\n    updateTime += 1;\n    if (!this.isPause && !this.isEnd) {\n      // 更新 shooter\n      this.shooter.update();\n      // 更新每個 circle\n      this.circles.forEach((circle, idx) => {\n        circle.update(idx);\n      });\n      // 更新每個 triangle\n      this.triangles.forEach((triangle, idx) => {\n        triangle.update(idx);\n      });\n      // 更新每個 polygon\n      this.polygons.forEach((polygon, idx) => {\n        polygon.update(idx);\n      });\n      // 更新每個 sub triangle\n      this.subTris.forEach((subTriangle, idx) => {\n        subTriangle.update(idx);\n      });\n      // 更新 prop（道具）\n      this.prop && this.prop.update();\n      // 更新魔王\n      this.boss && this.boss.update();\n    }\n    setTimeout(() => {\n      this.update();\n    }, 1000 / updateFPS);\n  }\n  // 設置封面\n  drawCover() {\n    this.shooter = new Shooter();\n    // 圓形\n    this.circles.push(new Circle({\n      axisRotateR: getRandom(gameHalfDiagonalL / 2, gameHalfDiagonalL / 1.5),\n      axisRotateAngle: 225,\n      axisRotateAngleV: -(getRandom(2, 8) / 10),\n      rotate: getRandom(0, 360),\n    }));\n    // 三角形\n    this.triangles.push(new Triangle({\n      axisRotateR: getRandom(gameHalfDiagonalL / 2, gameHalfDiagonalL / 1.5),\n      axisRotateAngle: 45,\n      axisRotateAngleV: (getRandom(2, 8) / 10),\n      rotate: 45,\n    }));\n    // 多邊形\n    const rotateR = getRandom(gameHalfDiagonalL / 2, gameHalfDiagonalL / 1.5);\n    const rotate = getRandom(0, 360);\n    const rotateV = (getRandom(4, 8) / 10);\n    this.polygons.push(new Polygon({\n      axisRotateR: {\n        whole: rotateR,\n        big: rotateR,\n        small: rotateR,\n      },\n      axisRotateAngle: {\n        whole: 315,\n        big: 315,\n        small: 315,\n      },\n      rotate: {\n        whole: rotate,\n        big: rotate,\n        small: rotate,\n      },\n      rotateV,\n    }));\n  }\n  // 畫方格\n  drawBlock() {\n    ctx.save();\n      ctx.beginPath();\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.16)';\n      ctx.lineWidth = 0.4;\n      // 畫橫列\n      for (let i = 0; i < 18; i += 1) {\n        ctx.moveTo(i * 56 + ((updateTime * this.blockV.x) % 56), 0);\n        ctx.lineTo(i * 56 + ((updateTime * this.blockV.x) % 56), gameH);\n      }\n      // 畫直行\n      for (let i = 0; i < 14; i += 1) {\n        ctx.moveTo(0, i * 52 + ((updateTime * this.blockV.y) % 52));\n        ctx.lineTo(gameW, i * 52 + ((updateTime * this.blockV.y) % 52));\n      }\n      ctx.stroke();\n    ctx.restore();\n  }\n  // 畫滑鼠\n  drawMouse() {\n    const mouseMovePosX = mouseMovePos.x + gameW / 2;\n    const mouseMovePosY = mouseMovePos.y + gameH / 2;\n    const length = 12;\n    ctx.save();\n      ctx.translate(mouseMovePosX, mouseMovePosY);\n      ctx.strokeStyle = globalColor.white;\n      ctx.lineWidth = 0.8;\n      ctx.beginPath();\n      ctx.moveTo(-length, 0);\n      ctx.lineTo(length, 0);\n      ctx.moveTo(0, -length);\n      ctx.lineTo(0, length);\n      ctx.stroke();\n    ctx.restore();\n    ctx.fillStyle = globalColor.white;\n    ctx.beginPath();\n    ctx.arc(mouseMovePosX, mouseMovePosY, 1.6, 0, Math.PI * 2);\n    ctx.fill();\n  }\n  // 設定方格移動速率\n  setBlockV() {\n    setTimeout(() => {\n      this.blockV.x = Math.random() * 8 - 4;\n      this.blockV.y = Math.random() * 8 - 4;\n      this.setBlockV();\n    }, 8000);\n  }\n  // 開始遊戲（當讀者按下 'Start Play' or 'Restart' 按鈕）\n  startGame() {\n    this.isStart = true;\n    this.isEnd = false;\n    // 移除封面\n    cover.style.display = 'none';\n    // 顯示遊戲介面\n    gamePanel.style.display = 'block';\n    // 電池資訊歸零\n    this.batteryNum = 0;\n    batteryNum.textContent = this.batteryNum;\n    // 重設生命條\n    shooterHPBar.style.width = '216px';\n    // 取得玩家名\n    this.playerName = playerName.value;\n    // 初始化 shooter\n    this.shooter = new Shooter();\n    // 三個愛心命\n    heartWrapper.innerHTML = '';\n    for (let i = 0; i < this.shooter.hearts; i++) {\n      const heart = document.createElement('DIV');\n      heart.classList.add('panel__game-heart');\n      heartWrapper.appendChild(heart);\n    }\n    // 清空敵人與子彈\n    this.circles.forEach((circle) => {\n      circle.bullets = [];\n    });\n    this.triangles.forEach((triangle) => {\n      triangle.bullets = [];\n      triangle.HP = 0;\n    });\n    this.circles = [];\n    this.triangles = [];\n    this.polygons = [];\n    if (this.boss) {\n      this.boss.bullets = [];\n      this.boss = null;\n    }\n    // 隱藏預設滑鼠\n    container.style.cursor = 'none';\n    // 隱藏結果\n    result.classList.add('op0');\n    // 讓滑鼠點擊無效\n    panel.style.pointerEvents = 'none';\n    // 顯示獲得電池資訊\n    batteryInfo.classList.remove('op0');\n    // 顯示鍵盤指示\n    keyboard.classList.remove('op0');\n    // 清空關卡字\n    gameLevel.textContent = '';\n    // 回到第 0 關\n    this.currentLevel = 0;\n    // 倒數計時 2 秒\n    this.countdownSeconds = 3;\n\n    gameCrawler.textContent = `👋${this.playerName}👋`;\n    gameTime.textContent = `00:0${this.countdownSeconds}”`;\n    const countdownStartTime = () => {\n      setTimeout(() => {\n        if (this.countdownSeconds === 0) {\n          this.currentLevel += 1;\n          this.setLevel(this.currentLevel);\n          // 開始產生道具\n          this.generateProp();\n          // 開始清除跑馬燈\n          this.clearCrawler();\n          return;\n        }\n        this.countdownSeconds -= 1;\n        gameTime.textContent = `00:0${this.countdownSeconds}”`;\n        switch (this.countdownSeconds) {\n          case 2:\n            gameCrawler.textContent = '🌊WAVES ARE COMING🌊';\n            break;\n          case 1:\n            gameCrawler.textContent = '😈ARE YOU READY😈';\n            break;\n          case 0:\n            gameCrawler.textContent = '🔥🔥GO🔥🔥';\n            break;\n          default:\n            break;\n        }\n        playSound('synth', 'G4');\n        countdownStartTime();\n      }, 1000);\n    }\n    countdownStartTime();\n    playSound('synth', 'C#5');\n    playSound('synth', 'E5', '8n', 160);\n    // 改變背景音樂\n    victoryBgm.pause();\n    victoryBgm.currentTime = 0;\n    bgm.play();\n    bgm.volume = 0.5;\n    // 遊戲結果返回第一頁\n    resultRanking.classList.remove('dpn');\n    resultScore.classList.remove('dpn');\n    resultStars.classList.add('dpn');\n    result.classList.remove('t20');\n    // 將遊戲結果換成 loading 圖示\n    const loadingIcon = '<img src=\"./img/loading.svg\" alt=\"loading icon\" />';\n    rankingNum.innerHTML = loadingIcon;\n    starWrapper1.innerHTML = loadingIcon;\n    starWrapper2.innerHTML = loadingIcon;\n    starWrapper3.innerHTML = loadingIcon;\n    // 開啟讓 stars 重新取資料的開關\n    this.isDisplayStars = false;\n  }\n  // 遊戲結束\n  endGame() {\n    this.isStart = false;\n    this.isEnd = true;\n    // 貼上電池數量\n    // resultNum.textContent = this.batteryNum;\n    // 填上結果\n    if (this.currentLevel !== 10) {\n      resultBoss.textContent = 'NO';\n    } else {\n      resultBoss.textContent = this.beatBossSeconds;\n    }\n    resultBattery.textContent = this.batteryNum;\n    resultBullet.textContent = this.shooter.bulletNum;\n    // 顯示結果\n    result.classList.remove('op0');\n    // 隱藏電池分數資訊\n    batteryInfo.classList.add('op0');\n    // 隱藏鍵盤指示\n    keyboard.classList.add('op0');\n    // 移除道具顯示介面\n    prop.classList.add('op0');\n    // 顯示預設滑鼠\n    container.style.cursor = 'auto';\n    // 讓滑鼠可以點擊\n    panel.style.pointerEvents = 'auto';\n    this.handleGameResult();\n    clearTimeout(this.countdownTimer);\n    clearTimeout(this.countupTimer);\n    clearTimeout(this.propGeneratedTimer);\n  }\n  // 暫停遊戲\n  pauseGame() {\n    if (!this.currentLevel) return;\n    this.isPause = !this.isPause;\n    if (this.isPause) {\n      clearTimeout(this.countdownTimer);\n      clearTimeout(this.countupTimer);\n      clearTimeout(this.propGeneratedTimer);\n      clearTimeout(this.crawlerClearedTimer);\n    } else {\n      this.generateProp();\n      this.clearCrawler();\n      if (!this.boss) {\n        this.countdownTime();\n      } else {\n        this.countupTime();\n        if (this.boss.isDisappeared) {\n          clearTimeout(this.boss.appearTimer);\n          this.boss.appear();\n        } else {\n          clearTimeout(this.boss.disappearTimer);\n          this.boss.disappear();\n        }\n      }\n    }\n  }\n  handleGameResult() {\n    const name = this.playerName;\n    const level = this.currentLevel;\n    const battery = this.batteryNum;\n    const bullet = this.shooter.bulletNum;\n    let boss;\n    if (level !== 10 || this.boss) {\n      boss = 'no';\n    } else {\n      boss = this.beatBossSeconds;\n    }\n    axios.get('https://script.google.com/a/g.ntu.edu.tw/macros/s/AKfycbwwNUeevxFlQaLzP_gdhnTmSC97HgRlpV6DOCUIzg/exec', {\n      params: {\n        name,\n        level,\n        battery,\n        bullet,\n        boss,\n      }\n    })\n    .then((res) => {\n      const data = res.data;\n      rankingNum.innerHTML = `\n        <p>${data.rank}</p>\n        <span>/&nbsp;${data.totalPlayers}</span>\n      `;\n    });\n  }\n  handleGameStars() {\n    axios.get('https://script.google.com/a/g.ntu.edu.tw/macros/s/AKfycbx1L2GmotaRfoSMzVA5BtpC9kiWneoA69IOtoEi/exec')\n      .then((res) => {\n        const data = res.data;\n        const firstStarData = data.firstData;\n        const secondStarData = data.secondData;\n        const thirdStarData = data.thirdData;\n        let starScoreHTML = '';\n        function fillStarScore(name, wave, bat, bullet, boss) {\n          starScoreHTML = `\n            <div class=\"star__name\">${name}</div>\n            <div class=\"star__scores\">\n              <div class=\"star__score\">\n                <div class=\"star__num\">${wave}</div>\n                <div class=\"star__text\">WAVES</div>\n              </div>\n              <div class=\"star__score\">\n                <div class=\"star__num\">${bat}</div>\n                <div class=\"star__text\">BATTERIES</div>\n              </div>\n              <div class=\"star__score\">\n                <div class=\"star__num\">${bullet}</div>\n                <div class=\"star__text\">BULLETS</div>\n              </div>\n              <div class=\"star__score\">\n                <div class=\"star__num\">${boss}</div>\n                <div class=\"star__text\">BOSS</div>\n              </div>\n            </div>\n          `;\n        }\n        fillStarScore(...firstStarData);\n        starWrapper1.innerHTML = starScoreHTML;\n        fillStarScore(...secondStarData);\n        starWrapper2.innerHTML = starScoreHTML;\n        fillStarScore(...thirdStarData);\n        starWrapper3.innerHTML = starScoreHTML;\n      });\n  }\n  // 產生道具\n  generateProp() {\n    // 如果已有道具，便停止計時\n    if (this.prop) return;\n    this.propGeneratedTimer = setTimeout(() => {\n      this.propGeneratedInterval -= 1;\n      // 20 秒過後\n      if (this.propGeneratedInterval === 0) {\n        let propName;\n        // 如果大於 5 顆心，便排除愛心\n        if (this.shooter.hearts < 5) {\n          propName = props[getRandom(0, 4)];\n        } else {\n          propName = props[getRandom(1, 4)];\n        }\n        this.prop = new Prop({\n          src: `./img/${propName}.svg`,\n          axisRotateR: gameHalfDiagonalL,\n          axisRotateAngle: getRandom(0, 360),\n        });\n        // 每 20 (200 * 100) 秒產生一個道具\n        this.propGeneratedInterval = 200;\n      }\n      this.generateProp();\n    }, 100);\n  }\n  // 倒數遊戲時間\n  countdownTime() {\n    this.countdownTimer = setTimeout(() => {\n      if (this.countdownSeconds === 0) {\n        this.currentLevel += 1;\n        this.setLevel(this.currentLevel);\n        return;\n      }\n      this.countdownSeconds -= 1;\n      gameTime.textContent = `00:${this.countdownSeconds < 10 ? `0${this.countdownSeconds}` : this.countdownSeconds}”`;\n      this.countdownTime();\n    }, 1000);\n  }\n  countupTime() {\n    this.countupTimer = setTimeout(() => {\n      this.beatBossSeconds += 1;\n      const minutes = Math.floor(this.beatBossSeconds / 60);\n      const trueSeconds = this.beatBossSeconds % 60;\n      const TimeSeconds = trueSeconds < 10 ? `0${trueSeconds}` : trueSeconds;\n      const TimeMinutes = minutes < 10 ? `0${minutes}` : minutes;\n      gameTime.textContent = `${TimeMinutes}:${TimeSeconds}”`;\n      this.countupTime();\n    }, 1000);\n  }\n  // 自動恢復 shooter 生命條\n  recoverShooterHPBar() {\n    this.hpRecoverTimer = setTimeout(() => {\n      if (this.isPause || !this.isStart) {\n        this.recoverShooterHPBar();\n        return;\n      }\n      const nowHPW = shooterHPBar.offsetWidth;\n      if (nowHPW < 216) {\n        const recoverHPBarW = nowHPW + 1;\n        shooterHPBar.style.width = `${recoverHPBarW}px`;\n      }\n      this.recoverShooterHPBar();\n    }, 300);\n  }\n  // 每 3 秒清除一次跑馬燈\n  clearCrawler() {\n    gameCrawler.textContent = '';\n    // CONFUSED 為什麼這樣寫不行？（只會觸發兩次）\n    // setTimeout(this.clearCrawler, 3000);\n    this.crawlerClearedTimer = setTimeout(() => {\n      this.clearCrawler();\n    }, 3000);\n  }\n  // 設定敵人出場\n  setEnemy(form, seconds = 0) {\n    setTimeout(() => {\n      switch (form) {\n        case 'circle': {\n          this.circles.push(new Circle({\n            axisRotateR: getRandom(gameHalfDiagonalL / 3, gameHalfDiagonalL),\n            axisRotateAngle: getRandom(0, 360),\n            axisRotateAngleV: -(getRandom(2, 8) / 10),\n            rotate: getRandom(0, 360),\n          }));\n          break;\n        }\n        case 'triangle': {\n          // axisRotateAngle 與 rotate 必須相同\n          const angle = getRandom(0, 360);\n          this.triangles.push(new Triangle({\n            axisRotateR: getRandom(gameHalfDiagonalL / 3, gameHalfDiagonalL),\n            axisRotateAngle: angle,\n            axisRotateAngleV: getRandom(2, 8) / 10,\n            rotate: angle,\n          }));\n          break;\n        }\n        case 'polygon': {\n          const rotateR = getRandom(gameHalfDiagonalL / 3, gameHalfDiagonalL / 1.5);\n          const rotateAngle = getRandom(0, 360);\n          const rotate = getRandom(0, 360);\n          this.polygons.push(new Polygon({\n            axisRotateR: {\n              whole: rotateR,\n              big: rotateR,\n              small: rotateR,\n            },\n            axisRotateAngle: {\n              whole: rotateAngle,\n              big: rotateAngle,\n              small: rotateAngle,\n            },\n            rotate: {\n              whole: rotate,\n              big: rotate,\n              small: rotate,\n            },\n            rotateV: getRandom(4, 8) / 10,\n          }));\n          break;\n        }\n        default:\n          break;\n      }\n    }, seconds * 1000);\n  }\n  // 初始化關卡\n  initLevel(level, seconds) {\n    gameLevel.textContent = `Wave ${level}`;\n    this.countdownSeconds = seconds;\n    gameTime.textContent = `00:${this.countdownSeconds}”`;\n    this.countdownTime();\n  }\n  // 設定關卡\n  setLevel(level) {\n    switch (level) {\n      case 1:\n        this.initLevel('01', 15);\n        // const rotateNum = 360;\n        // this.boss = new Boss({\n        //   axisRotateR: getRandom(gameH / 3, gameH / 2.5),\n        //   axisRotateAngle: rotateNum,\n        //   rotate: rotateNum - 90,\n        // });\n        // 設定敵人出場\n        this.setEnemy('circle', 2);\n        break;\n      case 2:\n        this.initLevel('02', 20);\n        this.setEnemy('triangle', 2);\n        this.setEnemy('polygon', 10);\n        break;\n      case 3:\n        this.initLevel('03', 20);\n        this.setEnemy('polygon', 2);\n        this.setEnemy('circle', 5);\n        this.setEnemy('polygon', 10);\n        break;\n      case 4:\n        this.initLevel('04', 30);\n        this.setEnemy('circle', 2);\n        this.setEnemy('triangle', 2);\n        this.setEnemy('polygon', 10);\n        this.setEnemy('triangle', 15);\n        this.setEnemy('polygon', 20);\n        break;\n      case 5:\n        this.initLevel('05', 30);\n        this.setEnemy('circle', 2);\n        this.setEnemy('circle', 5);\n        this.setEnemy('polygon', 15);\n        this.setEnemy('triangle', 20);\n        break;\n      case 6:\n        this.initLevel('06', 40);\n        this.setEnemy('triangle', 2);\n        this.setEnemy('triangle', 5);\n        this.setEnemy('circle', 15);\n        this.setEnemy('circle', 30);\n        this.setEnemy('polygon', 30);\n        break;\n      case 7:\n        this.initLevel('07', 60);\n        this.setEnemy('circle', 2);\n        this.setEnemy('triangle', 2);\n        this.setEnemy('circle', 10);\n        this.setEnemy('triangle', 10);\n        this.setEnemy('polygon', 15);\n        this.setEnemy('polygon', 20);\n        this.setEnemy('triangle', 25);\n        this.setEnemy('triangle', 35);\n        this.setEnemy('polygon', 40);\n        this.setEnemy('circle', 45);\n        break;\n      case 8:\n        this.initLevel('08', 60);\n        this.setEnemy('circle', 5);\n        this.setEnemy('triangle', 10);\n        this.setEnemy('polygon', 15);\n        this.setEnemy('circle', 20);\n        this.setEnemy('polygon', 30);\n        this.setEnemy('triangle', 35);\n        this.setEnemy('polygon', 35);\n        this.setEnemy('triangle', 45);\n        this.setEnemy('circle', 50);\n        this.setEnemy('polygon', 50);\n        break;\n      case 9:\n        this.initLevel('09', 40);\n        this.setEnemy('circle', 2);\n        this.setEnemy('triangle', 2);\n        this.setEnemy('triangle', 5);\n        this.setEnemy('polygon', 10);\n        this.setEnemy('circle', 15);\n        this.setEnemy('polygon', 15);\n        this.setEnemy('circle', 25);\n        this.setEnemy('triangle', 30);\n        break;\n      case 10:\n        gameLevel.textContent = 'Wave 10';\n        const rotateNum = getRandom(0, 360);\n        this.boss = new Boss({\n          axisRotateR: getRandom(gameH / 3, gameH / 2.5),\n          axisRotateAngle: rotateNum,\n          rotate: rotateNum - 90,\n        });\n        this.countupTime();\n        break;\n      default:\n        break;\n    }\n    playSound('synth', 'A6');\n  }\n  checkPlayerName() {\n    // const playerName = document.getElementById('player-name').value;\n    if (playerName.value) {\n      return true;\n    } else {\n      playerName.classList.add('warn');\n      playSound('synth', 'A3');\n      playSound('synth', 'A2', '8n', 160);\n      return false;\n    }\n  }\n}\n\n\n\n// Page Loaded\nfunction handleLoad() {\n  game = new Game();\n  initCanvas();\n  game.init();\n}\n\n// load & resize event\nwindow.addEventListener('load', handleLoad);\nwindow.addEventListener('resize', initCanvas);\n\n\n\n// Mouse Events & Recording\nlet mouseMovePos = {}\nlet mouseMoveAngle = 0;\nfunction handleMouseMove(evt) {\n  mouseMovePos.x = evt.x - ww / 2;\n  mouseMovePos.y = evt.y - wh / 2;\n  const angle = Math.atan2(mouseMovePos.y, mouseMovePos.x);\n  mouseMoveAngle = angle < 0 ? (angle + 2 * Math.PI) : angle;\n};\n\nlet beforeShootTime = new Date();\nfunction handleClick() {\n  if (game.isPause) return;\n  game.shooter.shoot();\n};\n\nfunction handleKeyup(evt) {\n  if (game.isStart) {\n    if (evt.key === 's') {\n      game.shooter.shoot();\n    }\n    if (evt.key === 'p') {\n      game.pauseGame();\n    }\n  } else {\n    if (evt.key === 'Enter') {\n      if (!game.checkPlayerName()) return;\n      game.startGame();\n    }\n  }\n  if (evt.key === 'm') {\n    game.isMuted = !game.isMuted;\n    bgm.muted = !bgm.muted;\n    victoryBgm.muted = !victoryBgm.muted;\n  }\n}\n\nfunction handlePlayerName() {\n  playerName.addEventListener('focus', function () {\n    playerName.classList.remove('shine');\n    playerName.classList.remove('warn');\n  });\n\n  playerName.addEventListener('focusout', function () {\n    if (!playerName.value) {\n      playerName.classList.add('shine');\n    }\n  });\n\n  playerName.addEventListener('input', function () {\n    if (playerName.value) {\n      startBtn.classList.add('shine');\n    } else {\n      startBtn.classList.remove('shine');\n    }\n  });\n}","class Polygon {\n  constructor(args) {\n    const def = {\n      axisRotateR: {\n        whole: 0,\n        big: 0,\n        small: 0,\n      },\n      axisRotateAngle: {\n        whole: 0,\n        big: 0,\n        small: 0,\n      },\n      rotate: {\n        whole: 0,\n        big: 0,\n        small: 0,\n      },\n      HP: {\n        whole: 1,\n        big: 1,\n        small: 1,\n      },\n      axisRotateRV: 0,\n      rotateV: 0,\n      color: globalColor.red,\n      // 是否正好要分裂\n      isJustSplite: true,\n      scale: 0,\n      beginAppear: true,\n      isBossGenerate: false,\n    }\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n\n\n  originPos(form) {\n    return {\n      x: (gameW / 2) + this.axisRotateR[form] * Math.cos(this.axisRotateAngle[form] * degToPi),\n      y: (gameH / 2) + this.axisRotateR[form] * Math.sin(this.axisRotateAngle[form] * degToPi),\n    };\n  }\n\n\n  draw() {\n    if (this.HP.whole) {\n      ctx.save();\n      ctx.translate(this.originPos('whole').x, this.originPos('whole').y);\n      ctx.rotate(this.rotate.whole * degToPi);\n      ctx.scale(this.scale, this.scale);\n      // 主體多邊形\n      ctx.beginPath();\n      ctx.fillStyle = this.color;\n      ctx.moveTo(21 * Math.cos(8 * degToPi), 21 * Math.sin(8 * degToPi));\n      ctx.$triLineTo(23, 70);\n      ctx.$triLineTo(23, 150);\n      ctx.$triLineTo(34, 202);\n      ctx.$triLineTo(22, 255);\n      ctx.$triLineTo(22, 324);\n      ctx.closePath();\n      ctx.fill();\n      // 右淡五邊形\n      ctx.beginPath();\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.07)';\n      ctx.moveTo(9.6, -2);\n      ctx.$triLineTo(22, 324);\n      ctx.$triLineTo(21, 8);\n      ctx.$triLineTo(23, 70);\n      ctx.$triLineTo(10, 36);\n      ctx.closePath();\n      ctx.fill();\n      // 下淡四邊形\n      ctx.beginPath();\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.21)';\n      ctx.moveTo(10 * Math.cos(40 * degToPi), 10 * Math.sin(40 * degToPi));\n      ctx.$triLineTo(23, 70);\n      ctx.$triLineTo(23, 150);\n      ctx.lineTo(-8.8, 0);\n      ctx.closePath();\n      ctx.fill();\n      // 閃電\n      drawLightning({\n        x: -0.8,\n        y: -16\n      });\n      ctx.restore();\n    } else {\n      // 大分裂四邊形\n      if (this.HP.big) {\n        ctx.save();\n        ctx.translate(this.originPos('big').x, this.originPos('big').y);\n        ctx.rotate(this.rotate.big * degToPi);\n        // 大分裂主體\n        ctx.beginPath();\n        ctx.fillStyle = this.color;\n        ctx.moveTo(23 * Math.cos(70 * degToPi), 23 * Math.sin(70 * degToPi));\n        ctx.$triLineTo(23, 150);\n        ctx.$triLineTo(34, 202);\n        ctx.$triLineTo(22, 255);\n        ctx.closePath();\n        ctx.fill();\n        // 大分裂內下四邊形\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.21)';\n        ctx.beginPath();\n        ctx.moveTo(-8.8, 0);\n        ctx.$triLineTo(4.8, 64);\n        ctx.$triLineTo(23, 70);\n        ctx.$triLineTo(23, 150);\n        ctx.closePath();\n        ctx.fill();\n        // 大分裂左閃電\n        drawLightning({\n          x: -12,\n          y: -8\n        }, 0.6);\n        ctx.restore();\n      }\n      // 小分裂四邊形\n      if (this.HP.small) {\n        ctx.save();\n        ctx.translate(this.originPos('small').x, this.originPos('small').y);\n        ctx.rotate(this.rotate.small * degToPi);\n        // 小分裂主體\n        ctx.beginPath();\n        ctx.fillStyle = this.color;\n        ctx.moveTo(23 * Math.cos(70 * degToPi), 23 * Math.sin(70 * degToPi));\n        ctx.$triLineTo(22, 255);\n        ctx.$triLineTo(22, 324);\n        ctx.$triLineTo(21, 8);\n        ctx.closePath();\n        ctx.fill();\n        // 小分裂內下三角形\n        ctx.beginPath();\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.21)';\n        ctx.moveTo(10 * Math.cos(40 * degToPi), 10 * Math.sin(40 * degToPi));\n        ctx.$triLineTo(4.8, 64);\n        ctx.$triLineTo(23, 70);\n        ctx.closePath();\n        ctx.fill();\n        // 小分裂內右五邊形\n        ctx.beginPath();\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.07)';\n        ctx.moveTo(9.6, -2);\n        ctx.$triLineTo(22, 324);\n        ctx.$triLineTo(21, 8);\n        ctx.$triLineTo(23, 70);\n        ctx.$triLineTo(10, 36);\n        ctx.closePath();\n        ctx.fill();\n        // 小分裂閃電\n        drawLightning({\n          x: 10,\n          y: -8\n        }, 0.5);\n        ctx.restore();\n      }\n    }\n  }\n\n\n  update(idx) {\n    this.beginAppear && this.appear(this.isBossGenerate);\n    this.beginAppear = false;\n    enemyMethods.approach(this);\n    // 如果尚未分裂\n    if (this.HP.whole) {\n      this.rotate.whole = this.rotate.big = this.rotate.small += this.rotateV;\n      // 當多邊形撞上 shooter\n      game.isStart && enemyMethods.hitShooter(game.polygons, idx, 'whole', this.axisRotateR.whole, this.axisRotateAngle.whole);\n    } else {\n      // let rotateDirection;\n      // 如果正好要分裂\n      if (this.isJustSplite) {\n        // const rotateOriginPos = 90 - 70;\n        // const rotateDirection = (((this.rotate.whole % 360) >= rotateOriginPos) && ((this.rotate.whole % 360) < (180 + rotateOriginPos))) ? -1 : 1;\n        const rotateDirection = Math.random() >= 0.5 ? 1 : -1;\n        TweenLite.to(this.axisRotateAngle, 2.4, {\n          big: `+=${getRandom(15, 30) * rotateDirection}`,\n          small: `-=${getRandom(15, 30) * rotateDirection}`,\n          ease: Circ.easeOut,\n        });\n        TweenLite.to(this.axisRotateR, 2.4, {\n          big: `+=${getRandom(50, 150)}`,\n          small: `+=${getRandom(50, 150)}`,\n          ease: Circ.easeOut,\n        });\n        TweenLite.to(this.rotate, 2.4, {\n          big: `+=${getRandom(180, 270)}`,\n          small: `-=${getRandom(180, 270)}`,\n          ease: Circ.easeOut,\n        });\n        // gameCrawler.textContent = 'ENEMY SPLITS';\n        this.isJustSplite = false;\n      }\n      // 當大分裂撞上 shooter\n      if (this.HP.big) {\n        // 重物自轉較慢\n        this.rotate.big += this.rotateV * 1.4;\n        enemyMethods.hitShooter(game.polygons, idx, 'big', this.axisRotateR.big, this.axisRotateAngle.big);\n      }\n      // 當小分裂撞上 shooter\n      if (this.HP.small) {\n        // 輕物自轉較快\n        this.rotate.small -= this.rotateV * 1.6;\n        enemyMethods.hitShooter(game.polygons, idx, 'small', this.axisRotateR.small, this.axisRotateAngle.small);\n      }\n    }\n  }\n\n\n  appear(isBossGenerate) {\n    gameCrawler.textContent = '⚠ ENEMY IS COMING';\n    TweenLite.to(this, 0.8, {\n      scale: 1,\n      ease: Back.easeOut.config(1.7),\n    });\n    if (isBossGenerate) {\n      const rotateNum = getRandom(40, 80);\n      const rNum = getRandom(40, 80);\n      TweenLite.to(this.axisRotateAngle, 1.6, {\n        whole: `-=${rotateNum}`,\n        big: `-=${rotateNum}`,\n        small: `-=${rotateNum}`,\n        ease: Power2.easeOut,\n      });\n      TweenLite.to(this.axisRotateR, 1.6, {\n        whole: `+=${rNum}`,\n        big: `+=${rNum}`,\n        small: `+=${rNum}`,\n        ease: Power2.easeOut,\n      });\n    }\n    game.isStart && playSound('synth', 'C4', '4n');\n  }\n}","/* 道具 class */\nclass Prop {\n  constructor(args) {\n    const def = {\n      img: new Image(),\n      src: '',\n      axisRotateR: 0,\n      axisRotateRV: 0,\n      axisRotateAngle: 0,\n      r: 32,\n    }\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n  draw() {\n    if (!this.img.src) {\n      // 防止 Failed to execute 'drawImage' on 'CanvasRenderingContext2D': The HTMLImageElement provided is in the 'broken' state.\n      // this.img.width = 44;\n      // this.img.height = 44;\n      this.img.src = this.src;\n    }\n    if (this.img.complete) {\n      ctx.save();\n      ctx.translate(originPos(this.axisRotateR, this.axisRotateAngle).x, originPos(this.axisRotateR, this.axisRotateAngle).y);\n      // setTimeout(() => {\n      ctx.drawImage(this.img, 0, 0);\n      // }, 0);\n      // ctx.drawImage(this.img, 0, 0);\n      ctx.beginPath();\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\n      ctx.arc(this.img.width / 2, this.img.height / 2, this.r, 0, Math.PI * 2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n  update() {\n    if (!this.axisRotateRV) {\n      const seconds = getRandom(5, 8);\n      this.axisRotateRV = -(gameHalfDiagonalL / (seconds * updateFPS));\n    }\n    this.axisRotateR += this.axisRotateRV;\n    // 當道具撞上 shooter 主體\n    const shooter = game.shooter;\n    // 判斷是否撞上\n    if ((this.axisRotateR + this.r) <= (shooter.r + (shooter.cirSolidLineW / 2))) {\n      // 清掉該道具\n      game.prop = '';\n      const propName = this.src.replace('./img/', '').split('.')[0];\n      shooter.getProp(propName);\n    }\n  }\n}","class Shooter {\n  constructor(args) {\n    const def = {\n      color: globalColor.white,\n      // r: 34 * 0.85,\n      r: 28.9,\n      // shieldR: (34 + 36) * 0.85,\n      shieldR: 60,\n      // cirSolidLineW: 6 * 0.85,\n      cirSolidLineW: 6,\n      // shieldLineW: 4 * 0.85,\n      shieldLineW: 4,\n      rotateAngle: 0,\n      bullets: [],\n      bulletNum: 0,\n      hearts: 3,\n      state: '',\n      isAttacked: false,\n      isProtect: false,\n      beforeShootTime: new Date(),\n    };\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n  draw() {\n    if (!game.isStart && !game.isEnd) return;\n    ctx.save();\n    // 輪圍\n    ctx.translate(gameW / 2, gameH / 2);\n    ctx.save();\n    ctx.beginPath();\n    ctx.shadowColor = 'rgba(255, 255, 255, 0.4)';\n    ctx.shadowBlur = 16;\n    ctx.lineWidth = this.cirSolidLineW;\n    ctx.arc(0, 0, this.r, 0, Math.PI * 2);\n    if (!this.isAttacked) {\n      ctx.strokeStyle = this.color;\n    } else {\n      ctx.strokeStyle = globalColor.red;\n      this.isAttacked = false;\n    }\n    ctx.stroke();\n    // 輪軸\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.$triLineTo(this.r, 0, this.rotateAngle);\n    ctx.moveTo(0, 0);\n    ctx.$triLineTo(this.r, 120, this.rotateAngle);\n    ctx.moveTo(0, 0);\n    ctx.$triLineTo(this.r, 240, this.rotateAngle);\n    // ctx.lineWidth = 3 * 0.85;\n    ctx.lineWidth = 2.55;\n    ctx.stroke();\n    ctx.restore();\n    // 輪圍外虛線\n    ctx.strokeStyle = this.color;\n    // const outerR = this.r + 22 * 0.85;\n    const outerR = this.r + 20;\n    for (let i = 0; i < 360; i += 1) {\n      const x1 = outerR * Math.cos(i * degToPi + this.rotateAngle);\n      const y1 = outerR * Math.sin(i * degToPi + this.rotateAngle);\n      const x2 = outerR * Math.cos((i + 1) * degToPi + this.rotateAngle);\n      const y2 = outerR * Math.sin((i + 1) * degToPi + this.rotateAngle);\n      if (i % 10 < 5) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.lineWidth = 1;\n        ctx.stroke();\n      }\n    }\n    // 護盾\n    ctx.beginPath();\n    ctx.lineWidth = this.shieldLineW;\n    // 如果 shooter 狀態為 shield，護盾變為 180°\n    if (this.state !== 'shield') {\n      ctx.arc(0, 0, this.shieldR, 135 * degToPi + this.rotateAngle, 225 * degToPi + this.rotateAngle);\n    } else {\n      ctx.arc(0, 0, this.shieldR, 90 * degToPi + this.rotateAngle, 270 * degToPi + this.rotateAngle);\n    }\n    if (!this.isProtect) {\n      ctx.strokeStyle = this.color;\n    } else {\n      ctx.strokeStyle = globalColor.blue;\n      this.isProtect = false;\n    }\n    ctx.stroke();\n    // 砲口\n    ctx.beginPath();\n    ctx.save();\n    ctx.shadowColor = 'rgba(255, 255, 255, 0.4)';\n    ctx.shadowBlur = 16;\n    ctx.rotate(this.rotateAngle);\n    ctx.translate(this.r + 8, 0);\n    ctx.moveTo(0, 0);\n    // 下方長方形長 13.6、寬（高） 10.2\n    // 上方梯形高 11.8、上邊寬 6.8\n    ctx.lineTo(0, 6.8);\n    ctx.lineTo(10.2, 6.8);\n    ctx.lineTo(22.1, 3.4);\n    ctx.lineTo(22.1, -3.4);\n    ctx.lineTo(10.2, -6.8);\n    ctx.lineTo(0, -6.8);\n    ctx.closePath();\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.restore();\n    ctx.restore();\n    // 發射子彈\n    this.bullets.forEach((bullet) => {\n      bullet.draw();\n    });\n  }\n  update() {\n    this.rotateAngle = mouseMoveAngle;\n    this.bullets.forEach((bullet, idx) => {\n      bullet.update(idx);\n    });\n  }\n  shoot() {\n    const shootTime = new Date();\n    if (shootTime - beforeShootTime > 400) {\n      let bulletNum;\n      // 如果 shooter 狀態為 double，每次射兩發，兩發之間隔 0.16 秒\n      if (this.state !== 'double') {\n        bulletNum = 1;\n      } else {\n        bulletNum = 2;\n      }\n      for (let i = 0; i < bulletNum; i++) {\n        if (this.state !== 'wave') {\n          setTimeout(() => {\n            this.bulletNum += 1;\n            this.bullets.push(new ShooterBullet({\n              // axisRotateR: 62 * 0.85,\n              axisRotateR: 52.7,\n              rotateAngle: mouseMoveAngle,\n            }));\n            playSound('membrane', 'D3');\n          }, 160 * i);\n        } else {\n          setTimeout(() => {\n            this.bulletNum += 1;\n            this.bullets.push(new ShooterBullet({\n              waveLength: getRandom(40, 80),\n              waveFreq: getRandom(2, 4) / 10,\n              waveAmp: getRandom(4, 8),\n              waveFlow: getRandom(4, 8),\n              // axisRotateR: 70 * 0.85,\n              axisRotateR: 59.5,\n              rotateAngle: mouseMoveAngle,\n            }));\n            playSound('mono', 'F2', '4n', 0, -10);\n          }, 160 * i);\n        }\n      }\n      beforeShootTime = shootTime;\n    }\n  }\n  getProp(propName) {\n    // 持續秒數\n    let lastTime;\n    switch (propName) {\n      case 'heart':\n        this.recoverHeart();\n        lastTime = 0;\n        gameCrawler.textContent = 'GAIN LIFE💕';\n        break;\n      case 'crackdown':\n        this.drawCrackdownEffect();\n        lastTime = 0;\n        gameCrawler.textContent = 'BOOM💥';\n        break;\n      case 'shield':\n        lastTime = 25000;\n        gameCrawler.textContent = 'EXTEND SHIELD💪';\n        break;\n      case 'double':\n        lastTime = 20000;\n        gameCrawler.textContent = 'DOUBLE SHOOT✌️';\n        break;\n      case 'wave':\n        lastTime = 15000;\n        gameCrawler.textContent = 'WAVE BULLET🌊';\n        break;\n      default:\n        lastTime = 0;\n    }\n    // 將道具設為 shooter 的狀態\n    this.state = propName;\n    // 時間到後，移除道具效果\n    const countLastTime = () => {\n      setTimeout(() => {\n        if (!game.isStart) return;\n        if (game.isPause) {\n          countLastTime();\n        } else {\n          lastTime -= 1000;\n          if (lastTime > 0) {\n            countLastTime();\n          } else {\n            this.state = '';\n            // 重新道具計時\n            game.generateProp();\n          }\n        }\n      }, 1000);\n    }\n    // 顯示道具效果持續時間\n    this.displayPropInfo(propName, lastTime);\n    if (propName !== 'crackdown') {\n      playSound('synth', 'E5');\n      playSound('synth', 'G5', '8n', 160);\n    }\n    countLastTime();\n  }\n  // 繪製清場效果\n  drawCrackdownEffect() {\n    let crackdownTime = 1;\n    const boss = game.boss;\n    const effect = () => {\n      if (!game.isPause) {\n        crackdownTime += 1;\n      }\n      ctx.save();\n      ctx.beginPath();\n      ctx.shadowColor = 'rgba(255, 255, 255, 0.72)';\n      ctx.shadowBlur = 2;\n      // 透明度從 1 到 0\n      ctx.strokeStyle = `rgba(255, 255, 255, ${(100 - crackdownTime) / 98})`;\n      ctx.fillStyle = `rgba(255, 255, 255, ${(100 - crackdownTime) / 490})`;\n      ctx.lineWidth = 5;\n      /**\n       * baseLog() 從 0 到 3\n       * 所以 (((crackdownTime - 2) / 98) * 26) + 1 為從 1 到 27\n       * 清場半徑因此為從 0 到 528\n       */\n      const effectR = 176 * baseLog(3, (((crackdownTime - 2) / 98) * 26) + 1);\n      ctx.arc(gameW / 2, gameH / 2, effectR, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n      // 清除敵人\n      game.circles.forEach((circle, idx) => {\n        if (effectR > circle.axisRotateR) {\n          enemyMethods.dieEffect(circle.r, originPos(circle.axisRotateR, circle.axisRotateAngle).x, originPos(circle.axisRotateR, circle.axisRotateAngle).y, '245, 175, 95');\n          game.circles.splice(idx, 1);\n        }\n      });\n      game.triangles.forEach((triangle, idx) => {\n        if (effectR > triangle.axisRotateR) {\n          enemyMethods.dieEffect(triangle.r, originPos(triangle.axisRotateR, triangle.axisRotateAngle).x, originPos(triangle.axisRotateR, triangle.axisRotateAngle).y, '54, 118, 187');\n          game.triangles.splice(idx, 1);\n        }\n      });\n      game.polygons.forEach((polygon, idx) => {\n        if (effectR > polygon.axisRotateR.whole) {\n          if (polygon.HP.whole) {\n            const polygonWholeR = (34 + 21) / 2;\n            enemyMethods.dieEffect(polygonWholeR, polygon.originPos('whole').x, polygon.originPos('whole').y, '231, 70, 93');\n          } else {\n            if (polygon.HP.big) {\n              const polygonBigR = (34 + 22) / 2;\n              enemyMethods.dieEffect(polygonBigR, polygon.originPos('big').x, polygon.originPos('big').y, '231, 70, 93');\n              game.polygons.splice(idx, 1);\n            }\n            if (polygon.HP.small) {\n              const polygonSmallR = (23 + 21) / 2;\n              enemyMethods.dieEffect(polygonSmallR, polygon.originPos('small').x, polygon.originPos('small').y, '231, 70, 93');\n              game.polygons.splice(idx, 1);\n            }\n          }\n          game.polygons.splice(idx, 1);\n        }\n      });\n      game.subTris.forEach((subTriangle, idx) => {\n        if (effectR > subTriangle.axisRotateR) {\n          game.subTris.splice(idx, 1);\n        }\n      });\n      // 清除 boss\n      if (game.boss) {\n        if (effectR > boss.axisRotateR && boss.HP === 0) {\n          enemyMethods.bossDieResult();\n        }\n      }\n      if (crackdownTime < 100) {\n        requestAnimationFrame(effect);\n      }\n    }\n    requestAnimationFrame(effect);\n    if (boss) {\n      boss.HP -= 1;\n    }\n    // playSound('duo', 'F4', '2n');\n    playSound('synth', 'C6', '2n');\n    // playSound('synth', 'G2', '8n', 0, 20);\n    // playSound('duo', 'F2', '2n', 0, 15);\n    // playSound('duo', 'E2', '2n', 0, 10);\n    // playSound('duo', 'D2', '8n', 1000, 10);\n  }\n  // 恢復一個愛心命\n  recoverHeart() {\n    const heart = document.createElement('DIV');\n    heart.classList.add('panel__game-heart');\n    heartWrapper.appendChild(heart);\n    this.hearts += 1;\n  }\n  displayPropInfo(propName, lastTime) {\n    if (propName === 'crackdown' || propName === 'heart') return;\n    prop.classList.remove('op0');\n    propImg.src = `./img/${propName}--panel.svg`;\n    lastTime /= 1000;  \n    propLastTime.textContent = lastTime;\n    const countLastTime = () => {\n      // const propInfoTimer = setTimeout(() => {\n      setTimeout(() => {\n        if (!game.isStart) return;\n        if (game.isPause) {\n          countLastTime();\n          return;\n        }\n        // 遊戲結束時，清除計時器\n        // if (!game.isStart) {\n        //   clearTimeout(propInfoTimer);\n        //   return;\n        // }\n        lastTime -= 1;\n        propLastTime.textContent = lastTime >= 10 ? lastTime : `0${lastTime}`;\n        if (lastTime) {\n          countLastTime();\n        } else {\n          prop.classList.add('op0');\n          // clearTimeout(propInfoTimer);\n        }\n      }, 1000);\n    }\n    countLastTime();\n  }\n}\n\n\n\nclass ShooterBullet {\n  constructor(args) {\n    const def = {\n      // bodyLen: 15 * 0.85,\n      bodyLen: 12.75,\n      axisRotateR: 0,\n      color: globalColor.white,\n      v: 10,\n      rotateAngle: 0,\n      waveLength: 40,\n      waveFreq: 0.2,\n      waveAmp: 4,\n      waveFlow: 4,\n    };\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n  draw() {\n    ctx.save();\n    ctx.translate(gameW / 2, gameH / 2);\n    ctx.rotate(this.rotateAngle);\n    // 如果 shooter 狀態非 wave\n    if (game.shooter.state !== 'wave') {\n      // 殘影\n      ctx.beginPath();\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.7)';\n      // ctx.arc(-7 * 0.85 + this.axisRotateR, 0, 3 * 0.85, 0, Math.PI * 2);\n      ctx.arc(-5.95 + this.axisRotateR, 0, 2.15, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.beginPath();\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.4)';\n      // ctx.arc(-12 * 0.85 + this.axisRotateR, 0, 2 * 0.85, 0, Math.PI * 2);\n      ctx.arc(-10.2 + this.axisRotateR, 0, 1.7, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.beginPath();\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n      // ctx.arc(-15 * 0.85 + this.axisRotateR, 0, 1 * 0.85, 0, Math.PI * 2);\n      ctx.arc(-12.75 + this.axisRotateR, 0, 0.85, 0, Math.PI * 2);\n      ctx.fill();\n      // 園底\n      ctx.beginPath();\n      ctx.fillStyle = this.color;\n      // ctx.arc(0 + this.axisRotateR, 0, 4 * 0.85, 0, Math.PI * 2);\n      ctx.arc(0 + this.axisRotateR, 0, 3.4, 0, Math.PI * 2);\n      ctx.fill();\n      // 尖頭\n      ctx.beginPath();\n      // ctx.moveTo(3 * 0.85 + this.axisRotateR, 3 * 0.85);\n      ctx.moveTo(2.55 + this.axisRotateR, 2.55);\n      ctx.lineTo(this.bodyLen + this.axisRotateR, 0);\n      // ctx.lineTo(3 * 0.85 + this.axisRotateR, -3 * 0.85);\n      ctx.lineTo(2.55 + this.axisRotateR, -2.55);\n      ctx.closePath();\n      ctx.fill();\n    } else {\n      drawWaveBullet(this, 'axisRotateR', 1.6, 'rgba(255, 255, 255, 0.72)');\n    }\n    ctx.restore();\n  }\n  update(bulletIdx) {\n    // 移動子彈\n    this.axisRotateR += this.v;\n    let anglePanFn;\n    let shotRRangeFn;\n    // 判斷子彈為哪一類型\n    // 一般類型\n    if (game.shooter.state !== 'wave') {\n      const bulletMoveLen = this.axisRotateR + this.bodyLen;\n      // 判斷子彈有無射中圓形\n      game.circles.forEach((circle, cirIdx) => {\n        anglePanFn = () => {\n          return Math.asin(circle.r / circle.axisRotateR);\n        }\n        shotRRangeFn = () => {\n          return (bulletMoveLen >= (circle.axisRotateR - (circle.r / 2))) && (bulletMoveLen <= (circle.axisRotateR + (circle.r / 2)));\n        }\n        this.attackEnemy(circle, cirIdx, game.circles, bulletIdx, anglePanFn, shotRRangeFn, '245, 175, 95');\n      });\n      // 判斷子彈有無射中三角形\n      game.triangles.forEach((triangle, triIdx) => {\n        anglePanFn = () => {\n          const lengthX = triangle.axisRotateR + (triangle.r / 2);\n          const lengthY = (triangle.r / 2) * Math.sqrt(3);\n          return Math.atan2(lengthY, lengthX);\n        }\n        shotRRangeFn = () => {\n          return (bulletMoveLen >= triangle.axisRotateR) && (bulletMoveLen <= (triangle.axisRotateR + (triangle.r / 2)));\n        }\n        this.attackEnemy(triangle, triIdx, game.triangles, bulletIdx, anglePanFn, shotRRangeFn, '54, 118, 187');\n      });\n      // 判斷子彈有無射中多邊形\n      game.polygons.forEach((polygon, polyIdx) => {\n        // 當多邊形未分裂\n        if (polygon.HP.whole) {\n          shotRRangeFn = () => {\n            const sideA = polygon.axisRotateR.whole;\n            return (bulletMoveLen >= sideA) && (bulletMoveLen <= (sideA + 9));\n          }\n          this.attackPolygon(polygon, polyIdx, 'whole', 34, 21, (360 - (202 + 75)), (8 + 75), 75, bulletIdx, shotRRangeFn);\n        } else {\n          // 當多邊形分裂\n          // 大分裂\n          if (polygon.HP.big) {\n            shotRRangeFn = () => {\n              const sideA = polygon.axisRotateR.big;\n              return (bulletMoveLen >= sideA + 8) && (bulletMoveLen <= (sideA + 16));\n            }\n            this.attackPolygon(polygon, polyIdx, 'big', 34, 23, ((202 + 44) - 180), (180 - (70 + 44)), 44, bulletIdx, shotRRangeFn);\n          }\n          // 小分裂\n          if (polygon.HP.small) {\n            shotRRangeFn = () => {\n              const sideA = polygon.axisRotateR.small;\n              return (bulletMoveLen >= sideA + 8) && (bulletMoveLen <= (sideA + 16));\n            }\n            this.attackPolygon(polygon, polyIdx, 'small', 22, 23, ((255 + 17.5) - 180), (180 - (70 + 17.5)), 17.5, bulletIdx, shotRRangeFn);\n          }\n        }\n      });\n      // 判斷子彈有無射中 boss\n      const boss = game.boss;\n      if (boss) {\n        anglePanFn = () => {\n          return Math.asin(18 / (boss.axisRotateR + 6));\n        }\n        shotRRangeFn = () => {\n          return (bulletMoveLen >= (boss.axisRotateR + 9 + 8)) && (bulletMoveLen <= (boss.axisRotateR + 28));\n        }\n        this.attackEnemy(boss, NaN, null, bulletIdx, anglePanFn, shotRRangeFn, '255, 255, 255', 'ordinary', true);\n      }\n    } else {\n      // 波狀類型\n      // 有無射中圓形\n      game.circles.forEach((circle, cirIdx) => {\n        anglePanFn = () => {\n          return Math.asin(circle.r / circle.axisRotateR);\n        }\n        shotRRangeFn = () => {\n          return (this.axisRotateR >= (circle.axisRotateR - (circle.r / 2))) && (this.axisRotateR <= (circle.axisRotateR + (circle.r / 2)));\n        }\n        this.attackEnemy(circle, cirIdx, game.circles, bulletIdx, anglePanFn, shotRRangeFn, '245, 175, 95', 'wave');\n      });\n      // 有無射中三角形\n      game.triangles.forEach((triangle, triIdx) => {\n        anglePanFn = () => {\n          const lengthX = triangle.axisRotateR + (triangle.r / 2);\n          const lengthY = (triangle.r / 2) * Math.sqrt(3);\n          return Math.atan2(lengthY, lengthX);\n        }\n        shotRRangeFn = () => {\n          return (this.axisRotateR >= triangle.axisRotateR) && (this.axisRotateR <= (triangle.axisRotateR + (triangle.r / 2)));\n        }\n        this.attackEnemy(triangle, triIdx, game.triangles, bulletIdx, anglePanFn, shotRRangeFn, '54, 118, 187', 'wave');\n      });\n      // 有無射中多邊形\n      game.polygons.forEach((polygon, polyIdx) => {\n        // 當多邊形尚未分裂\n        if (polygon.HP.whole) {\n          shotRRangeFn = () => {\n            const sideA = polygon.axisRotateR.whole;\n            return (this.axisRotateR >= sideA) && (this.axisRotateR <= (sideA + 9));\n          }\n          this.attackPolygon(polygon, polyIdx, 'whole', 34, 21, (360 - (202 + 75)), (8 + 75), 75, bulletIdx, shotRRangeFn, 'wave');\n        } else {\n          // 當多邊形已經分裂\n          // 大分裂\n          if (polygon.HP.big) {\n            shotRRangeFn = () => {\n              const sideA = polygon.axisRotateR.big;\n              return (this.axisRotateR >= sideA + 8) && (this.axisRotateR <= (sideA + 16));\n            }\n            this.attackPolygon(polygon, polyIdx, 'big', 34, 23, ((202 + 44) - 180), (180 - (70 + 44)), 44, bulletIdx, shotRRangeFn, 'wave');\n          }\n          // 小分裂\n          if (polygon.HP.small) {\n            shotRRangeFn = () => {\n              const sideA = polygon.axisRotateR.small;\n              return (this.axisRotateR >= sideA + 8) && (this.axisRotateR <= (sideA + 16));\n            }\n            this.attackPolygon(polygon, polyIdx, 'small', 22, 23, ((255 + 17.5) - 180), (180 - (70 + 17.5)), 17.5, bulletIdx, shotRRangeFn, 'wave');\n          }\n          // 如果大小分裂都已被擊斃，移除此多邊形\n          if (polygon.HP.big === 0 && polygon.HP.small === 0) {\n            game.polygons.splice(polyIdx, 1);\n            // 電池加一\n            game.batteryNum += 1;\n            batteryNum.textContent = game.batteryNum;\n          }\n        }\n      });\n      // 判斷子彈有無射中 boss\n      const boss = game.boss;\n      if (boss) {\n        anglePanFn = () => {\n          return Math.asin(18 / (boss.axisRotateR + 6));\n        }\n        shotRRangeFn = () => {\n          return (this.axisRotateR >= (boss.axisRotateR + 9 + 8)) && (this.axisRotateR <= (boss.axisRotateR + 28));\n        }\n        this.attackEnemy(boss, NaN, null, bulletIdx, anglePanFn, shotRRangeFn, '255, 255, 255', 'wave', true);\n      }\n    }\n    // 當子彈超出邊界\n    this.beyondBoundary(bulletIdx);\n  }\n  // 攻擊敵人（圓形、三角形）\n  // FIXME 當敵人太靠近會打不到\n  attackEnemy(enemy, enemyIdx, enemies, bulletIdx, anglePanFn, shotRRangeFn, colorRGB, type = 'ordinary', isBoss = false) {\n    /**\n     * 射中角度範圍\n     * 圓形：取得兩個外切線所構成角度的一半\n     * 三角形：取得射中角度範圍的一半\n     */\n    const enemyAnglePan = anglePanFn();\n    const enemyAngleMinus = (enemy.axisRotateAngle % 360) * degToPi - enemyAnglePan;\n    const enemyAngleAdd = (enemy.axisRotateAngle % 360) * degToPi + enemyAnglePan;\n    const shotAngleRange = this.judgeShotAngleRange(enemyAngleMinus, enemyAngleAdd, type);\n    // 射中距離範圍\n    const shotRRange = shotRRangeFn();\n\n    if (!gameCrawler.textContent) {\n      gameCrawler.textContent = Math.random() >= 0.5 ? 'FIRE🔥' : 'BANG👊';\n    }\n    // 判斷子彈有無射中敵人\n    if (shotAngleRange && shotRRange) {\n      // 移除子彈\n      game.shooter.bullets.splice(bulletIdx, 1);\n      // 扣敵人 1 生命值\n      enemy.HP -= 1;\n      if (type === 'ordinary') {\n        playSound('membrane', 'D2');\n      } else {\n        playSound('mono', 'C2', '8n', 0, -10);\n      }\n      // 若敵人生命值為 0\n      if (enemy.HP === 0) {\n        if (isBoss) {\n          // 移除 boss\n          enemyMethods.bossDieResult();\n          return;\n        } else {\n          // 移除敵人\n          enemies.splice(enemyIdx, 1);\n          // 移除效果\n          enemyMethods.dieEffect(enemy.r, originPos(enemy.axisRotateR, enemy.axisRotateAngle).x, originPos(enemy.axisRotateR, enemy.axisRotateAngle).y, colorRGB);\n          // 電池加一\n          game.batteryNum += 1;\n          batteryNum.textContent = game.batteryNum;\n        }\n      }\n      gameCrawler.textContent = Math.random() >= 0.8 ? \"BULL'S-EYE😤\" : 'HIT👍';\n    }\n  }\n  // 攻擊多邊形\n  attackPolygon(polygon, polyIdx, form, sideB1Len, sideB2Len, angleAB1, angleAB2, rotateAngleJudge, bulletIdx, shotRRangeFn, type = 'ordinary') {\n    const polyAxisRotateAngle = polygon.axisRotateAngle[form];\n    const polyRotate = polygon.rotate[form];\n    // 取得兩側射中最大角度\n    const sideA = polygon.axisRotateR[form];\n    const sideB1 = sideB1Len;\n    const sideB2 = sideB2Len;\n    /**\n     * 兩側點愈靠近軸心，夾角便愈大\n     *   whole: 8°, 202°\n     *   big: 70°, 202°\n     *   small: 70°, 255°\n\n     * 相同軸半徑下，當多邊形呈某一角度，兩側點離軸心（幾乎）最近，angleB 相同\n     *   whole: axisRotateAngle 180°, rotate 75°\n     *     270 - 202 = 68\n     *     90 - 8 = 82\n     *     (68 + 82) / 2 = 75\n     * \n     *   big: axisRotateAngle 0°, rotate 44°\n     *     270 - 202 = 68\n     *     90 - 70 = 20\n     *     (68 + 20) / 2 = 44\n     * \n     *   small: axisRotateAngle 0°, rotate 17.5°\n     *     270 - 255 = 15\n     *     90 - 70 = 20\n     *     (15 + 20) / 2 = 17.5\n     */\n    const sideC1 = cosineFormula(sideA, sideB1, angleAB1);\n    const sideC2 = cosineFormula(sideA, sideB2, angleAB2);\n    // 當多邊形的 axisRotateAngle、rotate 不同，要加上與減去的角度也不一樣\n    const bottomJudge = (polyAxisRotateAngle <= 180) && ((polyRotate % 360) < rotateAngleJudge || (polyRotate % 360) >= (rotateAngleJudge + 180));\n    const topJudge = (polyAxisRotateAngle > 180) && ((polyRotate % 360) >= rotateAngleJudge || (polyRotate % 360) < (rotateAngleJudge + 180));\n    let angleB1;\n    let angleB2;\n\n    if (!gameCrawler.textContent) {\n      gameCrawler.textContent = Math.random() >= 0.5 ? 'FIRE🔥' : 'BANG👊';\n    }\n    if (bottomJudge || topJudge) {\n      angleB1 = getAngleB(sideA, sideB2, sideC2);\n      angleB2 = getAngleB(sideA, sideB1, sideC1);\n    } else {\n      angleB1 = getAngleB(sideA, sideB1, sideC1);\n      angleB2 = getAngleB(sideA, sideB2, sideC2);\n    }\n    /**\n     * 射中角度範圍\n     * 多邊形雖不會繞軸旋轉，axisRotateAngle 固定，但分裂時可能會超過 360°，故 % 360\n     */\n    const polyAngleMinus = (polyAxisRotateAngle % 360) * degToPi - angleB1;\n    const polyAngleAdd = (polyAxisRotateAngle % 360) * degToPi + angleB2;\n    const shotAngleRange = this.judgeShotAngleRange(polyAngleMinus, polyAngleAdd, type);\n    // 射中距離範圍\n    const shotRRange = shotRRangeFn();\n    // 判斷子彈有無射中多邊形\n    if (shotAngleRange && shotRRange) {\n      // 移除子彈\n      game.shooter.bullets.splice(bulletIdx, 1);\n      // 扣 1 生命值\n      polygon.HP[form] -= 1;\n      if (form === 'whole') {\n        playSound('synth', 'D6', '16n');\n      }\n      // 若大或小分裂生命值為 0\n      if (polygon.HP.big === 0 || polygon.HP.small === 0) {\n        // 移除效果\n        const polygonR = form === 'big' ? (34 + 22) / 2 : (23 + 21) / 2;\n        enemyMethods.dieEffect(polygonR, polygon.originPos(form).x, polygon.originPos(form).y, '231, 70, 93');\n      }\n      // 如果大小分裂都被擊斃了，那就移除此多邊形\n      if (polygon.HP.big === 0 && polygon.HP.small === 0) {\n        game.polygons.splice(polyIdx, 1);\n        // 電池加一\n        game.batteryNum += 1;\n        batteryNum.textContent = game.batteryNum;\n      }\n      gameCrawler.textContent = Math.random() >= 0.8 ? \"BULL'S-EYE😤!\" : 'HIT👍';\n      if (type === 'ordinary') {\n        playSound('membrane', 'D2');\n      } else {\n        playSound('mono', 'C2', '8n', 0, -10);\n      }\n    }\n  }\n  // 判斷射中角度範圍\n  judgeShotAngleRange(enemyAngleMinus, enemyAngleAdd, type) {\n    let shooterRotateAngle;\n    // 當敵人 axisRotateAngle 在 360° 附近，且 shooter 槍口朝下（0° 下方）\n    if (enemyAngleAdd > Math.PI * 2 && this.rotateAngle < Math.PI) {\n      shooterRotateAngle = this.rotateAngle + Math.PI * 2;\n    } else if (\n      // 當敵人 axisRotateAngle 皆小於 0\n      (enemyAngleMinus < 0 && enemyAngleAdd < 0) || \n      // 當敵人 axisRotateAngle 在 0° 附近，且 shooter 槍口朝上（0° 上方）\n      (enemyAngleMinus < 0 && enemyAngleAdd > 0 && this.rotateAngle > Math.PI)) {\n      shooterRotateAngle = this.rotateAngle - Math.PI * 2;\n    } else {\n      shooterRotateAngle = this.rotateAngle;\n    }\n    // 判斷子彈為哪一類型\n    // 一般子彈\n    if (type !== 'wave') {\n      return shooterRotateAngle >= enemyAngleMinus && shooterRotateAngle <= enemyAngleAdd;\n    } else {\n      // 波狀子彈\n      const shooterAnglePan = Math.atan2(this.waveLength, this.axisRotateR);\n      const shooterAngleMinus = shooterRotateAngle - shooterAnglePan;\n      const shooterAngleAdd = shooterRotateAngle + shooterAnglePan;\n      return (enemyAngleMinus <= shooterAngleAdd) && (enemyAngleAdd >= shooterAngleMinus);\n    }\n  }\n  // 當子彈超出邊界\n  beyondBoundary(bulletIdx) {\n    /**\n     * 856 / 2 = 428\n     * 624 / 2 = 312\n     * Math.sqrt(428 * 428 + 312 * 312) = 529.6\n     */\n    if (this.axisRotateR >= 530) {\n      game.shooter.bullets.splice(bulletIdx, 1);\n    }\n  }\n}","class Triangle {\n  constructor(args) {\n    const def = {\n      axisRotateR: 0,\n      axisRotateAngle: 0,\n      r: 26,\n      rotate: 0,\n      scale: 0,\n      axisRotateRV: 0,\n      axisRotateAngleV: 0,\n      color: globalColor.blue,\n      bullets: [],\n      beforeRotateAxisAngleTime: new Date(),\n      beforeShootTime: new Date(),\n      HP: 4,\n      isGeneratedSub: false,\n      shootTimer: null,\n      beginAppear: true,\n      isBossGenerate: false,\n    }\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n\n\n  \n  draw() {\n    const triOuterBigR = this.r + 4;\n    const triInnerBigR = this.r - 16;\n    const triInnerSmallR = this.r - 22;\n    ctx.save();\n    // 淡三角\n    ctx.translate(originPos(this.axisRotateR, this.axisRotateAngle).x, originPos(this.axisRotateR, this.axisRotateAngle).y);\n    ctx.scale(this.scale, this.scale);\n    ctx.rotate(this.rotate * degToPi);\n    ctx.save();\n    ctx.translate(4, 0);\n    ctx.beginPath();\n    ctx.moveTo(triOuterBigR * Math.cos(60 * degToPi), triOuterBigR * Math.sin(60 * degToPi));\n    ctx.$triLineTo(triOuterBigR, 180);\n    ctx.$triLineTo(triOuterBigR, 300);\n    ctx.closePath();\n    ctx.fillStyle = 'rgba(54, 118, 187, 0.34)';\n    ctx.fill();\n    ctx.restore();\n    // 主體三角\n    ctx.beginPath();\n    ctx.moveTo(this.r * Math.cos(60 * degToPi), this.r * Math.sin(60 * degToPi));\n    ctx.$triLineTo(this.r, 180);\n    ctx.$triLineTo(this.r, 300);\n    ctx.closePath();\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    // 大白三角\n    ctx.translate(0, -2.8);\n    ctx.fillStyle = globalColor.white;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.$triLineTo(triInnerBigR, 90);\n    ctx.$triLineTo(triInnerBigR, 150);\n    ctx.closePath();\n    ctx.fill();\n    // 小白三角\n    ctx.translate(8 * Math.cos(-40 * degToPi), 8 * Math.sin(-40 * degToPi))\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.$triLineTo(triInnerSmallR, 90);\n    ctx.$triLineTo(triInnerSmallR, 150);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n    // 繪製三角子彈\n    this.bullets.forEach((bullet) => {\n      bullet.draw();\n    });\n  }\n\n\n\n  update(idx) {\n    this.beginAppear && this.appear(this.isBossGenerate);\n    this.beginAppear = false;\n    game.isStart && enemyMethods.approach(this);\n    // 更新三角子彈\n    this.bullets.forEach((bullet, idx, arr) => {\n      bullet.update(idx, arr);\n    });\n    // 每 4-8 秒，三角移動 + 自身旋轉\n    const rotateAxisAngleTime = new Date();\n    let randomRotateAngle;\n    if (rotateAxisAngleTime - this.beforeRotateAxisAngleTime > getRandom(4000, 8000)) {\n      // 旋轉時不發射子彈\n      if (this.shootTimer) {\n        clearTimeout(this.shootTimer);\n      }\n      randomRotateAngle = (Math.random() >= 0.25 ? 1 : -1) * getRandom(45, 75);\n      // 以 0.8 秒移動\n      TweenLite.to(this, 0.8, {\n        axisRotateAngle: `+=${randomRotateAngle}`,\n        ease: Power0.easeNone,\n      });\n      // 以 1.2 秒自身旋轉\n      TweenLite.to(this, 1.2, {\n        rotate: `+=${randomRotateAngle + 360}`,\n        ease: Power2.easeInOut,\n        onComplete: () => {\n          // 移動完後發射子彈\n          // 當遊戲尚未開始、暫停，或此三角形已死掉，便不發射子彈\n          if (!game.isStart || game.isPause || this.HP === 0) return;\n          this.shoot();\n          // 發射一顆子彈後，每 2.4-7.2 秒發射第二發子彈\n          this.shootTimer = setTimeout(() => {\n            if (!game.isStart || this.HP === 0) return;\n            this.shoot();\n          }, getRandom(2400, 7200));\n        }\n      });\n      this.beforeRotateAxisAngleTime = rotateAxisAngleTime;\n    }\n    // 當生命值剩 2，派副三角形攻擊\n    if (this.HP === 2 && !this.isGeneratedSub) {\n      for (let i = 1; i <= 2; i += 1) {\n        game.subTris.push(new TriSub({\n          axisRotateR: this.axisRotateR,\n          axisRotateAngle: this.axisRotateAngle,\n          rotate: this.rotate,\n          order: i,\n        }));\n      }\n      gameCrawler.textContent = 'COUNTERATTACK🤛';\n      this.isGeneratedSub = true;\n      playSound('synth', 'C6', '16n');\n    }\n    // 當三角形撞上 shooter\n    enemyMethods.hitShooter(game.triangles, idx, 'triangle', this.axisRotateR, this.axisRotateAngle);\n  }\n\n\n\n  shoot() {\n    this.bullets.push(new TriBullet({\n      p: {\n        x: originPos(this.axisRotateR, this.axisRotateAngle).x,\n        y: originPos(this.axisRotateR, this.axisRotateAngle).y,\n      },\n      axisRotateR: this.axisRotateR,\n      rotateAngle: this.rotate,\n    }));\n    gameCrawler.textContent = Math.random() >= 0.8 ? 'UNDER ATTACK🤕' : 'ATTACK⚡️';\n    playSound('membrane', 'G5');\n  }\n\n\n\n  appear(isBossGenerate) {\n    gameCrawler.textContent = '⚠ ENEMY IS COMING';\n    TweenLite.to(this, 0.8, {\n      scale: 1,\n      ease: Back.easeOut.config(1.7),\n    });\n    let rotateNum = 0;\n    if (isBossGenerate) {\n      rotateNum = getRandom(40, 80);\n      const rNum = getRandom(40, 80);\n      TweenLite.to(this, 1.6, {\n        axisRotateAngle: `+=${rotateNum}`,\n        axisRotateR: `+=${rNum}`,\n        ease: Power2.easeOut,\n      });\n    }\n    TweenLite.to(this, 1.6, {\n      rotate: `+=${rotateNum + 360}`,\n      ease: Back.easeOut.config(1.7),\n    });\n    game.isStart && playSound('synth', 'B4', '4n');\n  }\n}\n\n\n\nclass TriSub {\n  constructor(args) {\n    const def = {\n      axisRotateR: 0,\n      axisRotateAngle: 0,\n      // r: 26 * 0.4,\n      r: 10.4,\n      rotate: 0,\n      rotateV: 4,\n      color: globalColor.blue,\n      HP: 2,\n      isReproduceMoving: false,\n      order: 0,\n    }\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n  draw() {\n    const triOuterBigR = this.r + 1.6;\n    const triInnerBigR = this.r - 6.4;\n    const triInnerSmallR = this.r - 8.8;\n    ctx.save();\n    // 淡三角\n    ctx.translate(originPos(this.axisRotateR, this.axisRotateAngle).x, originPos(this.axisRotateR, this.axisRotateAngle).y);\n    // ctx.scale(0.4, 0.4);\n    ctx.rotate(this.rotate * degToPi);\n    ctx.save();\n    ctx.translate(0.8, -Math.sqrt(1.92));\n    ctx.beginPath();\n    ctx.moveTo(triOuterBigR * Math.cos(0), triOuterBigR * Math.sin(0));\n    ctx.lineTo(triOuterBigR * Math.cos(120 * degToPi), triOuterBigR * Math.sin(120 * degToPi));\n    ctx.lineTo(triOuterBigR * Math.cos(240 * degToPi), triOuterBigR * Math.sin(240 * degToPi));\n    ctx.closePath();\n    ctx.fillStyle = 'rgba(54, 118, 187, 0.34)';\n    ctx.fill();\n    ctx.restore();\n    // 主體三角\n    ctx.beginPath();\n    ctx.moveTo(this.r * Math.cos(0), this.r * Math.sin(0));\n    ctx.lineTo(this.r * Math.cos(120 * degToPi), this.r * Math.sin(120 * degToPi));\n    ctx.lineTo(this.r * Math.cos(240 * degToPi), this.r * Math.sin(240 * degToPi));\n    ctx.closePath();\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    // 大白三角\n    ctx.translate(-1.28, -0.64);\n    ctx.fillStyle = globalColor.white;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(triInnerBigR * Math.cos(30 * degToPi), triInnerBigR * Math.sin(30 * degToPi));\n    ctx.lineTo(triInnerBigR * Math.cos(90 * degToPi), triInnerBigR * Math.sin(90 * degToPi));\n    ctx.closePath();\n    ctx.fill();\n    // 小白三角\n    ctx.translate(0, -3.52);\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(triInnerSmallR * Math.cos(30 * degToPi), triInnerSmallR * Math.sin(30 * degToPi));\n    ctx.lineTo(triInnerSmallR * Math.cos(90 * degToPi), triInnerSmallR * Math.sin(90 * degToPi));\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n  }\n  update(idx) {\n    this.rotate += this.rotateV;\n    if (!this.isReproduceMoving) {\n      TweenLite.to(this, 0.8, {\n        axisRotateAngle: `${this.order === 1 ? '+=' : '-='}10`,\n        ease: Power2.easeOut,\n        onComplete: () => {\n          TweenLite.to(this, 1.6, {\n            axisRotateR: 0,\n            ease: Power1.easeIn,\n          });\n        }\n      });\n      this.isReproduceMoving = true;\n    }\n    // 當小三角形撞上 shooter\n    enemyMethods.hitShooter(game.subTris, idx, 'triangle', this.axisRotateR, this.axisRotateAngle);\n  }\n}\n\n\n\nclass TriBullet {\n  constructor(args) {\n    const def = {\n      p: {\n        x: 0,\n        y: 0,\n      },\n      moveX: 0,\n      moveXV: -4.5,\n      rotateAngle: 0,\n      color: globalColor.blue,\n    }\n    Object.assign(def, args);\n    Object.assign(this, def);\n  }\n  draw() {\n    ctx.save();\n    ctx.translate(this.p.x, this.p.y);\n    ctx.rotate(this.rotateAngle * degToPi);\n    ctx.translate(this.moveX, 0);\n    // 主體三角子彈\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.moveTo(-16, 0);\n    ctx.$triLineTo(38, 174);\n    ctx.$triLineTo(16.8, 200);\n    ctx.closePath();\n    ctx.fill();\n    // 淡三角子彈\n    ctx.fillStyle = 'rgba(54, 118, 187, 0.34)';\n    ctx.beginPath();\n    ctx.moveTo(-16.4, 0);\n    ctx.$triLineTo(38, 174);\n    ctx.$triLineTo(15.6, 168);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n  }\n  update(idx, arr) {\n    // 三角子彈移動\n    this.moveX += this.moveXV;\n    // 子彈擊中 shooter\n    enemyMethods.attackShooter(this, idx, arr, 37.8);\n    // 當子彈超出邊界\n    this.beyondBoundary(idx, arr);\n  }\n  // 當子彈超出邊界\n  beyondBoundary(idx, arr) {\n    // Math.sqrt(856 * 856 + 624 * 624) = 1059.3\n    if (this.moveX <= -1060) {\n      arr.splice(idx, 1);\n    }\n  }\n}","ctx.$triLineTo = function (r, angle, angleAdd = 0) {\n  return ctx.lineTo(r * Math.cos(angle * degToPi + angleAdd), r * Math.sin(angle * degToPi + angleAdd));\n}\n\n// 繪製波狀子彈\nfunction drawWaveBullet(bullet, originPos, lineWidth, shadowColor) {\n  ctx.strokeStyle = bullet.color;\n  ctx.lineWidth = lineWidth;\n  ctx.shadowColor = shadowColor;\n  ctx.shadowBlur = 2;\n  // 正半波\n  ctx.beginPath();\n  for (let i = 0; i < bullet.waveLength; i += 1) {\n    const degree = (i * bullet.waveFreq) + (updateTime / bullet.waveFlow);\n    ctx.lineTo(bullet[originPos] + (bullet.waveAmp * Math.sin(degree)), i);\n  }\n  ctx.stroke();\n  // 負半波\n  ctx.beginPath();\n  for (let i = 0; i < bullet.waveLength; i += 1) {\n    const degree = (i * bullet.waveFreq) + (updateTime / bullet.waveFlow);\n    ctx.lineTo(bullet[originPos] + (bullet.waveAmp * Math.sin(degree)), -i);\n  }\n  ctx.stroke();\n}\n\n// 繪製電池\n// function drawBattery(p) {\n//   ctx.save();\n//     ctx.translate(p.x, p.y);\n//     ctx.fillStyle = globalColor.orange;\n//     // 瓶身\n//     ctx.beginPath();\n//     ctx.moveTo(0, 0);\n//     ctx.lineTo(-24, 0);\n//     ctx.lineTo(-24, 42);\n//     ctx.lineTo(0, 42);\n//     ctx.closePath();\n//     ctx.fill();\n//     // 瓶底\n//     ctx.save();\n//       ctx.translate(0, 44);\n//       ctx.beginPath();\n//       ctx.moveTo(0, 0);\n//       ctx.lineTo(-24, 0);\n//       ctx.lineTo(-24, 3);\n//       ctx.lineTo(0, 3);\n//       ctx.closePath();\n//       ctx.fill();\n//     ctx.restore();\n//     // 瓶蓋\n//     ctx.fillStyle = globalColor.white;\n//     ctx.save();\n//       ctx.translate(-6.75, 0);\n//       ctx.beginPath();\n//       ctx.moveTo(0, 0);\n//       ctx.lineTo(0, -3);\n//       ctx.lineTo(-10.5, -3);\n//       ctx.lineTo(-10.5, -0);\n//       ctx.closePath();\n//       ctx.fill();\n//     ctx.restore();\n//     // 閃電\n//     drawLightning({ x: -11, y: 9 });\n//   ctx.restore();\n// }\n\n\n\n// 繪製閃電\nfunction drawLightning(translate = { x: 0, y: 0 }, scale = 1) {\n  ctx.fillStyle = globalColor.white;\n  ctx.translate(translate.x, translate.y);\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.rotate(18 * degToPi);\n  ctx.lineTo(0, 10 * scale);\n  ctx.translate(0, 10 * scale);\n  ctx.rotate(-18 * degToPi);\n\n  ctx.lineTo(10 * scale, 0);\n  ctx.translate(10 * scale, 0);\n\n  ctx.rotate(28 * degToPi);\n  ctx.lineTo(0, 16 * scale);\n  ctx.translate(0, 16 * scale);\n  ctx.rotate(-28 * degToPi);\n\n  ctx.rotate(3.6 * degToPi);\n  ctx.lineTo(0, -10 * scale);\n  ctx.translate(0, -10 * scale);\n  ctx.rotate(-3.6 * degToPi);\n\n  ctx.lineTo(-8 * scale, 0);\n  ctx.closePath();\n  ctx.fill();\n}\n\n\n\nfunction originPos(axisRotateR, axisRotateAngle) {\n  return {\n    x: (gameW / 2) + axisRotateR * Math.cos(axisRotateAngle * degToPi),\n    y: (gameH / 2) + axisRotateR * Math.sin(axisRotateAngle * degToPi),\n  };\n}\n\n\n\n// 以 x 為底的 y 的對數：logxy\nfunction baseLog(x, y) {\n  return Math.log(y) / Math.log(x);\n}\n\n\n\n// 餘弦定理\nfunction cosineFormula(a, b, angle) {\n  return Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(angle * degToPi));\n}\n\nfunction getAngleB(a, b, c) {\n  return Math.acos((a * a + c * c - b * b) / (2 * a * c));\n}\n\n\n\n// 取得某區間的隨機亂數\nfunction getRandom(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n\n\nfunction playSound(instrument, note, duration = '8n', timeout = 0, volume = 0) {\n  if (game.isMuted) return;\n  let synth;\n  switch (instrument) {\n    case 'membrane':\n      setTimeout(() => {\n        synth = new Tone.MembraneSynth().toMaster();\n        synth.triggerAttackRelease(note, duration);\n        synth.volume.value = volume;\n      }, timeout);\n      break;\n    case 'duo':\n      setTimeout(() => {\n        synth = new Tone.DuoSynth().toMaster();\n        synth.triggerAttackRelease(note, duration);\n        synth.volume.value = volume;\n      }, timeout);\n      break;\n    case 'mono':\n      setTimeout(() => {\n        synth = new Tone.MonoSynth().toMaster();\n        synth.triggerAttackRelease(note, duration);\n        synth.volume.value = volume;\n      }, timeout);\n      break;\n    default:\n      setTimeout(() => {\n        synth = new Tone.Synth().toMaster();\n        synth.triggerAttackRelease(note, duration);\n        synth.volume.value = volume;\n      }, timeout);\n      break;\n  }\n}\n\nfunction isMob() {\n  if (navigator.userAgent.match(/Android/i) ||\n    navigator.userAgent.match(/webOS/i) ||\n    navigator.userAgent.match(/iPhone/i) ||\n    navigator.userAgent.match(/iPad/i) ||\n    navigator.userAgent.match(/iPod/i) ||\n    navigator.userAgent.match(/BlackBerry/i) ||\n    navigator.userAgent.match(/Windows Phone/i)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/* 2D Vector Class */\n// class Vec2 {\n//   constructor(x, y) {\n//     this.x = x;\n//     this.y = y;\n//   }\n//   set(x, y) {\n//     this.x = x;\n//     this.y = y;\n//   }\n//   move(x, y) {\n//     this.x += x;\n//     this.y += y;\n//   }\n//   add(v) {\n//     return new Vec2(this.x + v.x, this.y + v.y);\n//   }\n//   sub(v) {\n//     return new Vec2(this.x - v.x, this.y - v.y);\n//   }\n//   mul(s) {\n//     return new Vec2(this.x * s, this.y * s);\n//   }\n//   clone() {\n//     return new Vec2(this.x, this.y);\n//   }\n//   equal(v) {\n//     return this.x === v.x && this.y === v.y;\n//   }\n//   get length() {\n//     return Math.sqrt(this.x * this.x + this.y * this.y);\n//   }\n//   set length(newVal) {\n//     const newLength = this.unit.mul(newVal);\n//     this.set(newLength.x, newLength.y);\n//   }\n//   get angle() {\n//     return Math.atan2(this.y, this.x);\n//   }\n//   get unit() {\n//     return this.mul(1 / this.length);\n//   }\n// }"]}