{"version":3,"sources":["boss.js","circle.js","enemy.js","index.js","polygon.js","prop.js","shooter.js","triangle.js","utility.js"],"names":["Boss","args","_classCallCheck","this","def","axisRotateR","axisRotateAngle","rotate","scale","rotateV","bullets","HP","beforeGenerateEnemyTime","Date","beginAppear","isAppearing","axisRotateAngleV","originPos","x","y","isDisappeared","degToPi","appearTimer","disappearTimer","ctx","moveTo","Object","lineTo","closePath","save","fillStyle","beginPath","fill","globalColor","white","red","blue","Math","PI","orange","strokeStyle","lineWidth","arc","stroke","forEach","bullet","appear","idx","arr","appearTimes","gameCrawler","textContent","TweenLite","to","ease","rotateNum","getRandom","concat","update","_this","setTimeout","game","isPause","shoot","isEnd","easeOut","Expo","onComplete","_this2","playSound","_this3","BossBullet","p","disappear","push","_this4","chooseEnemy","circles","Circle","isBossGenerate","triangles","Triangle","rotateAngle","polygons","Polygon","whole","big","small","num","color","moveX","moveXV","isBoss","drawWaveBullet","enemyMethods","attackShooter","r","beforeRotateTime","assign","axisRotateRV","isRotating","circleBigR","circleSmallR","subAxisRotateR","cos","sin","$triLineTo","isStart","approach","rotateTime","_loop","timer","CirBullet","clearTimeout","i","Power2","random","Back","config","translate","restore","enemy","_typeof","shooter","cirSolidLineW","isPolygon","shooterBody","seconds","distance","updateFPS","arguments","length","undefined","dieTime","effect","dieEffect","colorRGB","shadowBlur","enemyR","baseLog","effectX","effectY","effectR","shadowColor","requestAnimationFrame","hitShooter","enemies","enemyIdx","type","enemyAxisRotateR","enemyAxisRotateAngle","state","abs","mouseMoveAngle","shieldAngleRange","splice","polygonR","judgeWhatEnemyHit","shieldR","shieldLineW","bulletIdx","bulletLen","attackShooterResult","shooterShield","isProtect","bulletRotate","angleGap","currentLevel","boss","shooterHPBar","isAttacked","style","width","shooterHPBarW","hearts","crawlerClearedTimer","playerName","querySelectorAll","shooterHPBarOriginW","removeChild","shooterHeart","bgm","pause","bossDieResult","victoryBgm","endGame","canvas","ww","wh","gameW","updateTime","yellow","blueDark","props","document","getElementById","restartBtn","starsBtn","backBtn","restartBtnStars","cover","gamePanel","batteryInfo","heartWrapper","startBtn","prop","propImg","propLastTime","result","resultBattery","panel","keyboard","gameLevel","resultBullet","resultRanking","resultScore","resultStars","getContext","gameHalfDiagonalL","gameH","initCanvas","round","sqrt","height","documentElement","clientWidth","clientHeight","coverCircle","coverTriangle","coverPolygon","Game","batteryNum","subTris","blockV","countdownSeconds","countdownTimer","hpRecoverTimer","countupTimer","propGeneratedTimer","propGeneratedInterval","beatBossSeconds","isDisplayStars","addEventListener","handleMouseMove","handleClick","window","handleKeyup","handlePlayerName","checkPlayerName","startGame","drawCover","render","setBlockV","recoverShooterHPBar","classList","add","remove","handleGameStars","shareFb","open","shareTwitter","encodeURIComponent","drawBlock","name","fillRect","draw","circle","triangle","subTriangle","drawMouse","polygon","Shooter","rotateR","mouseMovePosY","mouseMovePos","mouseMovePosX","_this5","display","value","innerHTML","createElement","appendChild","heart","container","cursor","pointerEvents","gameTime","countdownStartTime","clearCrawler","play","loadingIcon","rankingNum","starWrapper2","starWrapper3","setLevel","resultBoss","bulletNum","handleGameResult","currentTime","volume","level","battery","params","then","res","data","totalPlayers","firstStarData","firstData","secondStarData","secondData","thirdStarData","thirdData","starScoreHTML","fillStarScore","wave","bat","apply","_toConsumableArray","starWrapper1","_this6","propName","Prop","generateProp","_this7","axios","_this8","trueSeconds","TimeMinutes","minutes","TimeSeconds","countupTime","_this9","nowHPW","offsetWidth","recoverHPBarW","_this10","form","_this11","angle","countdownTime","initLevel","setEnemy","handleLoad","init","evt","atan2","beforeShootTime","key","pauseGame","isMuted","muted","isJustSplite","drawLightning","rotateDirection","Circ","rNum","img","Image","src","complete","drawImage","replace","split","outerR","x1","y1","y2","ShooterBullet","waveLength","waveFreq","waveAmp","waveFlow","shootTime","recoverHeart","lastTime","drawCrackdownEffect","displayPropInfo","countLastTime","crackdownTime","polygonWholeR","bodyLen","anglePanFn","v","bulletMoveLen","cirIdx","asin","shotRRangeFn","attackEnemy","triIdx","lengthX","lengthY","polyIdx","sideA","attackPolygon","beyondBoundary","enemyAngleMinus","enemyAnglePan","enemyAngleAdd","shotAngleRange","judgeShotAngleRange","shotRRange","sideB1Len","sideB2Len","angleAB1","angleAB2","rotateAngleJudge","angleB2","polyRotate","sideB1","sideB2","sideC1","cosineFormula","sideC2","bottomJudge","polyAxisRotateAngle","topJudge","angleB1","getAngleB","polyAngleMinus","polyAngleAdd","shooterRotateAngle","shooterAnglePan","beforeRotateAxisAngleTime","isGeneratedSub","shootTimer","triOuterBigR","triInnerBigR","triInnerSmallR","randomRotateAngle","rotateAxisAngleTime","Power0","easeNone","TriSub","order","TriBullet","isReproduceMoving","Power1","easeIn","degree","log","a","b","c","acos","min","max","floor","instrument","note","synth","duration","timeout","Tone","MembraneSynth","toMaster","triggerAttackRelease","DuoSynth","MonoSynth","Synth","angleAdd"],"mappings":"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","file":"index.js","sourcesContent":["class Boss {\r\n  constructor(args) {\r\n    const def = {\r\n      axisRotateR: 0,\r\n      axisRotateAngle: 0,\r\n      rotate: 0,\r\n      scale: 0,\r\n      // axisRotateRV: 1,\r\n      axisRotateAngleV: 1,\r\n      rotateV: 1,\r\n      bullets: [],\r\n      HP: 24,\r\n      beforeGenerateEnemyTime: new Date(),\r\n      beginAppear: true,\r\n      isAppearing: false,\r\n      isDisappeared: false,\r\n      appearTimes: 0,\r\n      appearTimer: null,\r\n      disappearTimer: null,\r\n    }\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n  draw() {\r\n    ctx.save();\r\n      ctx.translate(originPos(this.axisRotateR, this.axisRotateAngle).x, originPos(this.axisRotateR, this.axisRotateAngle).y);\r\n      ctx.scale(this.scale, this.scale);\r\n      ctx.rotate(this.rotate * degToPi);\r\n      // 透明頭\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.4)';\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, 0);\r\n      ctx.lineTo(11, 0);\r\n      ctx.lineTo(18, 6);\r\n      ctx.lineTo(18, 15);\r\n      ctx.lineTo(-18, 15);\r\n      ctx.lineTo(-18, 6);\r\n      ctx.lineTo(-11, 0);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      // 黃頭\r\n      ctx.fillStyle = globalColor.orange;\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, 9);\r\n      ctx.lineTo(11, 9);\r\n      ctx.lineTo(18, 15);\r\n      ctx.lineTo(18, 36);\r\n      ctx.lineTo(-18, 36);\r\n      ctx.lineTo(-18, 15);\r\n      ctx.lineTo(-11, 9);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      // 裝飾內透明頭\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.25)';\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, 9 + 8);\r\n      ctx.lineTo(4, 9 + 8);\r\n      ctx.lineTo(14, 24);\r\n      ctx.lineTo(14, 36 - 8);\r\n      ctx.lineTo(-14, 36 - 8);\r\n      ctx.lineTo(-14, 24);\r\n      ctx.lineTo(-4, 9 + 8);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      // 右白肩\r\n      ctx.fillStyle = globalColor.white;\r\n      ctx.beginPath();\r\n      ctx.moveTo(18, -6);\r\n      ctx.lineTo(18 + 8, -6);\r\n      ctx.lineTo(18 + 8 + 8, 15);\r\n      ctx.lineTo(18 + 8 + 8, 36 + 6);\r\n      ctx.lineTo(18, 36 + 6);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      // 左白肩\r\n      ctx.fillStyle = globalColor.white;\r\n      ctx.beginPath();\r\n      ctx.moveTo(-18, -6);\r\n      ctx.lineTo(-18 - 8, -6);\r\n      ctx.lineTo(-18 - 8 - 8, 15);\r\n      ctx.lineTo(-18 - 8 - 8, 36 + 6);\r\n      ctx.lineTo(-18, 36 + 6);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      // 右紅翼\r\n      ctx.fillStyle = globalColor.red;\r\n      ctx.beginPath();\r\n      ctx.moveTo(18 + 8 + 8, 9);\r\n      ctx.lineTo(18 + 8 + 8 + 8, 9);\r\n      ctx.lineTo(18 + 8 + 8 + 8 + 16, 36 + 6);\r\n      ctx.lineTo(18 + 8 + 8 + 8 + 16, 36 + 6 + 8);\r\n      ctx.lineTo(18 + 8 + 8, 36 + 6 + 8);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      // 左藍翼\r\n      ctx.fillStyle = globalColor.blue;\r\n      ctx.beginPath();\r\n      ctx.moveTo(-18 - 8 - 8 + 4, 9);\r\n      ctx.lineTo(-18 - 8 - 8 - 8 + 4, 9);\r\n      ctx.lineTo(-18 - 8 - 8 - 8 - 16 + 4, 36 + 6);\r\n      ctx.lineTo(-18 - 8 - 8 - 8 - 16 + 4, 36 + 6 + 8);\r\n      ctx.lineTo(-18 - 8 - 8 + 4, 36 + 6 + 8);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      // 右灰風口\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.3)';\r\n      ctx.beginPath();\r\n      ctx.moveTo(18 + 8 + 8, 36 + 6 + 8);\r\n      ctx.lineTo(18 + 8 + 8, 36 + 6 + 8 + 6);\r\n      ctx.lineTo(18 + 8 + 8 + 16, 36 + 6 + 8 + 6);\r\n      ctx.lineTo(18 + 8 + 8 + 16, 36 + 6 + 8);\r\n      ctx.fill();\r\n      // 左灰風口\r\n      ctx.beginPath();\r\n      ctx.moveTo(-18 - 8 - 8 + 4, 36 + 6 + 8);\r\n      ctx.lineTo(-18 - 8 - 8 + 4, 36 + 6 + 8 + 6);\r\n      ctx.lineTo(-18 - 8 - 8 - 16 + 4, 36 + 6 + 8 + 6);\r\n      ctx.lineTo(-18 - 8 - 8 - 16 + 4, 36 + 6 + 8);\r\n      ctx.fill();\r\n      // 右裝飾白圈\r\n      ctx.strokeStyle = globalColor.white;\r\n      ctx.lineWidth = 2.8;\r\n      ctx.beginPath();\r\n      ctx.arc(18 + 8 + 8 + 11, 36 + 6 - 2, 4.4, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n      // 左裝飾黃叉\r\n      ctx.strokeStyle = globalColor.orange;\r\n      // ctx.lineWidth = 2.8;\r\n      ctx.beginPath();\r\n      ctx.moveTo(-18 - 8 - 8 + 4 - 3.2, 9 + 16);\r\n      ctx.lineTo(-18 - 8 - 8 + 4 - 3.2 - 9.6, 9 + 16 + 9.6);\r\n      ctx.moveTo(-18 - 8 - 8 + 4 - 3.2 - 9.6, 9 + 16);\r\n      ctx.lineTo(-18 - 8 - 8 + 4 - 3.2, 9 + 16 + 9.6);\r\n      ctx.stroke();\r\n      // 左裝飾透明四邊形\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.24)';\r\n      ctx.beginPath();\r\n      ctx.moveTo(-18 - 8 - 8 - 8 - 16 + 4 + 4, 36 + 6 - 8.25);\r\n      ctx.lineTo(-18 - 8 - 8 - 8 - 16 + 4, 36 + 6);\r\n      ctx.lineTo(-18 - 8 - 8 - 8 - 16 + 4, 36 + 6 + 8);\r\n      ctx.lineTo(-18 - 8 - 8 - 6 + 4, 36 + 6 + 8);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    ctx.restore();\r\n    // 繪製 boss 子彈\r\n    this.bullets.forEach((bullet) => {\r\n      bullet.draw();\r\n    });\r\n  }\r\n  update() {\r\n    // boss 出現\r\n    this.beginAppear && this.appear();\r\n    this.beginAppear = false;\r\n    if (!this.isAppearing && !this.isDisappeared) {\r\n    }\r\n    // 更新 boss 子彈\r\n    this.bullets.forEach((bullet, idx, arr) => {\r\n      bullet.update(idx, arr);\r\n    });\r\n  }\r\n  appear() {\r\n    if (game.isEnd) return;\r\n    this.appearTimes += 1;\r\n    this.isDisappeared = false;\r\n    this.isAppearing = true;\r\n    gameCrawler.textContent = '⚠ BOSS IS COMING';\r\n    TweenLite.to(this, 1.2, {\r\n      scale: 1,\r\n      ease: Expo.easeOut,\r\n    });\r\n    const rotateNum = getRandom(45, 135);\r\n    TweenLite.to(this, 1.6, {\r\n      axisRotateAngle: `+=${rotateNum}`,\r\n      rotate: `+=${rotateNum}`,\r\n      ease: Expo.easeOut,\r\n      onComplete: () => {\r\n        this.isAppearing = false;\r\n      },\r\n    });\r\n    if (this.appearTimes && this.appearTimes % 3) {\r\n      setTimeout(() => {\r\n        if (this.HP === 0 || game.isPause) return;\r\n        this.shoot();\r\n      }, getRandom(1000, 2000));\r\n    } else {\r\n      setTimeout(() => {\r\n        if (this.HP === 0 || game.isPause) return;\r\n        this.generateEnemy();\r\n      }, getRandom(1000, 2000));\r\n    }\r\n    this.disappearTimer = setTimeout(() => {\r\n      if (this.HP === 0 || game.isPause) return;\r\n      this.disappear();\r\n    }, getRandom(3000, 4000));\r\n    playSound('membrane', 'A4', '4n');\r\n  }\r\n  disappear() {\r\n    if (game.isEnd) return;\r\n    this.isDisappeared = true;\r\n    TweenLite.to(this, 1.2, {\r\n      scale: 0,\r\n      ease: Expo.easeOut,\r\n    });\r\n    const rotateNum = getRandom(45, 225);\r\n    TweenLite.to(this, 1.6, {\r\n      axisRotateAngle: `+=${rotateNum}`,\r\n      rotate: `+=${rotateNum}`,\r\n      ease: Expo.easeOut,\r\n    });\r\n    this.appearTimer = setTimeout(() => {\r\n      if (this.HP === 0 || game.isPause) return;\r\n      this.appear();\r\n    }, 2000);\r\n    playSound('membrane', 'F3', '4n');\r\n  }\r\n  shoot() {\r\n    this.bullets.push(new BossBullet({\r\n      p: {\r\n        x: originPos(this.axisRotateR, this.axisRotateAngle).x,\r\n        y: originPos(this.axisRotateR, this.axisRotateAngle).y,\r\n      },\r\n      rotateAngle: this.rotate,\r\n      axisRotateR: this.axisRotateR,\r\n    }));\r\n    playSound('mono', 'F2', '4n', 0, -10);\r\n    setTimeout(() => {\r\n      this.bullets.push(new BossBullet({\r\n        p: {\r\n          x: originPos(this.axisRotateR, this.axisRotateAngle).x,\r\n          y: originPos(this.axisRotateR, this.axisRotateAngle).y,\r\n        },\r\n        rotateAngle: this.rotate,\r\n        waveLength: 14,\r\n        axisRotateR: this.axisRotateR,\r\n      }));\r\n      playSound('mono', 'F2', '4n', 0, -10);\r\n    }, 200);\r\n  }\r\n  generateEnemy() {\r\n    let num;\r\n    const chooseEnemy = () => {\r\n      num = getRandom(1, 3);\r\n      switch (num) {\r\n        case 1:\r\n          game.circles.push(new Circle({\r\n            axisRotateR: this.axisRotateR,\r\n            axisRotateAngle: this.axisRotateAngle % 360,\r\n            axisRotateAngleV: -(getRandom(2, 8) / 10),\r\n            rotate: getRandom(0, 360),\r\n            isBossGenerate: true,\r\n          }));\r\n          break;\r\n        case 2:\r\n          game.triangles.push(new Triangle({\r\n            axisRotateR: this.axisRotateR,\r\n            axisRotateAngle: this.axisRotateAngle % 360,\r\n            axisRotateAngleV: getRandom(2, 8) / 10,\r\n            rotate: this.axisRotateAngle % 360,\r\n            isBossGenerate: true,\r\n          }));\r\n          break;\r\n        case 3:\r\n          const rotate = getRandom(0, 360);\r\n          game.polygons.push(new Polygon({\r\n            axisRotateR: {\r\n              whole: this.axisRotateR,\r\n              big: this.axisRotateR,\r\n              small: this.axisRotateR,\r\n            },\r\n            axisRotateAngle: {\r\n              whole: this.axisRotateAngle % 360,\r\n              big: this.axisRotateAngle % 360,\r\n              small: this.axisRotateAngle % 360,\r\n            },\r\n            rotate: {\r\n              whole: rotate,\r\n              big: rotate,\r\n              small: rotate,\r\n            },\r\n            rotateV: getRandom(4, 8) / 10,\r\n            isBossGenerate: true,\r\n          }));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    chooseEnemy();\r\n    chooseEnemy();\r\n    if (Math.random() >= 0.5) {\r\n      setTimeout(() => {\r\n        chooseEnemy();\r\n      }, 400);\r\n    }\r\n  }\r\n}\r\n\r\nclass BossBullet {\r\n  constructor(args) {\r\n    const def = {\r\n      p: {\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n      axisRotateR: 0,\r\n      color: globalColor.orange,\r\n      moveX: 8,\r\n      moveXV: 4,\r\n      rotateAngle: 0,\r\n      waveLength: 22,\r\n      waveFreq: 0.3,\r\n      waveAmp: 4,\r\n      waveFlow: 3,\r\n      isBoss: true,\r\n    }\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n  draw() {\r\n    ctx.save();\r\n      ctx.translate(this.p.x, this.p.y);\r\n      ctx.rotate((this.rotateAngle - 90) * degToPi);\r\n      // 開始畫 boss 子彈\r\n      drawWaveBullet(this, 'moveX', 2.4, 'rgba(245, 175, 95, 0.72)');\r\n    ctx.restore();\r\n  }\r\n  update(idx, arr) {\r\n    // boss 子彈移動\r\n    this.moveX += this.moveXV;\r\n    enemyMethods.attackShooter(this, idx, arr);\r\n  }\r\n}","class Circle {\r\n  constructor(args) {\r\n    const def = {\r\n      axisRotateR: 0,\r\n      axisRotateAngle: 0,\r\n      r: 22,\r\n      rotate: 0,\r\n      scale: 0,\r\n      axisRotateRV: 0,\r\n      axisRotateAngleV: 0,\r\n      // rotateV: 0,\r\n      color: globalColor.orange,\r\n      HP: 2,\r\n      bullets: [],\r\n      beforeRotateTime: new Date(),\r\n      isRotating: false,\r\n      beginAppear: true,\r\n      isBossGenerate: false,\r\n    }\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n\r\n\r\n  draw() {\r\n    const circleBigR = this.r + 5;\r\n    const circleSmallR = this.r - 10;\r\n    const subAxisRotateR = 14;\r\n    ctx.save();\r\n    ctx.translate(originPos(this.axisRotateR, this.axisRotateAngle).x, originPos(this.axisRotateR, this.axisRotateAngle).y);\r\n    ctx.rotate(this.rotate * degToPi);\r\n    ctx.scale(this.scale, this.scale);\r\n    // 大淡圓\r\n    ctx.beginPath();\r\n    ctx.arc(4, 0, circleBigR, 0, Math.PI * 2);\r\n    ctx.fillStyle = 'rgba(245, 175, 95, 0.21)';\r\n    ctx.fill();\r\n    // 小淡圓\r\n    ctx.beginPath();\r\n    ctx.arc(-20, 0, circleSmallR, 0, Math.PI * 2);\r\n    ctx.fillStyle = 'rgba(245, 175, 95, 0.21)';\r\n    ctx.fill();\r\n    // 主體圓\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.r, 0, Math.PI * 2);\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n    // 小三圓\r\n    ctx.beginPath();\r\n    ctx.fillStyle = globalColor.white;\r\n    // ctx.arc(subAxisRotateR, 0, 2.4, 0, Math.PI * 2);\r\n    ctx.arc(subAxisRotateR * Math.cos(60 * degToPi), subAxisRotateR * Math.sin(60 * degToPi), 2.4, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.arc(subAxisRotateR * Math.cos(180 * degToPi), subAxisRotateR * Math.sin(180 * degToPi), 2.4, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.arc(subAxisRotateR * Math.cos(300 * degToPi), subAxisRotateR * Math.sin(300 * degToPi), 2.4, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    // 神經\r\n    ctx.beginPath();\r\n    ctx.fillStyle = globalColor.white;\r\n    ctx.lineTo(-8, 0);\r\n    ctx.$triLineTo(-2, 32);\r\n    ctx.$triLineTo(-12, 120);\r\n    ctx.$triLineTo(-2.4, 176);\r\n    ctx.$triLineTo(-8, 240);\r\n    ctx.$triLineTo(-1.6, 320);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n    // 繪製圓形子彈\r\n    this.bullets.forEach((bullet) => {\r\n      bullet.draw();\r\n    });\r\n  }\r\n\r\n\r\n  update(idx) {\r\n    this.beginAppear && this.appear(this.isBossGenerate);\r\n    this.beginAppear = false;\r\n    game.isStart && enemyMethods.approach(this);\r\n    // 更新圓形子彈\r\n    this.bullets.forEach((bullet, idx, arr) => {\r\n      bullet.update(idx, arr);\r\n    });\r\n    // 當圓形自身在旋轉時，圓形不要移動\r\n    if (!this.isRotating) {\r\n      this.axisRotateAngle += this.axisRotateAngleV;\r\n    }\r\n    // 每 4-8 秒，自身旋轉一次\r\n    const rotateTime = new Date();\r\n    if ((rotateTime - this.beforeRotateTime) > getRandom(4000, 8000)) {\r\n      this.isRotating = true;\r\n      TweenLite.to(this, 0.4, {\r\n        // rotate: this.axisRotateAngle - 180,\r\n        // rotate: this.axisRotateAngle % 360,\r\n        rotate: this.axisRotateAngle,\r\n        ease: Power2.easeOut,\r\n        // 自身旋轉完後射擊\r\n        onComplete: () => {\r\n          this.isRotating = false;\r\n          if (!game.isStart) return;\r\n          this.shoot();\r\n        },\r\n      });\r\n      this.beforeRotateTime = rotateTime;\r\n    }\r\n    // 當圓形撞上 shooter\r\n    enemyMethods.hitShooter(game.circles, idx, 'circle', this.axisRotateR, this.axisRotateAngle);\r\n  }\r\n\r\n\r\n  shoot() {\r\n    // 射 1-2 發\r\n    for (let i = 0; i < getRandom(1, 2); i += 1) {\r\n      const timer = setTimeout(() => {\r\n        this.bullets.push(new CirBullet({\r\n          p: {\r\n            x: originPos(this.axisRotateR, this.axisRotateAngle).x,\r\n            y: originPos(this.axisRotateR, this.axisRotateAngle).y,\r\n          },\r\n          rotateAngle: this.rotate,\r\n          moveX: -this.r - 10,\r\n          // rotateAngle: Math.sin(this.rotate * degToPi),\r\n          axisRotateR: this.axisRotateR,\r\n        }));\r\n        clearTimeout(timer);\r\n        // 間隔 0.2-0.4 秒\r\n      }, i * getRandom(200, 400));\r\n    }\r\n    gameCrawler.textContent = Math.random() >= 0.8 ? 'UNDER ATTACK🤕' : 'ATTACK⚡️';\r\n    playSound('membrane', 'D5');\r\n  }\r\n\r\n\r\n  appear(isBossGenerate) {\r\n    gameCrawler.textContent = '⚠ ENEMY IS COMING';\r\n    // gameCrawler.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i>ENEMY IS COMING!';\r\n    TweenLite.to(this, 0.8, {\r\n      scale: 1,\r\n      ease: Back.easeOut.config(1.7),\r\n    });\r\n    TweenLite.from(this, 1.6, {\r\n      rotate: 0,\r\n      ease: Back.easeOut.config(1.7),\r\n    });\r\n    if (isBossGenerate) {\r\n      TweenLite.to(this, 1.6, {\r\n        axisRotateR: `+=${getRandom(80, 160)}`,\r\n        ease: Power2.easeOut,\r\n      });\r\n    }\r\n    game.isStart && playSound('synth', 'F4', '4n');\r\n    // playSound('synth', 'B4', '8n', 50);\r\n  }\r\n}\r\n\r\n\r\n\r\nclass CirBullet {\r\n  constructor(args) {\r\n    const def = {\r\n      p: {\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n      axisRotateR: 0,\r\n      color: globalColor.orange,\r\n      moveX: 0,\r\n      moveXV: -4.5,\r\n      // v: 4,\r\n      rotateAngle: 0,\r\n    }\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n  draw() {\r\n    ctx.save();\r\n      ctx.translate(this.p.x, this.p.y);\r\n      ctx.rotate(this.rotateAngle * degToPi); \r\n      ctx.beginPath();\r\n      ctx.arc(this.moveX, 0, 4, 0, Math.PI * 2);\r\n      ctx.fillStyle = this.color;\r\n      ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  update(idx, arr) {\r\n    // 圓形子彈移動\r\n    this.moveX += this.moveXV;\r\n    // 子彈擊中 shooter\r\n    enemyMethods.attackShooter(this, idx, arr);\r\n  }\r\n}","/* \r\n ** 敵人方法\r\n */\r\nconst enemyMethods = {\r\n  // 逼近 shooter\r\n  approach(enemy) {\r\n    const axisRotateR = enemy.axisRotateR;\r\n    const isPolygon = typeof(axisRotateR) === 'object';\r\n    if (!enemy.axisRotateRV) {\r\n      const shooter = game.shooter;\r\n      const shooterBody = (shooter.r + (shooter.cirSolidLineW / 2));\r\n      const distance = (isPolygon ? axisRotateR.whole : (axisRotateR - enemy.r)) - shooterBody;\r\n      const seconds =  getRandom(30, 40);\r\n      enemy.axisRotateRV = -(distance / (seconds * updateFPS));\r\n    }\r\n    if (isPolygon) {\r\n      if (enemy.HP.whole) {\r\n        axisRotateR.small = axisRotateR.big = axisRotateR.whole += enemy.axisRotateRV;\r\n      } else {\r\n        // 重物引力較強\r\n        axisRotateR.big += enemy.axisRotateRV * getRandom(3, 4);\r\n        // 輕物引力較弱\r\n        axisRotateR.small += enemy.axisRotateRV * getRandom(1, 4);\r\n      }\r\n    } else {\r\n      enemy.axisRotateR += enemy.axisRotateRV;\r\n    }\r\n  },\r\n\r\n\r\n  // 死亡效果\r\n  dieEffect(enemyR, effectX, effectY, colorRGB, isBoss = false) {\r\n    let dieTime = 1;\r\n    let effect = () => {\r\n      if (!game.isPause) {\r\n        dieTime += 1;\r\n      }\r\n      ctx.beginPath();\r\n      ctx.save();\r\n      ctx.strokeStyle = `rgba(${colorRGB}, ${(48 - dieTime) / 46})`;\r\n      ctx.fillStyle = `rgba(${colorRGB}, ${(48 - dieTime) / 230})`;\r\n      ctx.shadowColor = `rgba(${colorRGB}, 0.48)`;\r\n      ctx.shadowBlur = 2;\r\n      ctx.lineWidth = 2;\r\n      const effectR = enemyR * baseLog(3, (((dieTime - 2) / 46) * 8) + 1);\r\n      ctx.arc(effectX, effectY, effectR, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      ctx.stroke();\r\n      ctx.restore();\r\n      // }\r\n      if (dieTime < 48) {\r\n        requestAnimationFrame(effect);\r\n      }\r\n    }\r\n    requestAnimationFrame(effect);\r\n    if (!isBoss) {\r\n      setTimeout(() => {\r\n        gameCrawler.textContent = 'ENEMY DIES😇';\r\n      }, 0);\r\n    }\r\n    // playSound('duo', 'F4', '4n');\r\n    playSound('synth', 'G2', '8n', 0, 25);\r\n    playSound('duo', 'F2', '4n', 0, 15);\r\n    playSound('duo', 'E2', '4n', 0, 10);\r\n  },\r\n\r\n\r\n  // 敵人撞擊 shooter 判定\r\n  hitShooter(enemies, enemyIdx, type, enemyAxisRotateR, enemyAxisRotateAngle) {\r\n    const enemy = enemies[enemyIdx];\r\n    const shooter = game.shooter;\r\n    let shieldAngleRange;\r\n    if (shooter.state !== 'shield') {\r\n      shieldAngleRange = Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) >= (135 * degToPi) && Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) <= (225 * degToPi);\r\n    } else {\r\n      shieldAngleRange = Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) >= (90 * degToPi) && Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) <= (270 * degToPi);\r\n    }\r\n    // const shieldAngleRange = Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) >= (135 * degToPi) && Math.abs(mouseMoveAngle - enemyAxisRotateAngle * degToPi) <= (225 * degToPi);\r\n    // 判斷是多邊形或其它敵人撞上 shooter\r\n    const judgeWhatEnemyHit = function () {\r\n      if (type !== 'big' && type !== 'small') {\r\n        enemies.splice(enemyIdx, 1);\r\n        // 移除敵人效果\r\n        if (type !== 'whole') {\r\n          const colorRGB = type === 'circle' ? '245, 175, 95' : '54, 118, 187';\r\n          enemyMethods.dieEffect(enemy.r, originPos(enemyAxisRotateR, enemyAxisRotateAngle).x, originPos(enemyAxisRotateR, enemyAxisRotateAngle).y, colorRGB);\r\n        } else {\r\n          const polygonR = (34 + 22) / 2;\r\n          enemyMethods.dieEffect(polygonR, enemy.originPos(type).x, enemy.originPos(type).y, '231, 70, 93');\r\n        }\r\n      } else {\r\n        enemy.HP[type] -= 1;\r\n        const polygonR = type === 'big' ? (34 + 22) / 2 : (23 + 21) / 2;\r\n        enemyMethods.dieEffect(polygonR, enemy.originPos(type).x, enemy.originPos(type).y, '231, 70, 93');\r\n        if (enemy.HP.big === 0 && enemy.HP.small === 0) {\r\n          enemies.splice(enemyIdx, 1);\r\n        }\r\n      }\r\n    }\r\n    // 當敵人撞上 shooter 主體\r\n    if (enemyAxisRotateR <= (shooter.r + (shooter.cirSolidLineW / 2))) {\r\n      // shooter.HP -= 1;\r\n      judgeWhatEnemyHit();\r\n      enemyMethods.attackShooterResult();\r\n      playSound('membrane', 'B4');\r\n      // 當敵人撞上 shooter 護盾\r\n    } else if (shieldAngleRange && (enemyAxisRotateR <= (shooter.shieldR + (shooter.shieldLineW / 2)))) {\r\n      judgeWhatEnemyHit();\r\n      shooter.isProtect = true;\r\n      gameCrawler.textContent = 'BLOCK😉';\r\n      playSound('membrane', 'D4');\r\n    }\r\n  },\r\n\r\n\r\n  // 敵人子彈擊中 shooter 判定\r\n  attackShooter(bullet, bulletIdx, bullets, bulletLen = 0) {\r\n    const shooter = game.shooter;\r\n    const shooterBody = shooter.r + (shooter.cirSolidLineW / 2);\r\n    const shooterShield = shooter.shieldR + (shooter.shieldLineW / 2);\r\n    // 當敵人子彈擊中 shooter 主體\r\n    if (Math.abs(bullet.moveX) >= (bullet.axisRotateR - (shooterBody + bulletLen))) {\r\n      // 子彈擊中後\r\n      enemyMethods.attackShooterResult();\r\n      // 移除敵人子彈\r\n      bullets.splice(bulletIdx, 1);\r\n      bullet.isBoss ? playSound('mono', 'C2', '8n', 0, -10) : playSound('membrane', 'B4');\r\n    }\r\n    // 當敵人子彈射中 shooter 的護盾\r\n    const bulletRotate = bullet.isBoss ? bullet.rotateAngle + 90 : bullet.rotateAngle;\r\n    const angleGap = Math.abs((mouseMoveAngle / degToPi) - ((bulletRotate % 360) + (bulletRotate < 0 ? 360 : 0)));\r\n    let shieldAngleRange;\r\n    if (shooter.state !== 'shield') {\r\n      shieldAngleRange = (angleGap >= 135) && (angleGap <= 225);\r\n    } else {\r\n      shieldAngleRange = (angleGap >= 90) && (angleGap <= 270);\r\n    }\r\n    if (shieldAngleRange && (Math.abs(bullet.moveX) >= (bullet.axisRotateR - (shooterShield + bulletLen)))) {\r\n      // 移除子彈\r\n      bullets.splice(bulletIdx, 1);\r\n      gameCrawler.textContent = 'BLOCK😉';\r\n      playSound('membrane', 'D4');\r\n    }\r\n  },\r\n\r\n\r\n  // 敵人撞擊或子彈擊中 shooter 後\r\n  attackShooterResult() {\r\n    if (!game.isStart || (game.currentLevel === 10 && !game.boss)) return;\r\n    const shooter = game.shooter;\r\n    const shooterHPBarOriginW = 216;\r\n    // 命條減 1/3\r\n    const shooterHPBarW = shooterHPBar.offsetWidth - (shooterHPBarOriginW / 3);\r\n    shooter.isAttacked = true;\r\n    // shooter 命減 1\r\n    // shooter.HP -= 1;\r\n    shooterHPBar.style.width = `${shooterHPBarW < 0 ? 0 : shooterHPBarW}px`;\r\n    // 若 shooter 已經沒有命條\r\n    if (shooterHPBarW <= 0) {\r\n      // 若 shooter 還有愛心\r\n      if (shooter.hearts) {\r\n        // 減掉一顆愛心\r\n        const shooterHeart = document.querySelectorAll('.panel__game-heart');\r\n        shooterHeart[0].parentNode.removeChild(shooterHeart[0]);\r\n        shooter.hearts -= 1;\r\n        // 回復命條\r\n        shooterHPBar.style.width = `${shooterHPBarOriginW}px`;\r\n      } else {\r\n        // 如果沒有愛心，結束遊戲\r\n        game.endGame();\r\n        playSound('synth', 'A3');\r\n        playSound('synth', 'E2', '8n', 160);\r\n        playSound('synth', 'A2', '8n', 320);\r\n        clearTimeout(game.crawlerClearedTimer);\r\n        gameCrawler.textContent = `YOU, ${this.playerName}💀, ARE DEAD`;\r\n        return;\r\n      }\r\n    }\r\n    gameCrawler.textContent = Math.random() >= 0.5 ? 'OUCH😣' : 'UGGH😫';\r\n  },\r\n\r\n\r\n  bossDieResult() {\r\n    let boss = game.boss;\r\n    enemyMethods.dieEffect(264, originPos(boss.axisRotateR, boss.axisRotateAngle).x, originPos(boss.axisRotateR, boss.axisRotateAngle).y, '245, 175, 95', true);\r\n    setTimeout(() => {\r\n      enemyMethods.dieEffect(264, originPos(boss.axisRotateR, boss.axisRotateAngle).x, originPos(boss.axisRotateR, boss.axisRotateAngle).y, '54, 118, 187', true);\r\n    }, 300);\r\n    setTimeout(() => {\r\n      enemyMethods.dieEffect(264, originPos(boss.axisRotateR, boss.axisRotateAngle).x, originPos(boss.axisRotateR, boss.axisRotateAngle).y, '231, 70, 93', true);\r\n    }, 600);\r\n    game.boss = null;\r\n    // 改變背景音樂\r\n    bgm.pause();\r\n    bgm.currentTime = 0;\r\n    victoryBgm.play();\r\n    victoryBgm.volume = 0.5;\r\n    // 3 秒後，結束遊戲\r\n    setTimeout(() => {\r\n      game.endGame();\r\n    }, 3000);\r\n    clearTimeout(game.crawlerClearedTimer);\r\n    gameCrawler.textContent = 'BOSS DIES!!!🎊';\r\n  }\r\n}","/* Environment Variable */\r\nconst updateFPS = 30;\r\nlet updateTime = 0;\r\n\r\nconst globalColor = {\r\n  red: '#e7465d',\r\n  orange: '#f5af5f',\r\n  yellow: '#f7b52c',\r\n  blue: '#3676bb',\r\n  blueDark: '#001d2e',\r\n  white: '#fff',\r\n}\r\n\r\nconst props = ['heart', 'crackdown', 'shield', 'double', 'wave'];\r\n\r\n\r\n/* GUI Controls */\r\n// const controls = {\r\n  // amp: 8,\r\n  // freq: 0.3,\r\n  // testAngle: 40,\r\n// }\r\n\r\n// const gui = new dat.GUI();\r\n// gui.add(controls, 'testAngle', 0, 90).step(1).onChange((value) => {});\r\n// gui.add(controls, 'freq', 0, 1).step(0.1).onChange((value) => {});\r\n\r\nconst startBtn = document.getElementById('start-btn');\r\nconst restartBtn = document.getElementById('restart-btn');\r\nconst starsBtn = document.getElementById('stars-btn');\r\nconst backBtn = document.getElementById('back-btn');\r\nconst restartBtnStars = document.getElementById('restart-btn--stars');\r\n\r\nconst cover = document.getElementById('cover');\r\nconst gamePanel = document.getElementById('game-panel');\r\nconst batteryInfo = document.getElementById('battery-info');\r\nconst shooterHPBar = document.getElementById('hp');\r\nconst heartWrapper = document.getElementById('heart-wrapper');\r\nconst prop = document.getElementById('prop');\r\nconst propImg = document.getElementById('prop__img');\r\nconst propLastTime = document.getElementById('prop__last-time');\r\nconst batteryNum = document.getElementById('battery-num');\r\nconst result = document.getElementById('game-result');\r\n// const resultNum = document.getElementById('result-num');\r\nconst panel = document.getElementById('panel');\r\nconst container = document.getElementById('container');\r\nconst keyboard = document.getElementById('keyboard');\r\nconst gameTime = document.getElementById('game-time');\r\nconst gameLevel = document.getElementById('game-level');\r\nconst gameCrawler = document.getElementById('game-crawler');\r\nconst playerName = document.getElementById('player-name');\r\n\r\nconst resultBoss = document.getElementById('result-boss');\r\nconst resultBattery = document.getElementById('result-battery');\r\nconst resultBullet = document.getElementById('result-bullet');\r\n// const totalPlayers = document.getElementById('total-players');\r\nconst rankingNum = document.getElementById('ranking-num');\r\n\r\nconst resultRanking = document.getElementById('result-ranking');\r\nconst resultScore = document.getElementById('result-score');\r\nconst resultStars = document.getElementById('result-stars');\r\n\r\n// const share = document.getElementById('share');\r\nconst bgm = document.getElementById('bgm');\r\nconst victoryBgm = document.getElementById('victory-bgm');\r\n\r\nconst starWrapper1 = document.getElementById('star-wrapper1');\r\nconst starWrapper2 = document.getElementById('star-wrapper2');\r\nconst starWrapper3 = document.getElementById('star-wrapper3');\r\n\r\nconst shareFb = document.getElementById('share-fb');\r\nconst shareTwitter = document.getElementById('share-twitter');\r\n\r\n\r\n\r\n\r\n/* Initialize Canvas Settings */\r\nconst canvas = document.getElementById('game');\r\nconst ctx = canvas.getContext('2d');\r\nlet ww;\r\nlet wh;\r\nlet gameW;\r\nlet gameH;\r\nlet gameHalfDiagonalL;\r\n\r\nfunction initCanvas() {\r\n  gameW = canvas.width;\r\n  gameH = canvas.height;\r\n  gameHalfDiagonalL = Math.round(Math.sqrt(canvas.width * canvas.width + canvas.height * canvas.height) / 2);\r\n  ww = document.documentElement.clientWidth;\r\n  wh = document.documentElement.clientHeight;\r\n}\r\n\r\n\r\n\r\nconst degToPi = Math.PI / 180;\r\nlet coverCircle;\r\nlet coverTriangle;\r\nlet coverPolygon;\r\nlet game;\r\n\r\n\r\n\r\nclass Game {\r\n  constructor(args) {\r\n    const def = {\r\n      shooter: null,\r\n      prop: null,\r\n      batteryNum: 0,\r\n      circles: [],\r\n      triangles: [],\r\n      polygons: [],\r\n      subTris: [],\r\n      isStart: false,\r\n      isEnd: false,\r\n      isPause: false,\r\n      blockV: {\r\n        x: -2,\r\n        y: 2,\r\n      },\r\n      currentLevel: 0,\r\n      countdownSeconds: 0,\r\n      // countupSeconds: 0,\r\n      hpRecoverTimer: null,\r\n      countdownTimer: null,\r\n      countupTimer: null,\r\n      propGeneratedTimer: null,\r\n      crawlerClearedTimer: null,\r\n      propGeneratedInterval: 200,\r\n      boss: null,\r\n      playerName: '',\r\n      beatBossSeconds: 0,\r\n      isMuted: false,\r\n      isDisplayStars: false,\r\n    };\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n  init() {\r\n    canvas.addEventListener('mousemove', handleMouseMove);\r\n    canvas.addEventListener('click', handleClick);\r\n    window.addEventListener('keyup', handleKeyup);\r\n    handlePlayerName();\r\n    startBtn.addEventListener('click', () => {\r\n      if (!this.checkPlayerName()) return;\r\n      this.startGame();\r\n    });\r\n    restartBtn.addEventListener('click', () => {\r\n      this.startGame();\r\n    });\r\n    restartBtnStars.addEventListener('click', () => {\r\n      this.startGame();\r\n    });\r\n    this.drawCover();\r\n    this.render();\r\n    this.update();\r\n    // 初始化方格移動速率與計時器\r\n    this.setBlockV();\r\n    // 緩慢恢復 shooter 生命條\r\n    this.recoverShooterHPBar();\r\n    starsBtn.addEventListener('click', () => {\r\n      resultRanking.classList.add('dpn');\r\n      resultScore.classList.add('dpn');\r\n      resultStars.classList.remove('dpn');\r\n      result.classList.add('t20');\r\n      if (!this.isDisplayStars) {\r\n        this.handleGameStars();\r\n      }\r\n      this.isDisplayStars = true;\r\n    });\r\n    backBtn.addEventListener('click', function () {\r\n      resultRanking.classList.remove('dpn');\r\n      resultScore.classList.remove('dpn');\r\n      resultStars.classList.add('dpn');\r\n      result.classList.remove('t20');\r\n    });\r\n    shareFb.addEventListener('click', function () {\r\n      window.open('https://www.facebook.com/sharer/sharer.php?u=https://yeefun.github.io/radio-defense', '', 'left=0,top=0,width=550,height=450,personalbar=0,toolbar=0,scrollbars=0,resizable=0');\r\n    });\r\n    shareTwitter.addEventListener('click', function () {\r\n      // 參考 https://gist.github.com/McKinneyDigital/2884508\r\n      const url = 'https://yeefun.github.io/radio-defense';\r\n      const name = 'szyeefun';\r\n      window.open(`http://twitter.com/share?url=${encodeURIComponent(url)}&via=${encodeURIComponent(name)}`, '', 'left=0,top=0,width=550,height=450,personalbar=0,toolbar=0,scrollbars=0,resizable=0');\r\n    });\r\n  }\r\n  render() {\r\n    // if (!this.isPause) {\r\n    ctx.fillStyle = globalColor.blueDark;\r\n    ctx.fillRect(0, 0, gameW, gameH);\r\n    // 繪製方格\r\n    this.drawBlock();\r\n    if (!this.isStart && !this.isEnd) {\r\n      ctx.save();\r\n        ctx.beginPath();\r\n        ctx.arc(gameW / 2, gameH / 2, 264, 0, Math.PI * 2);\r\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\r\n        ctx.stroke();\r\n        ctx.beginPath();\r\n        ctx.arc(gameW / 2, gameH / 2, 184, 0, Math.PI * 2);\r\n        ctx.lineWidth = 1.6;\r\n        ctx.strokeStyle = globalColor.white;\r\n        ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n    // 繪製 shooter\r\n    this.shooter.draw();\r\n    // 繪製每個 circle\r\n    this.circles.forEach((circle) => {\r\n      circle.draw();\r\n    });\r\n    // 繪製每個 triangle\r\n    this.triangles.forEach((triangle) => {\r\n      triangle.draw();\r\n    });\r\n    // 繪製每個 polygon\r\n    this.polygons.forEach((polygon) => {\r\n      polygon.draw();\r\n    });\r\n    // 繪製每個 sub triangle\r\n    this.subTris.forEach((subTriangle) => {\r\n      subTriangle.draw();\r\n    });\r\n    // 繪製 prop（道具）\r\n    this.prop && this.prop.draw();\r\n    // 繪製魔王\r\n    this.boss && this.boss.draw();\r\n    if (this.isStart) {\r\n      // 繪製滑鼠\r\n      this.drawMouse();\r\n    }\r\n    requestAnimationFrame(() => {\r\n      this.render();\r\n    });\r\n  }\r\n  update() {\r\n    updateTime += 1;\r\n    if (!this.isPause && !this.isEnd) {\r\n      // 更新 shooter\r\n      this.shooter.update();\r\n      // 更新每個 circle\r\n      this.circles.forEach((circle, idx) => {\r\n        circle.update(idx);\r\n      });\r\n      // 更新每個 triangle\r\n      this.triangles.forEach((triangle, idx) => {\r\n        triangle.update(idx);\r\n      });\r\n      // 更新每個 polygon\r\n      this.polygons.forEach((polygon, idx) => {\r\n        polygon.update(idx);\r\n      });\r\n      // 更新每個 sub triangle\r\n      this.subTris.forEach((subTriangle, idx) => {\r\n        subTriangle.update(idx);\r\n      });\r\n      // 更新 prop（道具）\r\n      this.prop && this.prop.update();\r\n      // 更新魔王\r\n      this.boss && this.boss.update();\r\n    }\r\n    setTimeout(() => {\r\n      this.update();\r\n    }, 1000 / updateFPS);\r\n  }\r\n  // 設置封面\r\n  drawCover() {\r\n    this.shooter = new Shooter();\r\n    // 圓形\r\n    this.circles.push(new Circle({\r\n      axisRotateR: getRandom(gameHalfDiagonalL / 2, gameHalfDiagonalL / 1.5),\r\n      axisRotateAngle: 225,\r\n      axisRotateAngleV: -(getRandom(2, 8) / 10),\r\n      rotate: getRandom(0, 360),\r\n    }));\r\n    // 三角形\r\n    this.triangles.push(new Triangle({\r\n      axisRotateR: getRandom(gameHalfDiagonalL / 2, gameHalfDiagonalL / 1.5),\r\n      axisRotateAngle: 45,\r\n      axisRotateAngleV: (getRandom(2, 8) / 10),\r\n      rotate: 45,\r\n    }));\r\n    // 多邊形\r\n    const rotateR = getRandom(gameHalfDiagonalL / 2, gameHalfDiagonalL / 1.5);\r\n    const rotate = getRandom(0, 360);\r\n    const rotateV = (getRandom(4, 8) / 10);\r\n    this.polygons.push(new Polygon({\r\n      axisRotateR: {\r\n        whole: rotateR,\r\n        big: rotateR,\r\n        small: rotateR,\r\n      },\r\n      axisRotateAngle: {\r\n        whole: 315,\r\n        big: 315,\r\n        small: 315,\r\n      },\r\n      rotate: {\r\n        whole: rotate,\r\n        big: rotate,\r\n        small: rotate,\r\n      },\r\n      rotateV,\r\n    }));\r\n  }\r\n  // 畫方格\r\n  drawBlock() {\r\n    ctx.save();\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.16)';\r\n      ctx.lineWidth = 0.4;\r\n      // 畫橫列\r\n      for (let i = 0; i < 18; i += 1) {\r\n        ctx.moveTo(i * 56 + ((updateTime * this.blockV.x) % 56), 0);\r\n        ctx.lineTo(i * 56 + ((updateTime * this.blockV.x) % 56), gameH);\r\n      }\r\n      // 畫直行\r\n      for (let i = 0; i < 14; i += 1) {\r\n        ctx.moveTo(0, i * 52 + ((updateTime * this.blockV.y) % 52));\r\n        ctx.lineTo(gameW, i * 52 + ((updateTime * this.blockV.y) % 52));\r\n      }\r\n      ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n  // 畫滑鼠\r\n  drawMouse() {\r\n    const mouseMovePosX = mouseMovePos.x + gameW / 2;\r\n    const mouseMovePosY = mouseMovePos.y + gameH / 2;\r\n    const length = 12;\r\n    ctx.save();\r\n      ctx.translate(mouseMovePosX, mouseMovePosY);\r\n      ctx.strokeStyle = globalColor.white;\r\n      ctx.lineWidth = 0.8;\r\n      ctx.beginPath();\r\n      ctx.moveTo(-length, 0);\r\n      ctx.lineTo(length, 0);\r\n      ctx.moveTo(0, -length);\r\n      ctx.lineTo(0, length);\r\n      ctx.stroke();\r\n    ctx.restore();\r\n    ctx.fillStyle = globalColor.white;\r\n    ctx.beginPath();\r\n    ctx.arc(mouseMovePosX, mouseMovePosY, 1.6, 0, Math.PI * 2);\r\n    ctx.fill();\r\n  }\r\n  // 設定方格移動速率\r\n  setBlockV() {\r\n    setTimeout(() => {\r\n      this.blockV.x = Math.random() * 8 - 4;\r\n      this.blockV.y = Math.random() * 8 - 4;\r\n      this.setBlockV();\r\n    }, 8000);\r\n  }\r\n  // 開始遊戲（當讀者按下 'Start Play' or 'Restart' 按鈕）\r\n  startGame() {\r\n    this.isStart = true;\r\n    this.isEnd = false;\r\n    // 移除封面\r\n    cover.style.display = 'none';\r\n    // 顯示遊戲介面\r\n    gamePanel.style.display = 'block';\r\n    // 電池資訊歸零\r\n    this.batteryNum = 0;\r\n    batteryNum.textContent = this.batteryNum;\r\n    // 重設生命條\r\n    shooterHPBar.style.width = '216px';\r\n    // 取得玩家名\r\n    this.playerName = playerName.value;\r\n    // 初始化 shooter\r\n    this.shooter = new Shooter();\r\n    // 三個愛心命\r\n    heartWrapper.innerHTML = '';\r\n    for (let i = 0; i < this.shooter.hearts; i++) {\r\n      const heart = document.createElement('DIV');\r\n      heart.classList.add('panel__game-heart');\r\n      heartWrapper.appendChild(heart);\r\n    }\r\n    // 清空敵人與子彈\r\n    this.circles.forEach((circle) => {\r\n      circle.bullets = [];\r\n    });\r\n    this.triangles.forEach((triangle) => {\r\n      triangle.bullets = [];\r\n      triangle.HP = 0;\r\n    });\r\n    this.circles = [];\r\n    this.triangles = [];\r\n    this.polygons = [];\r\n    if (this.boss) {\r\n      this.boss.bullets = [];\r\n      this.boss = null;\r\n    }\r\n    // 隱藏預設滑鼠\r\n    container.style.cursor = 'none';\r\n    // 隱藏結果\r\n    result.classList.add('op0');\r\n    // 讓滑鼠點擊無效\r\n    panel.style.pointerEvents = 'none';\r\n    // 顯示獲得電池資訊\r\n    batteryInfo.classList.remove('op0');\r\n    // 顯示鍵盤指示\r\n    keyboard.classList.remove('op0');\r\n    // 清空關卡字\r\n    gameLevel.textContent = '';\r\n    // 回到第 0 關\r\n    this.currentLevel = 0;\r\n    // 倒數計時 2 秒\r\n    this.countdownSeconds = 3;\r\n\r\n    gameCrawler.textContent = `👋${this.playerName}👋`;\r\n    gameTime.textContent = `00:0${this.countdownSeconds}”`;\r\n    const countdownStartTime = () => {\r\n      setTimeout(() => {\r\n        if (this.countdownSeconds === 0) {\r\n          this.currentLevel += 1;\r\n          this.setLevel(this.currentLevel);\r\n          // 開始產生道具\r\n          this.generateProp();\r\n          // 開始清除跑馬燈\r\n          this.clearCrawler();\r\n          return;\r\n        }\r\n        this.countdownSeconds -= 1;\r\n        gameTime.textContent = `00:0${this.countdownSeconds}”`;\r\n        switch (this.countdownSeconds) {\r\n          case 2:\r\n            gameCrawler.textContent = '🌊WAVES ARE COMING🌊';\r\n            break;\r\n          case 1:\r\n            gameCrawler.textContent = '😈ARE YOU READY😈';\r\n            break;\r\n          case 0:\r\n            gameCrawler.textContent = '🔥🔥GO🔥🔥';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        playSound('synth', 'G4');\r\n        countdownStartTime();\r\n      }, 1000);\r\n    }\r\n    countdownStartTime();\r\n    playSound('synth', 'C#5');\r\n    playSound('synth', 'E5', '8n', 160);\r\n    // 改變背景音樂\r\n    victoryBgm.pause();\r\n    victoryBgm.currentTime = 0;\r\n    bgm.play();\r\n    bgm.volume = 0.5;\r\n    // 遊戲結果返回第一頁\r\n    resultRanking.classList.remove('dpn');\r\n    resultScore.classList.remove('dpn');\r\n    resultStars.classList.add('dpn');\r\n    result.classList.remove('t20');\r\n    // 將遊戲結果換成 loading 圖示\r\n    const loadingIcon = '<img src=\"./img/loading.svg\" alt=\"loading icon\" />';\r\n    rankingNum.innerHTML = loadingIcon;\r\n    starWrapper1.innerHTML = loadingIcon;\r\n    starWrapper2.innerHTML = loadingIcon;\r\n    starWrapper3.innerHTML = loadingIcon;\r\n    // 開啟讓 stars 重新取資料的開關\r\n    this.isDisplayStars = false;\r\n  }\r\n  // 遊戲結束\r\n  endGame() {\r\n    this.isStart = false;\r\n    this.isEnd = true;\r\n    // 貼上電池數量\r\n    // resultNum.textContent = this.batteryNum;\r\n    // 填上結果\r\n    if (this.currentLevel !== 10) {\r\n      resultBoss.textContent = 'NO';\r\n    } else {\r\n      resultBoss.textContent = this.beatBossSeconds;\r\n    }\r\n    resultBattery.textContent = this.batteryNum;\r\n    resultBullet.textContent = this.shooter.bulletNum;\r\n    // 顯示結果\r\n    result.classList.remove('op0');\r\n    // 隱藏電池分數資訊\r\n    batteryInfo.classList.add('op0');\r\n    // 隱藏鍵盤指示\r\n    keyboard.classList.add('op0');\r\n    // 移除道具顯示介面\r\n    prop.classList.add('op0');\r\n    // 顯示預設滑鼠\r\n    container.style.cursor = 'auto';\r\n    // 讓滑鼠可以點擊\r\n    panel.style.pointerEvents = 'auto';\r\n    this.handleGameResult();\r\n    clearTimeout(this.countdownTimer);\r\n    clearTimeout(this.countupTimer);\r\n    clearTimeout(this.propGeneratedTimer);\r\n  }\r\n  // 暫停遊戲\r\n  pauseGame() {\r\n    if (!this.currentLevel) return;\r\n    this.isPause = !this.isPause;\r\n    if (this.isPause) {\r\n      clearTimeout(this.countdownTimer);\r\n      clearTimeout(this.countupTimer);\r\n      clearTimeout(this.propGeneratedTimer);\r\n      clearTimeout(this.crawlerClearedTimer);\r\n    } else {\r\n      this.generateProp();\r\n      this.clearCrawler();\r\n      if (!this.boss) {\r\n        this.countdownTime();\r\n      } else {\r\n        this.countupTime();\r\n        if (this.boss.isDisappeared) {\r\n          clearTimeout(this.boss.appearTimer);\r\n          this.boss.appear();\r\n        } else {\r\n          clearTimeout(this.boss.disappearTimer);\r\n          this.boss.disappear();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  handleGameResult() {\r\n    const name = this.playerName;\r\n    const level = this.currentLevel;\r\n    const battery = this.batteryNum;\r\n    const bullet = this.shooter.bulletNum;\r\n    let boss;\r\n    if (level !== 10) {\r\n      boss = 'no';\r\n    } else {\r\n      boss = this.beatBossSeconds;\r\n    }\r\n    axios.get('https://script.google.com/a/g.ntu.edu.tw/macros/s/AKfycbwwNUeevxFlQaLzP_gdhnTmSC97HgRlpV6DOCUIzg/dev', {\r\n      params: {\r\n        name,\r\n        level,\r\n        battery,\r\n        bullet,\r\n        boss,\r\n      }\r\n    })\r\n    .then((res) => {\r\n      const data = res.data;\r\n      rankingNum.innerHTML = `\r\n        <p>${data.rank}</p>\r\n        <span>/&nbsp;${data.totalPlayers}</span>\r\n      `;\r\n    });\r\n  }\r\n  handleGameStars() {\r\n    axios.get('https://script.google.com/a/g.ntu.edu.tw/macros/s/AKfycbx1L2GmotaRfoSMzVA5BtpC9kiWneoA69IOtoEi/dev')\r\n      .then((res) => {\r\n        const data = res.data;\r\n        const firstStarData = data.firstData;\r\n        const secondStarData = data.secondData;\r\n        const thirdStarData = data.thirdData;\r\n        let starScoreHTML = '';\r\n        function fillStarScore(name, wave, bat, bullet, boss) {\r\n          starScoreHTML = `\r\n            <div class=\"star__name\">${name}</div>\r\n            <div class=\"star__scores\">\r\n              <div class=\"star__score\">\r\n                <div class=\"star__num\">${wave}</div>\r\n                <div class=\"star__text\">WAVES</div>\r\n              </div>\r\n              <div class=\"star__score\">\r\n                <div class=\"star__num\">${bat}</div>\r\n                <div class=\"star__text\">BATTERIES</div>\r\n              </div>\r\n              <div class=\"star__score\">\r\n                <div class=\"star__num\">${bullet}</div>\r\n                <div class=\"star__text\">BULLETS</div>\r\n              </div>\r\n              <div class=\"star__score\">\r\n                <div class=\"star__num\">${boss}</div>\r\n                <div class=\"star__text\">BOSS</div>\r\n              </div>\r\n            </div>\r\n          `;\r\n        }\r\n        fillStarScore(...firstStarData);\r\n        starWrapper1.innerHTML = starScoreHTML;\r\n        fillStarScore(...secondStarData);\r\n        starWrapper2.innerHTML = starScoreHTML;\r\n        fillStarScore(...thirdStarData);\r\n        starWrapper3.innerHTML = starScoreHTML;\r\n      });\r\n  }\r\n  // 產生道具\r\n  generateProp() {\r\n    // 如果已有道具，便停止計時\r\n    if (this.prop) return;\r\n    this.propGeneratedTimer = setTimeout(() => {\r\n      this.propGeneratedInterval -= 1;\r\n      // 20 秒過後\r\n      if (this.propGeneratedInterval === 0) {\r\n        let propName;\r\n        // 如果大於 5 顆心，便排除愛心\r\n        if (this.shooter.hearts < 5) {\r\n          propName = props[getRandom(0, 4)];\r\n        } else {\r\n          propName = props[getRandom(1, 4)];\r\n        }\r\n        this.prop = new Prop({\r\n          src: `./img/${propName}.svg`,\r\n          axisRotateR: gameHalfDiagonalL,\r\n          axisRotateAngle: getRandom(0, 360),\r\n        });\r\n        // 每 20 (200 * 100) 秒產生一個道具\r\n        this.propGeneratedInterval = 200;\r\n      }\r\n      this.generateProp();\r\n    }, 100);\r\n  }\r\n  // 倒數遊戲時間\r\n  countdownTime() {\r\n    this.countdownTimer = setTimeout(() => {\r\n      if (this.countdownSeconds === 0) {\r\n        this.currentLevel += 1;\r\n        this.setLevel(this.currentLevel);\r\n        return;\r\n      }\r\n      this.countdownSeconds -= 1;\r\n      gameTime.textContent = `00:${this.countdownSeconds < 10 ? `0${this.countdownSeconds}` : this.countdownSeconds}”`;\r\n      this.countdownTime();\r\n    }, 1000);\r\n  }\r\n  countupTime() {\r\n    this.countupTimer = setTimeout(() => {\r\n      this.beatBossSeconds += 1;\r\n      const minutes = Math.floor(this.beatBossSeconds / 60);\r\n      const trueSeconds = this.beatBossSeconds % 60;\r\n      const TimeSeconds = trueSeconds < 10 ? `0${trueSeconds}` : trueSeconds;\r\n      const TimeMinutes = minutes < 10 ? `0${minutes}` : minutes;\r\n      gameTime.textContent = `${TimeMinutes}:${TimeSeconds}”`;\r\n      this.countupTime();\r\n    }, 1000);\r\n  }\r\n  // 自動恢復 shooter 生命條\r\n  recoverShooterHPBar() {\r\n    this.hpRecoverTimer = setTimeout(() => {\r\n      if (this.isPause || !this.isStart) {\r\n        this.recoverShooterHPBar();\r\n        return;\r\n      }\r\n      const nowHPW = shooterHPBar.offsetWidth;\r\n      if (nowHPW < 216) {\r\n        const recoverHPBarW = nowHPW + 1;\r\n        shooterHPBar.style.width = `${recoverHPBarW}px`;\r\n      }\r\n      this.recoverShooterHPBar();\r\n    }, 300);\r\n  }\r\n  // 每 3 秒清除一次跑馬燈\r\n  clearCrawler() {\r\n    gameCrawler.textContent = '';\r\n    // CONFUSED 為什麼這樣寫不行？（只會觸發兩次）\r\n    // setTimeout(this.clearCrawler, 3000);\r\n    this.crawlerClearedTimer = setTimeout(() => {\r\n      this.clearCrawler();\r\n    }, 3000);\r\n  }\r\n  // 設定敵人出場\r\n  setEnemy(form, seconds = 0) {\r\n    setTimeout(() => {\r\n      switch (form) {\r\n        case 'circle': {\r\n          this.circles.push(new Circle({\r\n            axisRotateR: getRandom(gameHalfDiagonalL / 3, gameHalfDiagonalL),\r\n            axisRotateAngle: getRandom(0, 360),\r\n            axisRotateAngleV: -(getRandom(2, 8) / 10),\r\n            rotate: getRandom(0, 360),\r\n          }));\r\n          break;\r\n        }\r\n        case 'triangle': {\r\n          // axisRotateAngle 與 rotate 必須相同\r\n          const angle = getRandom(0, 360);\r\n          this.triangles.push(new Triangle({\r\n            axisRotateR: getRandom(gameHalfDiagonalL / 3, gameHalfDiagonalL),\r\n            axisRotateAngle: angle,\r\n            axisRotateAngleV: getRandom(2, 8) / 10,\r\n            rotate: angle,\r\n          }));\r\n          break;\r\n        }\r\n        case 'polygon': {\r\n          const rotateR = getRandom(gameHalfDiagonalL / 3, gameHalfDiagonalL / 1.5);\r\n          const rotateAngle = getRandom(0, 360);\r\n          const rotate = getRandom(0, 360);\r\n          this.polygons.push(new Polygon({\r\n            axisRotateR: {\r\n              whole: rotateR,\r\n              big: rotateR,\r\n              small: rotateR,\r\n            },\r\n            axisRotateAngle: {\r\n              whole: rotateAngle,\r\n              big: rotateAngle,\r\n              small: rotateAngle,\r\n            },\r\n            rotate: {\r\n              whole: rotate,\r\n              big: rotate,\r\n              small: rotate,\r\n            },\r\n            rotateV: getRandom(4, 8) / 10,\r\n          }));\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    }, seconds * 1000);\r\n  }\r\n  // 初始化關卡\r\n  initLevel(level, seconds) {\r\n    gameLevel.textContent = `Wave ${level}`;\r\n    this.countdownSeconds = seconds;\r\n    gameTime.textContent = `00:${this.countdownSeconds}”`;\r\n    this.countdownTime();\r\n  }\r\n  // 設定關卡\r\n  setLevel(level) {\r\n    switch (level) {\r\n      case 1:\r\n        this.initLevel('01', 15);\r\n        // const rotateNum = 360;\r\n        // this.boss = new Boss({\r\n        //   axisRotateR: getRandom(gameH / 3, gameH / 2.5),\r\n        //   axisRotateAngle: rotateNum,\r\n        //   rotate: rotateNum - 90,\r\n        // });\r\n        // 設定敵人出場\r\n        this.setEnemy('circle', 2);\r\n        break;\r\n      case 2:\r\n        this.initLevel('02', 20);\r\n        this.setEnemy('triangle', 2);\r\n        this.setEnemy('polygon', 10);\r\n        break;\r\n      case 3:\r\n        this.initLevel('03', 20);\r\n        this.setEnemy('polygon', 2);\r\n        this.setEnemy('circle', 5);\r\n        this.setEnemy('polygon', 10);\r\n        break;\r\n      case 4:\r\n        this.initLevel('04', 30);\r\n        this.setEnemy('circle', 2);\r\n        this.setEnemy('triangle', 2);\r\n        this.setEnemy('polygon', 10);\r\n        this.setEnemy('triangle', 15);\r\n        this.setEnemy('polygon', 20);\r\n        break;\r\n      case 5:\r\n        this.initLevel('05', 30);\r\n        this.setEnemy('circle', 2);\r\n        this.setEnemy('circle', 5);\r\n        this.setEnemy('polygon', 15);\r\n        this.setEnemy('triangle', 20);\r\n        break;\r\n      case 6:\r\n        this.initLevel('06', 40);\r\n        this.setEnemy('triangle', 2);\r\n        this.setEnemy('triangle', 5);\r\n        this.setEnemy('circle', 15);\r\n        this.setEnemy('circle', 30);\r\n        this.setEnemy('polygon', 30);\r\n        break;\r\n      case 7:\r\n        this.initLevel('07', 60);\r\n        this.setEnemy('circle', 2);\r\n        this.setEnemy('triangle', 2);\r\n        this.setEnemy('circle', 10);\r\n        this.setEnemy('triangle', 10);\r\n        this.setEnemy('polygon', 15);\r\n        this.setEnemy('polygon', 20);\r\n        this.setEnemy('triangle', 25);\r\n        this.setEnemy('triangle', 35);\r\n        this.setEnemy('polygon', 40);\r\n        this.setEnemy('circle', 45);\r\n        break;\r\n      case 8:\r\n        this.initLevel('08', 60);\r\n        this.setEnemy('circle', 5);\r\n        this.setEnemy('triangle', 10);\r\n        this.setEnemy('polygon', 15);\r\n        this.setEnemy('circle', 20);\r\n        this.setEnemy('polygon', 30);\r\n        this.setEnemy('triangle', 35);\r\n        this.setEnemy('polygon', 35);\r\n        this.setEnemy('triangle', 45);\r\n        this.setEnemy('circle', 50);\r\n        this.setEnemy('polygon', 50);\r\n        break;\r\n      case 9:\r\n        this.initLevel('09', 40);\r\n        this.setEnemy('circle', 2);\r\n        this.setEnemy('triangle', 2);\r\n        this.setEnemy('triangle', 5);\r\n        this.setEnemy('polygon', 10);\r\n        this.setEnemy('circle', 15);\r\n        this.setEnemy('polygon', 15);\r\n        this.setEnemy('circle', 25);\r\n        this.setEnemy('triangle', 30);\r\n        break;\r\n      case 10:\r\n        gameLevel.textContent = 'Wave 10';\r\n        const rotateNum = getRandom(0, 360);\r\n        this.boss = new Boss({\r\n          axisRotateR: getRandom(gameH / 3, gameH / 2.5),\r\n          axisRotateAngle: rotateNum,\r\n          rotate: rotateNum - 90,\r\n        });\r\n        this.countupTime();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    playSound('synth', 'A6');\r\n  }\r\n  checkPlayerName() {\r\n    // const playerName = document.getElementById('player-name').value;\r\n    if (playerName.value) {\r\n      return true;\r\n    } else {\r\n      playerName.classList.add('warn');\r\n      playSound('synth', 'A3');\r\n      playSound('synth', 'A2', '8n', 160);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// Page Loaded\r\nfunction handleLoad() {\r\n  game = new Game();\r\n  initCanvas();\r\n  game.init();\r\n}\r\n\r\n// load & resize event\r\nwindow.addEventListener('load', handleLoad);\r\nwindow.addEventListener('resize', initCanvas);\r\n\r\n\r\n\r\n// Mouse Events & Recording\r\nlet mouseMovePos = {}\r\nlet mouseMoveAngle = 0;\r\nfunction handleMouseMove(evt) {\r\n  mouseMovePos.x = evt.x - ww / 2;\r\n  mouseMovePos.y = evt.y - wh / 2;\r\n  const angle = Math.atan2(mouseMovePos.y, mouseMovePos.x);\r\n  mouseMoveAngle = angle < 0 ? (angle + 2 * Math.PI) : angle;\r\n};\r\n\r\nlet beforeShootTime = new Date();\r\nfunction handleClick() {\r\n  if (game.isPause) return;\r\n  game.shooter.shoot();\r\n};\r\n\r\nfunction handleKeyup(evt) {\r\n  if (game.isStart) {\r\n    if (evt.key === 's') {\r\n      game.shooter.shoot();\r\n    }\r\n    if (evt.key === 'p') {\r\n      game.pauseGame();\r\n    }\r\n  } else {\r\n    if (evt.key === 'Enter') {\r\n      if (!game.checkPlayerName()) return;\r\n      game.startGame();\r\n    }\r\n  }\r\n  if (evt.key === 'm') {\r\n    game.isMuted = !game.isMuted;\r\n    bgm.muted = !bgm.muted;\r\n    victoryBgm.muted = !victoryBgm.muted;\r\n  }\r\n}\r\n\r\nfunction handlePlayerName() {\r\n  playerName.addEventListener('focus', function () {\r\n    playerName.classList.remove('shine');\r\n    playerName.classList.remove('warn');\r\n  });\r\n\r\n  playerName.addEventListener('focusout', function () {\r\n    if (!playerName.value) {\r\n      playerName.classList.add('shine');\r\n    }\r\n  });\r\n\r\n  playerName.addEventListener('input', function () {\r\n    if (playerName.value) {\r\n      startBtn.classList.add('shine');\r\n    } else {\r\n      startBtn.classList.remove('shine');\r\n    }\r\n  });\r\n}","class Polygon {\r\n  constructor(args) {\r\n    const def = {\r\n      axisRotateR: {\r\n        whole: 0,\r\n        big: 0,\r\n        small: 0,\r\n      },\r\n      axisRotateAngle: {\r\n        whole: 0,\r\n        big: 0,\r\n        small: 0,\r\n      },\r\n      rotate: {\r\n        whole: 0,\r\n        big: 0,\r\n        small: 0,\r\n      },\r\n      HP: {\r\n        whole: 1,\r\n        big: 1,\r\n        small: 1,\r\n      },\r\n      axisRotateRV: 0,\r\n      rotateV: 0,\r\n      color: globalColor.red,\r\n      // 是否正好要分裂\r\n      isJustSplite: true,\r\n      scale: 0,\r\n      beginAppear: true,\r\n      isBossGenerate: false,\r\n    }\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n\r\n\r\n  originPos(form) {\r\n    return {\r\n      x: (gameW / 2) + this.axisRotateR[form] * Math.cos(this.axisRotateAngle[form] * degToPi),\r\n      y: (gameH / 2) + this.axisRotateR[form] * Math.sin(this.axisRotateAngle[form] * degToPi),\r\n    };\r\n  }\r\n\r\n\r\n  draw() {\r\n    if (this.HP.whole) {\r\n      ctx.save();\r\n      ctx.translate(this.originPos('whole').x, this.originPos('whole').y);\r\n      ctx.rotate(this.rotate.whole * degToPi);\r\n      ctx.scale(this.scale, this.scale);\r\n      // 主體多邊形\r\n      ctx.beginPath();\r\n      ctx.fillStyle = this.color;\r\n      ctx.moveTo(21 * Math.cos(8 * degToPi), 21 * Math.sin(8 * degToPi));\r\n      ctx.$triLineTo(23, 70);\r\n      ctx.$triLineTo(23, 150);\r\n      ctx.$triLineTo(34, 202);\r\n      ctx.$triLineTo(22, 255);\r\n      ctx.$triLineTo(22, 324);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      // 右淡五邊形\r\n      ctx.beginPath();\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.07)';\r\n      ctx.moveTo(9.6, -2);\r\n      ctx.$triLineTo(22, 324);\r\n      ctx.$triLineTo(21, 8);\r\n      ctx.$triLineTo(23, 70);\r\n      ctx.$triLineTo(10, 36);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      // 下淡四邊形\r\n      ctx.beginPath();\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.21)';\r\n      ctx.moveTo(10 * Math.cos(40 * degToPi), 10 * Math.sin(40 * degToPi));\r\n      ctx.$triLineTo(23, 70);\r\n      ctx.$triLineTo(23, 150);\r\n      ctx.lineTo(-8.8, 0);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      // 閃電\r\n      drawLightning({\r\n        x: -0.8,\r\n        y: -16\r\n      });\r\n      ctx.restore();\r\n    } else {\r\n      // 大分裂四邊形\r\n      if (this.HP.big) {\r\n        ctx.save();\r\n        ctx.translate(this.originPos('big').x, this.originPos('big').y);\r\n        ctx.rotate(this.rotate.big * degToPi);\r\n        // 大分裂主體\r\n        ctx.beginPath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.moveTo(23 * Math.cos(70 * degToPi), 23 * Math.sin(70 * degToPi));\r\n        ctx.$triLineTo(23, 150);\r\n        ctx.$triLineTo(34, 202);\r\n        ctx.$triLineTo(22, 255);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        // 大分裂內下四邊形\r\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.21)';\r\n        ctx.beginPath();\r\n        ctx.moveTo(-8.8, 0);\r\n        ctx.$triLineTo(4.8, 64);\r\n        ctx.$triLineTo(23, 70);\r\n        ctx.$triLineTo(23, 150);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        // 大分裂左閃電\r\n        drawLightning({\r\n          x: -12,\r\n          y: -8\r\n        }, 0.6);\r\n        ctx.restore();\r\n      }\r\n      // 小分裂四邊形\r\n      if (this.HP.small) {\r\n        ctx.save();\r\n        ctx.translate(this.originPos('small').x, this.originPos('small').y);\r\n        ctx.rotate(this.rotate.small * degToPi);\r\n        // 小分裂主體\r\n        ctx.beginPath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.moveTo(23 * Math.cos(70 * degToPi), 23 * Math.sin(70 * degToPi));\r\n        ctx.$triLineTo(22, 255);\r\n        ctx.$triLineTo(22, 324);\r\n        ctx.$triLineTo(21, 8);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        // 小分裂內下三角形\r\n        ctx.beginPath();\r\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.21)';\r\n        ctx.moveTo(10 * Math.cos(40 * degToPi), 10 * Math.sin(40 * degToPi));\r\n        ctx.$triLineTo(4.8, 64);\r\n        ctx.$triLineTo(23, 70);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        // 小分裂內右五邊形\r\n        ctx.beginPath();\r\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.07)';\r\n        ctx.moveTo(9.6, -2);\r\n        ctx.$triLineTo(22, 324);\r\n        ctx.$triLineTo(21, 8);\r\n        ctx.$triLineTo(23, 70);\r\n        ctx.$triLineTo(10, 36);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        // 小分裂閃電\r\n        drawLightning({\r\n          x: 10,\r\n          y: -8\r\n        }, 0.5);\r\n        ctx.restore();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  update(idx) {\r\n    this.beginAppear && this.appear(this.isBossGenerate);\r\n    this.beginAppear = false;\r\n    enemyMethods.approach(this);\r\n    // 如果尚未分裂\r\n    if (this.HP.whole) {\r\n      this.rotate.whole = this.rotate.big = this.rotate.small += this.rotateV;\r\n      // 當多邊形撞上 shooter\r\n      game.isStart && enemyMethods.hitShooter(game.polygons, idx, 'whole', this.axisRotateR.whole, this.axisRotateAngle.whole);\r\n    } else {\r\n      // let rotateDirection;\r\n      // 如果正好要分裂\r\n      if (this.isJustSplite) {\r\n        // const rotateOriginPos = 90 - 70;\r\n        // const rotateDirection = (((this.rotate.whole % 360) >= rotateOriginPos) && ((this.rotate.whole % 360) < (180 + rotateOriginPos))) ? -1 : 1;\r\n        const rotateDirection = Math.random() >= 0.5 ? 1 : -1;\r\n        TweenLite.to(this.axisRotateAngle, 2.4, {\r\n          big: `+=${getRandom(15, 30) * rotateDirection}`,\r\n          small: `-=${getRandom(15, 30) * rotateDirection}`,\r\n          ease: Circ.easeOut,\r\n        });\r\n        TweenLite.to(this.axisRotateR, 2.4, {\r\n          big: `+=${getRandom(50, 150)}`,\r\n          small: `+=${getRandom(50, 150)}`,\r\n          ease: Circ.easeOut,\r\n        });\r\n        TweenLite.to(this.rotate, 2.4, {\r\n          big: `+=${getRandom(180, 270)}`,\r\n          small: `-=${getRandom(180, 270)}`,\r\n          ease: Circ.easeOut,\r\n        });\r\n        // gameCrawler.textContent = 'ENEMY SPLITS';\r\n        this.isJustSplite = false;\r\n      }\r\n      // 當大分裂撞上 shooter\r\n      if (this.HP.big) {\r\n        // 重物自轉較慢\r\n        this.rotate.big += this.rotateV * 1.4;\r\n        enemyMethods.hitShooter(game.polygons, idx, 'big', this.axisRotateR.big, this.axisRotateAngle.big);\r\n      }\r\n      // 當小分裂撞上 shooter\r\n      if (this.HP.small) {\r\n        // 輕物自轉較快\r\n        this.rotate.small -= this.rotateV * 1.6;\r\n        enemyMethods.hitShooter(game.polygons, idx, 'small', this.axisRotateR.small, this.axisRotateAngle.small);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  appear(isBossGenerate) {\r\n    gameCrawler.textContent = '⚠ ENEMY IS COMING';\r\n    TweenLite.to(this, 0.8, {\r\n      scale: 1,\r\n      ease: Back.easeOut.config(1.7),\r\n    });\r\n    if (isBossGenerate) {\r\n      const rotateNum = getRandom(40, 80);\r\n      const rNum = getRandom(40, 80);\r\n      TweenLite.to(this.axisRotateAngle, 1.6, {\r\n        whole: `-=${rotateNum}`,\r\n        big: `-=${rotateNum}`,\r\n        small: `-=${rotateNum}`,\r\n        ease: Power2.easeOut,\r\n      });\r\n      TweenLite.to(this.axisRotateR, 1.6, {\r\n        whole: `+=${rNum}`,\r\n        big: `+=${rNum}`,\r\n        small: `+=${rNum}`,\r\n        ease: Power2.easeOut,\r\n      });\r\n    }\r\n    game.isStart && playSound('synth', 'C4', '4n');\r\n  }\r\n}","/* 道具 class */\r\nclass Prop {\r\n  constructor(args) {\r\n    const def = {\r\n      img: new Image(),\r\n      src: '',\r\n      axisRotateR: 0,\r\n      axisRotateRV: 0,\r\n      axisRotateAngle: 0,\r\n      r: 32,\r\n    }\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n  draw() {\r\n    if (!this.img.src) {\r\n      // 防止 Failed to execute 'drawImage' on 'CanvasRenderingContext2D': The HTMLImageElement provided is in the 'broken' state.\r\n      // this.img.width = 44;\r\n      // this.img.height = 44;\r\n      this.img.src = this.src;\r\n    }\r\n    if (this.img.complete) {\r\n      ctx.save();\r\n      ctx.translate(originPos(this.axisRotateR, this.axisRotateAngle).x, originPos(this.axisRotateR, this.axisRotateAngle).y);\r\n      // setTimeout(() => {\r\n      ctx.drawImage(this.img, 0, 0);\r\n      // }, 0);\r\n      // ctx.drawImage(this.img, 0, 0);\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\r\n      ctx.arc(this.img.width / 2, this.img.height / 2, this.r, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  update() {\r\n    if (!this.axisRotateRV) {\r\n      const seconds = getRandom(5, 8);\r\n      this.axisRotateRV = -(gameHalfDiagonalL / (seconds * updateFPS));\r\n    }\r\n    this.axisRotateR += this.axisRotateRV;\r\n    // 當道具撞上 shooter 主體\r\n    const shooter = game.shooter;\r\n    // 判斷是否撞上\r\n    if ((this.axisRotateR + this.r) <= (shooter.r + (shooter.cirSolidLineW / 2))) {\r\n      // 清掉該道具\r\n      game.prop = '';\r\n      const propName = this.src.replace('./img/', '').split('.')[0];\r\n      shooter.getProp(propName);\r\n    }\r\n  }\r\n}","class Shooter {\r\n  constructor(args) {\r\n    const def = {\r\n      color: globalColor.white,\r\n      // r: 34 * 0.85,\r\n      r: 28.9,\r\n      // shieldR: (34 + 36) * 0.85,\r\n      shieldR: 60,\r\n      // cirSolidLineW: 6 * 0.85,\r\n      cirSolidLineW: 6,\r\n      // shieldLineW: 4 * 0.85,\r\n      shieldLineW: 4,\r\n      rotateAngle: 0,\r\n      bullets: [],\r\n      bulletNum: 0,\r\n      hearts: 3,\r\n      state: '',\r\n      isAttacked: false,\r\n      isProtect: false,\r\n      beforeShootTime: new Date(),\r\n    };\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n  draw() {\r\n    if (!game.isStart && !game.isEnd) return;\r\n    ctx.save();\r\n    // 輪圍\r\n    ctx.translate(gameW / 2, gameH / 2);\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.shadowColor = 'rgba(255, 255, 255, 0.4)';\r\n    ctx.shadowBlur = 16;\r\n    ctx.lineWidth = this.cirSolidLineW;\r\n    ctx.arc(0, 0, this.r, 0, Math.PI * 2);\r\n    if (!this.isAttacked) {\r\n      ctx.strokeStyle = this.color;\r\n    } else {\r\n      ctx.strokeStyle = globalColor.red;\r\n      this.isAttacked = false;\r\n    }\r\n    ctx.stroke();\r\n    // 輪軸\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.$triLineTo(this.r, 0, this.rotateAngle);\r\n    ctx.moveTo(0, 0);\r\n    ctx.$triLineTo(this.r, 120, this.rotateAngle);\r\n    ctx.moveTo(0, 0);\r\n    ctx.$triLineTo(this.r, 240, this.rotateAngle);\r\n    // ctx.lineWidth = 3 * 0.85;\r\n    ctx.lineWidth = 2.55;\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    // 輪圍外虛線\r\n    ctx.strokeStyle = this.color;\r\n    // const outerR = this.r + 22 * 0.85;\r\n    const outerR = this.r + 20;\r\n    for (let i = 0; i < 360; i += 1) {\r\n      const x1 = outerR * Math.cos(i * degToPi + this.rotateAngle);\r\n      const y1 = outerR * Math.sin(i * degToPi + this.rotateAngle);\r\n      const x2 = outerR * Math.cos((i + 1) * degToPi + this.rotateAngle);\r\n      const y2 = outerR * Math.sin((i + 1) * degToPi + this.rotateAngle);\r\n      if (i % 10 < 5) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineWidth = 1;\r\n        ctx.stroke();\r\n      }\r\n    }\r\n    // 護盾\r\n    ctx.beginPath();\r\n    ctx.lineWidth = this.shieldLineW;\r\n    // 如果 shooter 狀態為 shield，護盾變為 180°\r\n    if (this.state !== 'shield') {\r\n      ctx.arc(0, 0, this.shieldR, 135 * degToPi + this.rotateAngle, 225 * degToPi + this.rotateAngle);\r\n    } else {\r\n      ctx.arc(0, 0, this.shieldR, 90 * degToPi + this.rotateAngle, 270 * degToPi + this.rotateAngle);\r\n    }\r\n    if (!this.isProtect) {\r\n      ctx.strokeStyle = this.color;\r\n    } else {\r\n      ctx.strokeStyle = globalColor.blue;\r\n      this.isProtect = false;\r\n    }\r\n    ctx.stroke();\r\n    // 砲口\r\n    ctx.beginPath();\r\n    ctx.save();\r\n    ctx.shadowColor = 'rgba(255, 255, 255, 0.4)';\r\n    ctx.shadowBlur = 16;\r\n    ctx.rotate(this.rotateAngle);\r\n    ctx.translate(this.r + 8, 0);\r\n    ctx.moveTo(0, 0);\r\n    // 下方長方形長 13.6、寬（高） 10.2\r\n    // 上方梯形高 11.8、上邊寬 6.8\r\n    ctx.lineTo(0, 6.8);\r\n    ctx.lineTo(10.2, 6.8);\r\n    ctx.lineTo(22.1, 3.4);\r\n    ctx.lineTo(22.1, -3.4);\r\n    ctx.lineTo(10.2, -6.8);\r\n    ctx.lineTo(0, -6.8);\r\n    ctx.closePath();\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n    ctx.restore();\r\n    ctx.restore();\r\n    // 發射子彈\r\n    this.bullets.forEach((bullet) => {\r\n      bullet.draw();\r\n    });\r\n  }\r\n  update() {\r\n    this.rotateAngle = mouseMoveAngle;\r\n    this.bullets.forEach((bullet, idx) => {\r\n      bullet.update(idx);\r\n    });\r\n  }\r\n  shoot() {\r\n    const shootTime = new Date();\r\n    if (shootTime - beforeShootTime > 400) {\r\n      let bulletNum;\r\n      // 如果 shooter 狀態為 double，每次射兩發，兩發之間隔 0.16 秒\r\n      if (this.state !== 'double') {\r\n        bulletNum = 1;\r\n      } else {\r\n        bulletNum = 2;\r\n      }\r\n      for (let i = 0; i < bulletNum; i++) {\r\n        if (this.state !== 'wave') {\r\n          setTimeout(() => {\r\n            this.bulletNum += 1;\r\n            this.bullets.push(new ShooterBullet({\r\n              // axisRotateR: 62 * 0.85,\r\n              axisRotateR: 52.7,\r\n              rotateAngle: mouseMoveAngle,\r\n            }));\r\n            playSound('membrane', 'D3');\r\n          }, 160 * i);\r\n        } else {\r\n          setTimeout(() => {\r\n            this.bulletNum += 1;\r\n            this.bullets.push(new ShooterBullet({\r\n              waveLength: getRandom(40, 80),\r\n              waveFreq: getRandom(2, 4) / 10,\r\n              waveAmp: getRandom(4, 8),\r\n              waveFlow: getRandom(4, 8),\r\n              // axisRotateR: 70 * 0.85,\r\n              axisRotateR: 59.5,\r\n              rotateAngle: mouseMoveAngle,\r\n            }));\r\n            playSound('mono', 'F2', '4n', 0, -10);\r\n          }, 160 * i);\r\n        }\r\n      }\r\n      beforeShootTime = shootTime;\r\n    }\r\n  }\r\n  getProp(propName) {\r\n    // 持續秒數\r\n    let lastTime;\r\n    switch (propName) {\r\n      case 'heart':\r\n        this.recoverHeart();\r\n        lastTime = 0;\r\n        gameCrawler.textContent = 'GAIN LIFE💕';\r\n        break;\r\n      case 'crackdown':\r\n        this.drawCrackdownEffect();\r\n        lastTime = 0;\r\n        gameCrawler.textContent = 'BOOM💥';\r\n        break;\r\n      case 'shield':\r\n        lastTime = 25000;\r\n        gameCrawler.textContent = 'EXTEND SHIELD💪';\r\n        break;\r\n      case 'double':\r\n        lastTime = 20000;\r\n        gameCrawler.textContent = 'DOUBLE SHOOT✌️';\r\n        break;\r\n      case 'wave':\r\n        lastTime = 15000;\r\n        gameCrawler.textContent = 'WAVE BULLET🌊';\r\n        break;\r\n      default:\r\n        lastTime = 0;\r\n    }\r\n    // 將道具設為 shooter 的狀態\r\n    this.state = propName;\r\n    // 時間到後，移除道具效果\r\n    const countLastTime = () => {\r\n      setTimeout(() => {\r\n        if (!game.isStart) return;\r\n        if (game.isPause) {\r\n          countLastTime();\r\n        } else {\r\n          lastTime -= 1000;\r\n          if (lastTime > 0) {\r\n            countLastTime();\r\n          } else {\r\n            this.state = '';\r\n            // 重新道具計時\r\n            game.generateProp();\r\n          }\r\n        }\r\n      }, 1000);\r\n    }\r\n    // 顯示道具效果持續時間\r\n    this.displayPropInfo(propName, lastTime);\r\n    if (propName !== 'crackdown') {\r\n      playSound('synth', 'E5');\r\n      playSound('synth', 'G5', '8n', 160);\r\n    }\r\n    countLastTime();\r\n  }\r\n  // 繪製清場效果\r\n  drawCrackdownEffect() {\r\n    let crackdownTime = 1;\r\n    const boss = game.boss;\r\n    const effect = () => {\r\n      if (!game.isPause) {\r\n        crackdownTime += 1;\r\n      }\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      ctx.shadowColor = 'rgba(255, 255, 255, 0.72)';\r\n      ctx.shadowBlur = 2;\r\n      // 透明度從 1 到 0\r\n      ctx.strokeStyle = `rgba(255, 255, 255, ${(100 - crackdownTime) / 98})`;\r\n      ctx.fillStyle = `rgba(255, 255, 255, ${(100 - crackdownTime) / 490})`;\r\n      ctx.lineWidth = 5;\r\n      /**\r\n       * baseLog() 從 0 到 3\r\n       * 所以 (((crackdownTime - 2) / 98) * 26) + 1 為從 1 到 27\r\n       * 清場半徑因此為從 0 到 528\r\n       */\r\n      const effectR = 176 * baseLog(3, (((crackdownTime - 2) / 98) * 26) + 1);\r\n      ctx.arc(gameW / 2, gameH / 2, effectR, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      ctx.stroke();\r\n      ctx.restore();\r\n      // 清除敵人\r\n      game.circles.forEach((circle, idx) => {\r\n        if (effectR > circle.axisRotateR) {\r\n          enemyMethods.dieEffect(circle.r, originPos(circle.axisRotateR, circle.axisRotateAngle).x, originPos(circle.axisRotateR, circle.axisRotateAngle).y, '245, 175, 95');\r\n          game.circles.splice(idx, 1);\r\n        }\r\n      });\r\n      game.triangles.forEach((triangle, idx) => {\r\n        if (effectR > triangle.axisRotateR) {\r\n          enemyMethods.dieEffect(triangle.r, originPos(triangle.axisRotateR, triangle.axisRotateAngle).x, originPos(triangle.axisRotateR, triangle.axisRotateAngle).y, '54, 118, 187');\r\n          game.triangles.splice(idx, 1);\r\n        }\r\n      });\r\n      game.polygons.forEach((polygon, idx) => {\r\n        if (effectR > polygon.axisRotateR.whole) {\r\n          if (polygon.HP.whole) {\r\n            const polygonWholeR = (34 + 21) / 2;\r\n            enemyMethods.dieEffect(polygonWholeR, polygon.originPos('whole').x, polygon.originPos('whole').y, '231, 70, 93');\r\n          } else {\r\n            if (polygon.HP.big) {\r\n              const polygonBigR = (34 + 22) / 2;\r\n              enemyMethods.dieEffect(polygonBigR, polygon.originPos('big').x, polygon.originPos('big').y, '231, 70, 93');\r\n              game.polygons.splice(idx, 1);\r\n            }\r\n            if (polygon.HP.small) {\r\n              const polygonSmallR = (23 + 21) / 2;\r\n              enemyMethods.dieEffect(polygonSmallR, polygon.originPos('small').x, polygon.originPos('small').y, '231, 70, 93');\r\n              game.polygons.splice(idx, 1);\r\n            }\r\n          }\r\n          game.polygons.splice(idx, 1);\r\n        }\r\n      });\r\n      game.subTris.forEach((subTriangle, idx) => {\r\n        if (effectR > subTriangle.axisRotateR) {\r\n          game.subTris.splice(idx, 1);\r\n        }\r\n      });\r\n      // 清除 boss\r\n      if (game.boss) {\r\n        if (effectR > boss.axisRotateR && boss.HP === 0) {\r\n          enemyMethods.bossDieResult();\r\n        }\r\n      }\r\n      if (crackdownTime < 100) {\r\n        requestAnimationFrame(effect);\r\n      }\r\n    }\r\n    requestAnimationFrame(effect);\r\n    if (boss) {\r\n      boss.HP -= 1;\r\n    }\r\n    // playSound('duo', 'F4', '2n');\r\n    playSound('synth', 'C6', '2n');\r\n    // playSound('synth', 'G2', '8n', 0, 20);\r\n    // playSound('duo', 'F2', '2n', 0, 15);\r\n    // playSound('duo', 'E2', '2n', 0, 10);\r\n    // playSound('duo', 'D2', '8n', 1000, 10);\r\n  }\r\n  // 恢復一個愛心命\r\n  recoverHeart() {\r\n    const heart = document.createElement('DIV');\r\n    heart.classList.add('panel__game-heart');\r\n    heartWrapper.appendChild(heart);\r\n    this.hearts += 1;\r\n  }\r\n  displayPropInfo(propName, lastTime) {\r\n    if (propName === 'crackdown' || propName === 'heart') return;\r\n    prop.classList.remove('op0');\r\n    propImg.src = `./img/${propName}--panel.svg`;\r\n    lastTime /= 1000;  \r\n    propLastTime.textContent = lastTime;\r\n    const countLastTime = () => {\r\n      // const propInfoTimer = setTimeout(() => {\r\n      setTimeout(() => {\r\n        if (!game.isStart) return;\r\n        if (game.isPause) {\r\n          countLastTime();\r\n          return;\r\n        }\r\n        // 遊戲結束時，清除計時器\r\n        // if (!game.isStart) {\r\n        //   clearTimeout(propInfoTimer);\r\n        //   return;\r\n        // }\r\n        lastTime -= 1;\r\n        propLastTime.textContent = lastTime >= 10 ? lastTime : `0${lastTime}`;\r\n        if (lastTime) {\r\n          countLastTime();\r\n        } else {\r\n          prop.classList.add('op0');\r\n          // clearTimeout(propInfoTimer);\r\n        }\r\n      }, 1000);\r\n    }\r\n    countLastTime();\r\n  }\r\n}\r\n\r\n\r\n\r\nclass ShooterBullet {\r\n  constructor(args) {\r\n    const def = {\r\n      // bodyLen: 15 * 0.85,\r\n      bodyLen: 12.75,\r\n      axisRotateR: 0,\r\n      color: globalColor.white,\r\n      v: 10,\r\n      rotateAngle: 0,\r\n      waveLength: 40,\r\n      waveFreq: 0.2,\r\n      waveAmp: 4,\r\n      waveFlow: 4,\r\n    };\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n  draw() {\r\n    ctx.save();\r\n    ctx.translate(gameW / 2, gameH / 2);\r\n    ctx.rotate(this.rotateAngle);\r\n    // 如果 shooter 狀態非 wave\r\n    if (game.shooter.state !== 'wave') {\r\n      // 殘影\r\n      ctx.beginPath();\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.7)';\r\n      // ctx.arc(-7 * 0.85 + this.axisRotateR, 0, 3 * 0.85, 0, Math.PI * 2);\r\n      ctx.arc(-5.95 + this.axisRotateR, 0, 2.15, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      ctx.beginPath();\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.4)';\r\n      // ctx.arc(-12 * 0.85 + this.axisRotateR, 0, 2 * 0.85, 0, Math.PI * 2);\r\n      ctx.arc(-10.2 + this.axisRotateR, 0, 1.7, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      ctx.beginPath();\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\r\n      // ctx.arc(-15 * 0.85 + this.axisRotateR, 0, 1 * 0.85, 0, Math.PI * 2);\r\n      ctx.arc(-12.75 + this.axisRotateR, 0, 0.85, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      // 園底\r\n      ctx.beginPath();\r\n      ctx.fillStyle = this.color;\r\n      // ctx.arc(0 + this.axisRotateR, 0, 4 * 0.85, 0, Math.PI * 2);\r\n      ctx.arc(0 + this.axisRotateR, 0, 3.4, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      // 尖頭\r\n      ctx.beginPath();\r\n      // ctx.moveTo(3 * 0.85 + this.axisRotateR, 3 * 0.85);\r\n      ctx.moveTo(2.55 + this.axisRotateR, 2.55);\r\n      ctx.lineTo(this.bodyLen + this.axisRotateR, 0);\r\n      // ctx.lineTo(3 * 0.85 + this.axisRotateR, -3 * 0.85);\r\n      ctx.lineTo(2.55 + this.axisRotateR, -2.55);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    } else {\r\n      drawWaveBullet(this, 'axisRotateR', 1.6, 'rgba(255, 255, 255, 0.72)');\r\n    }\r\n    ctx.restore();\r\n  }\r\n  update(bulletIdx) {\r\n    // 移動子彈\r\n    this.axisRotateR += this.v;\r\n    let anglePanFn;\r\n    let shotRRangeFn;\r\n    // 判斷子彈為哪一類型\r\n    // 一般類型\r\n    if (game.shooter.state !== 'wave') {\r\n      const bulletMoveLen = this.axisRotateR + this.bodyLen;\r\n      // 判斷子彈有無射中圓形\r\n      game.circles.forEach((circle, cirIdx) => {\r\n        anglePanFn = () => {\r\n          return Math.asin(circle.r / circle.axisRotateR);\r\n        }\r\n        shotRRangeFn = () => {\r\n          return (bulletMoveLen >= (circle.axisRotateR - (circle.r / 2))) && (bulletMoveLen <= (circle.axisRotateR + (circle.r / 2)));\r\n        }\r\n        this.attackEnemy(circle, cirIdx, game.circles, bulletIdx, anglePanFn, shotRRangeFn, '245, 175, 95');\r\n      });\r\n      // 判斷子彈有無射中三角形\r\n      game.triangles.forEach((triangle, triIdx) => {\r\n        anglePanFn = () => {\r\n          const lengthX = triangle.axisRotateR + (triangle.r / 2);\r\n          const lengthY = (triangle.r / 2) * Math.sqrt(3);\r\n          return Math.atan2(lengthY, lengthX);\r\n        }\r\n        shotRRangeFn = () => {\r\n          return (bulletMoveLen >= triangle.axisRotateR) && (bulletMoveLen <= (triangle.axisRotateR + (triangle.r / 2)));\r\n        }\r\n        this.attackEnemy(triangle, triIdx, game.triangles, bulletIdx, anglePanFn, shotRRangeFn, '54, 118, 187');\r\n      });\r\n      // 判斷子彈有無射中多邊形\r\n      game.polygons.forEach((polygon, polyIdx) => {\r\n        // 當多邊形未分裂\r\n        if (polygon.HP.whole) {\r\n          shotRRangeFn = () => {\r\n            const sideA = polygon.axisRotateR.whole;\r\n            return (bulletMoveLen >= sideA) && (bulletMoveLen <= (sideA + 9));\r\n          }\r\n          this.attackPolygon(polygon, polyIdx, 'whole', 34, 21, (360 - (202 + 75)), (8 + 75), 75, bulletIdx, shotRRangeFn);\r\n        } else {\r\n          // 當多邊形分裂\r\n          // 大分裂\r\n          if (polygon.HP.big) {\r\n            shotRRangeFn = () => {\r\n              const sideA = polygon.axisRotateR.big;\r\n              return (bulletMoveLen >= sideA + 8) && (bulletMoveLen <= (sideA + 16));\r\n            }\r\n            this.attackPolygon(polygon, polyIdx, 'big', 34, 23, ((202 + 44) - 180), (180 - (70 + 44)), 44, bulletIdx, shotRRangeFn);\r\n          }\r\n          // 小分裂\r\n          if (polygon.HP.small) {\r\n            shotRRangeFn = () => {\r\n              const sideA = polygon.axisRotateR.small;\r\n              return (bulletMoveLen >= sideA + 8) && (bulletMoveLen <= (sideA + 16));\r\n            }\r\n            this.attackPolygon(polygon, polyIdx, 'small', 22, 23, ((255 + 17.5) - 180), (180 - (70 + 17.5)), 17.5, bulletIdx, shotRRangeFn);\r\n          }\r\n        }\r\n      });\r\n      // 判斷子彈有無射中 boss\r\n      const boss = game.boss;\r\n      if (boss) {\r\n        anglePanFn = () => {\r\n          return Math.asin(18 / (boss.axisRotateR + 6));\r\n        }\r\n        shotRRangeFn = () => {\r\n          return (bulletMoveLen >= (boss.axisRotateR + 9 + 8)) && (bulletMoveLen <= (boss.axisRotateR + 28));\r\n        }\r\n        this.attackEnemy(boss, NaN, null, bulletIdx, anglePanFn, shotRRangeFn, '255, 255, 255', 'ordinary', true);\r\n      }\r\n    } else {\r\n      // 波狀類型\r\n      // 有無射中圓形\r\n      game.circles.forEach((circle, cirIdx) => {\r\n        anglePanFn = () => {\r\n          return Math.asin(circle.r / circle.axisRotateR);\r\n        }\r\n        shotRRangeFn = () => {\r\n          return (this.axisRotateR >= (circle.axisRotateR - (circle.r / 2))) && (this.axisRotateR <= (circle.axisRotateR + (circle.r / 2)));\r\n        }\r\n        this.attackEnemy(circle, cirIdx, game.circles, bulletIdx, anglePanFn, shotRRangeFn, '245, 175, 95', 'wave');\r\n      });\r\n      // 有無射中三角形\r\n      game.triangles.forEach((triangle, triIdx) => {\r\n        anglePanFn = () => {\r\n          const lengthX = triangle.axisRotateR + (triangle.r / 2);\r\n          const lengthY = (triangle.r / 2) * Math.sqrt(3);\r\n          return Math.atan2(lengthY, lengthX);\r\n        }\r\n        shotRRangeFn = () => {\r\n          return (this.axisRotateR >= triangle.axisRotateR) && (this.axisRotateR <= (triangle.axisRotateR + (triangle.r / 2)));\r\n        }\r\n        this.attackEnemy(triangle, triIdx, game.triangles, bulletIdx, anglePanFn, shotRRangeFn, '54, 118, 187', 'wave');\r\n      });\r\n      // 有無射中多邊形\r\n      game.polygons.forEach((polygon, polyIdx) => {\r\n        // 當多邊形尚未分裂\r\n        if (polygon.HP.whole) {\r\n          shotRRangeFn = () => {\r\n            const sideA = polygon.axisRotateR.whole;\r\n            return (this.axisRotateR >= sideA) && (this.axisRotateR <= (sideA + 9));\r\n          }\r\n          this.attackPolygon(polygon, polyIdx, 'whole', 34, 21, (360 - (202 + 75)), (8 + 75), 75, bulletIdx, shotRRangeFn, 'wave');\r\n        } else {\r\n          // 當多邊形已經分裂\r\n          // 大分裂\r\n          if (polygon.HP.big) {\r\n            shotRRangeFn = () => {\r\n              const sideA = polygon.axisRotateR.big;\r\n              return (this.axisRotateR >= sideA + 8) && (this.axisRotateR <= (sideA + 16));\r\n            }\r\n            this.attackPolygon(polygon, polyIdx, 'big', 34, 23, ((202 + 44) - 180), (180 - (70 + 44)), 44, bulletIdx, shotRRangeFn, 'wave');\r\n          }\r\n          // 小分裂\r\n          if (polygon.HP.small) {\r\n            shotRRangeFn = () => {\r\n              const sideA = polygon.axisRotateR.small;\r\n              return (this.axisRotateR >= sideA + 8) && (this.axisRotateR <= (sideA + 16));\r\n            }\r\n            this.attackPolygon(polygon, polyIdx, 'small', 22, 23, ((255 + 17.5) - 180), (180 - (70 + 17.5)), 17.5, bulletIdx, shotRRangeFn, 'wave');\r\n          }\r\n          // 如果大小分裂都已被擊斃，移除此多邊形\r\n          if (polygon.HP.big === 0 && polygon.HP.small === 0) {\r\n            game.polygons.splice(polyIdx, 1);\r\n            // 電池加一\r\n            game.batteryNum += 1;\r\n            batteryNum.textContent = game.batteryNum;\r\n          }\r\n        }\r\n      });\r\n      // 判斷子彈有無射中 boss\r\n      const boss = game.boss;\r\n      if (boss) {\r\n        anglePanFn = () => {\r\n          return Math.asin(18 / (boss.axisRotateR + 6));\r\n        }\r\n        shotRRangeFn = () => {\r\n          return (this.axisRotateR >= (boss.axisRotateR + 9 + 8)) && (this.axisRotateR <= (boss.axisRotateR + 28));\r\n        }\r\n        this.attackEnemy(boss, NaN, null, bulletIdx, anglePanFn, shotRRangeFn, '255, 255, 255', 'wave', true);\r\n      }\r\n    }\r\n    // 當子彈超出邊界\r\n    this.beyondBoundary(bulletIdx);\r\n  }\r\n  // 攻擊敵人（圓形、三角形）\r\n  // FIXME 當敵人太靠近會打不到\r\n  attackEnemy(enemy, enemyIdx, enemies, bulletIdx, anglePanFn, shotRRangeFn, colorRGB, type = 'ordinary', isBoss = false) {\r\n    /**\r\n     * 射中角度範圍\r\n     * 圓形：取得兩個外切線所構成角度的一半\r\n     * 三角形：取得射中角度範圍的一半\r\n     */\r\n    const enemyAnglePan = anglePanFn();\r\n    const enemyAngleMinus = (enemy.axisRotateAngle % 360) * degToPi - enemyAnglePan;\r\n    const enemyAngleAdd = (enemy.axisRotateAngle % 360) * degToPi + enemyAnglePan;\r\n    const shotAngleRange = this.judgeShotAngleRange(enemyAngleMinus, enemyAngleAdd, type);\r\n    // 射中距離範圍\r\n    const shotRRange = shotRRangeFn();\r\n\r\n    if (!gameCrawler.textContent) {\r\n      gameCrawler.textContent = Math.random() >= 0.5 ? 'FIRE🔥' : 'BANG👊';\r\n    }\r\n    // 判斷子彈有無射中敵人\r\n    if (shotAngleRange && shotRRange) {\r\n      // 移除子彈\r\n      game.shooter.bullets.splice(bulletIdx, 1);\r\n      // 扣敵人 1 生命值\r\n      enemy.HP -= 1;\r\n      if (type === 'ordinary') {\r\n        playSound('membrane', 'D2');\r\n      } else {\r\n        playSound('mono', 'C2', '8n', 0, -10);\r\n      }\r\n      // 若敵人生命值為 0\r\n      if (enemy.HP === 0) {\r\n        if (isBoss) {\r\n          // 移除 boss\r\n          enemyMethods.bossDieResult();\r\n          return;\r\n        } else {\r\n          // 移除敵人\r\n          enemies.splice(enemyIdx, 1);\r\n          // 移除效果\r\n          enemyMethods.dieEffect(enemy.r, originPos(enemy.axisRotateR, enemy.axisRotateAngle).x, originPos(enemy.axisRotateR, enemy.axisRotateAngle).y, colorRGB);\r\n          // 電池加一\r\n          game.batteryNum += 1;\r\n          batteryNum.textContent = game.batteryNum;\r\n        }\r\n      }\r\n      gameCrawler.textContent = Math.random() >= 0.8 ? \"BULL'S-EYE😤\" : 'HIT👍';\r\n    }\r\n  }\r\n  // 攻擊多邊形\r\n  attackPolygon(polygon, polyIdx, form, sideB1Len, sideB2Len, angleAB1, angleAB2, rotateAngleJudge, bulletIdx, shotRRangeFn, type = 'ordinary') {\r\n    const polyAxisRotateAngle = polygon.axisRotateAngle[form];\r\n    const polyRotate = polygon.rotate[form];\r\n    // 取得兩側射中最大角度\r\n    const sideA = polygon.axisRotateR[form];\r\n    const sideB1 = sideB1Len;\r\n    const sideB2 = sideB2Len;\r\n    /**\r\n     * 兩側點愈靠近軸心，夾角便愈大\r\n     *   whole: 8°, 202°\r\n     *   big: 70°, 202°\r\n     *   small: 70°, 255°\r\n\r\n     * 相同軸半徑下，當多邊形呈某一角度，兩側點離軸心（幾乎）最近，angleB 相同\r\n     *   whole: axisRotateAngle 180°, rotate 75°\r\n     *     270 - 202 = 68\r\n     *     90 - 8 = 82\r\n     *     (68 + 82) / 2 = 75\r\n     * \r\n     *   big: axisRotateAngle 0°, rotate 44°\r\n     *     270 - 202 = 68\r\n     *     90 - 70 = 20\r\n     *     (68 + 20) / 2 = 44\r\n     * \r\n     *   small: axisRotateAngle 0°, rotate 17.5°\r\n     *     270 - 255 = 15\r\n     *     90 - 70 = 20\r\n     *     (15 + 20) / 2 = 17.5\r\n     */\r\n    const sideC1 = cosineFormula(sideA, sideB1, angleAB1);\r\n    const sideC2 = cosineFormula(sideA, sideB2, angleAB2);\r\n    // 當多邊形的 axisRotateAngle、rotate 不同，要加上與減去的角度也不一樣\r\n    const bottomJudge = (polyAxisRotateAngle <= 180) && ((polyRotate % 360) < rotateAngleJudge || (polyRotate % 360) >= (rotateAngleJudge + 180));\r\n    const topJudge = (polyAxisRotateAngle > 180) && ((polyRotate % 360) >= rotateAngleJudge || (polyRotate % 360) < (rotateAngleJudge + 180));\r\n    let angleB1;\r\n    let angleB2;\r\n\r\n    if (!gameCrawler.textContent) {\r\n      gameCrawler.textContent = Math.random() >= 0.5 ? 'FIRE🔥' : 'BANG👊';\r\n    }\r\n    if (bottomJudge || topJudge) {\r\n      angleB1 = getAngleB(sideA, sideB2, sideC2);\r\n      angleB2 = getAngleB(sideA, sideB1, sideC1);\r\n    } else {\r\n      angleB1 = getAngleB(sideA, sideB1, sideC1);\r\n      angleB2 = getAngleB(sideA, sideB2, sideC2);\r\n    }\r\n    /**\r\n     * 射中角度範圍\r\n     * 多邊形雖不會繞軸旋轉，axisRotateAngle 固定，但分裂時可能會超過 360°，故 % 360\r\n     */\r\n    const polyAngleMinus = (polyAxisRotateAngle % 360) * degToPi - angleB1;\r\n    const polyAngleAdd = (polyAxisRotateAngle % 360) * degToPi + angleB2;\r\n    const shotAngleRange = this.judgeShotAngleRange(polyAngleMinus, polyAngleAdd, type);\r\n    // 射中距離範圍\r\n    const shotRRange = shotRRangeFn();\r\n    // 判斷子彈有無射中多邊形\r\n    if (shotAngleRange && shotRRange) {\r\n      // 移除子彈\r\n      game.shooter.bullets.splice(bulletIdx, 1);\r\n      // 扣 1 生命值\r\n      polygon.HP[form] -= 1;\r\n      if (form === 'whole') {\r\n        playSound('synth', 'D6', '16n');\r\n      }\r\n      // 若大或小分裂生命值為 0\r\n      if (polygon.HP.big === 0 || polygon.HP.small === 0) {\r\n        // 移除效果\r\n        const polygonR = form === 'big' ? (34 + 22) / 2 : (23 + 21) / 2;\r\n        enemyMethods.dieEffect(polygonR, polygon.originPos(form).x, polygon.originPos(form).y, '231, 70, 93');\r\n      }\r\n      // 如果大小分裂都被擊斃了，那就移除此多邊形\r\n      if (polygon.HP.big === 0 && polygon.HP.small === 0) {\r\n        game.polygons.splice(polyIdx, 1);\r\n        // 電池加一\r\n        game.batteryNum += 1;\r\n        batteryNum.textContent = game.batteryNum;\r\n      }\r\n      gameCrawler.textContent = Math.random() >= 0.8 ? \"BULL'S-EYE😤!\" : 'HIT👍';\r\n      if (type === 'ordinary') {\r\n        playSound('membrane', 'D2');\r\n      } else {\r\n        playSound('mono', 'C2', '8n', 0, -10);\r\n      }\r\n    }\r\n  }\r\n  // 判斷射中角度範圍\r\n  judgeShotAngleRange(enemyAngleMinus, enemyAngleAdd, type) {\r\n    let shooterRotateAngle;\r\n    // 當敵人 axisRotateAngle 在 360° 附近，且 shooter 槍口朝下（0° 下方）\r\n    if (enemyAngleAdd > Math.PI * 2 && this.rotateAngle < Math.PI) {\r\n      shooterRotateAngle = this.rotateAngle + Math.PI * 2;\r\n    } else if (\r\n      // 當敵人 axisRotateAngle 皆小於 0\r\n      (enemyAngleMinus < 0 && enemyAngleAdd < 0) || \r\n      // 當敵人 axisRotateAngle 在 0° 附近，且 shooter 槍口朝上（0° 上方）\r\n      (enemyAngleMinus < 0 && enemyAngleAdd > 0 && this.rotateAngle > Math.PI)) {\r\n      shooterRotateAngle = this.rotateAngle - Math.PI * 2;\r\n    } else {\r\n      shooterRotateAngle = this.rotateAngle;\r\n    }\r\n    // 判斷子彈為哪一類型\r\n    // 一般子彈\r\n    if (type !== 'wave') {\r\n      return shooterRotateAngle >= enemyAngleMinus && shooterRotateAngle <= enemyAngleAdd;\r\n    } else {\r\n      // 波狀子彈\r\n      const shooterAnglePan = Math.atan2(this.waveLength, this.axisRotateR);\r\n      const shooterAngleMinus = shooterRotateAngle - shooterAnglePan;\r\n      const shooterAngleAdd = shooterRotateAngle + shooterAnglePan;\r\n      return (enemyAngleMinus <= shooterAngleAdd) && (enemyAngleAdd >= shooterAngleMinus);\r\n    }\r\n  }\r\n  // 當子彈超出邊界\r\n  beyondBoundary(bulletIdx) {\r\n    /**\r\n     * 856 / 2 = 428\r\n     * 624 / 2 = 312\r\n     * Math.sqrt(428 * 428 + 312 * 312) = 529.6\r\n     */\r\n    if (this.axisRotateR >= 530) {\r\n      game.shooter.bullets.splice(bulletIdx, 1);\r\n    }\r\n  }\r\n}","class Triangle {\r\n  constructor(args) {\r\n    const def = {\r\n      axisRotateR: 0,\r\n      axisRotateAngle: 0,\r\n      r: 26,\r\n      rotate: 0,\r\n      scale: 0,\r\n      axisRotateRV: 0,\r\n      axisRotateAngleV: 0,\r\n      color: globalColor.blue,\r\n      bullets: [],\r\n      beforeRotateAxisAngleTime: new Date(),\r\n      beforeShootTime: new Date(),\r\n      HP: 4,\r\n      isGeneratedSub: false,\r\n      shootTimer: null,\r\n      beginAppear: true,\r\n      isBossGenerate: false,\r\n    }\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n\r\n\r\n  \r\n  draw() {\r\n    const triOuterBigR = this.r + 4;\r\n    const triInnerBigR = this.r - 16;\r\n    const triInnerSmallR = this.r - 22;\r\n    ctx.save();\r\n    // 淡三角\r\n    ctx.translate(originPos(this.axisRotateR, this.axisRotateAngle).x, originPos(this.axisRotateR, this.axisRotateAngle).y);\r\n    ctx.scale(this.scale, this.scale);\r\n    ctx.rotate(this.rotate * degToPi);\r\n    ctx.save();\r\n    ctx.translate(4, 0);\r\n    ctx.beginPath();\r\n    ctx.moveTo(triOuterBigR * Math.cos(60 * degToPi), triOuterBigR * Math.sin(60 * degToPi));\r\n    ctx.$triLineTo(triOuterBigR, 180);\r\n    ctx.$triLineTo(triOuterBigR, 300);\r\n    ctx.closePath();\r\n    ctx.fillStyle = 'rgba(54, 118, 187, 0.34)';\r\n    ctx.fill();\r\n    ctx.restore();\r\n    // 主體三角\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.r * Math.cos(60 * degToPi), this.r * Math.sin(60 * degToPi));\r\n    ctx.$triLineTo(this.r, 180);\r\n    ctx.$triLineTo(this.r, 300);\r\n    ctx.closePath();\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n    // 大白三角\r\n    ctx.translate(0, -2.8);\r\n    ctx.fillStyle = globalColor.white;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.$triLineTo(triInnerBigR, 90);\r\n    ctx.$triLineTo(triInnerBigR, 150);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    // 小白三角\r\n    ctx.translate(8 * Math.cos(-40 * degToPi), 8 * Math.sin(-40 * degToPi))\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.$triLineTo(triInnerSmallR, 90);\r\n    ctx.$triLineTo(triInnerSmallR, 150);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n    // 繪製三角子彈\r\n    this.bullets.forEach((bullet) => {\r\n      bullet.draw();\r\n    });\r\n  }\r\n\r\n\r\n\r\n  update(idx) {\r\n    this.beginAppear && this.appear(this.isBossGenerate);\r\n    this.beginAppear = false;\r\n    game.isStart && enemyMethods.approach(this);\r\n    // 更新三角子彈\r\n    this.bullets.forEach((bullet, idx, arr) => {\r\n      bullet.update(idx, arr);\r\n    });\r\n    // 每 4-8 秒，三角移動 + 自身旋轉\r\n    const rotateAxisAngleTime = new Date();\r\n    let randomRotateAngle;\r\n    if (rotateAxisAngleTime - this.beforeRotateAxisAngleTime > getRandom(4000, 8000)) {\r\n      // 旋轉時不發射子彈\r\n      if (this.shootTimer) {\r\n        clearTimeout(this.shootTimer);\r\n      }\r\n      randomRotateAngle = (Math.random() >= 0.25 ? 1 : -1) * getRandom(45, 75);\r\n      // 以 0.8 秒移動\r\n      TweenLite.to(this, 0.8, {\r\n        axisRotateAngle: `+=${randomRotateAngle}`,\r\n        ease: Power0.easeNone,\r\n      });\r\n      // 以 1.2 秒自身旋轉\r\n      TweenLite.to(this, 1.2, {\r\n        rotate: `+=${randomRotateAngle + 360}`,\r\n        ease: Power2.easeInOut,\r\n        onComplete: () => {\r\n          // 移動完後發射子彈\r\n          // 當遊戲尚未開始、暫停，或此三角形已死掉，便不發射子彈\r\n          if (!game.isStart || game.isPause || this.HP === 0) return;\r\n          this.shoot();\r\n          // 發射一顆子彈後，每 2.4-7.2 秒發射第二發子彈\r\n          this.shootTimer = setTimeout(() => {\r\n            if (!game.isStart || this.HP === 0) return;\r\n            this.shoot();\r\n          }, getRandom(2400, 7200));\r\n        }\r\n      });\r\n      this.beforeRotateAxisAngleTime = rotateAxisAngleTime;\r\n    }\r\n    // 當生命值剩 2，派副三角形攻擊\r\n    if (this.HP === 2 && !this.isGeneratedSub) {\r\n      for (let i = 1; i <= 2; i += 1) {\r\n        game.subTris.push(new TriSub({\r\n          axisRotateR: this.axisRotateR,\r\n          axisRotateAngle: this.axisRotateAngle,\r\n          rotate: this.rotate,\r\n          order: i,\r\n        }));\r\n      }\r\n      gameCrawler.textContent = 'COUNTERATTACK🤛';\r\n      this.isGeneratedSub = true;\r\n      playSound('synth', 'C6', '16n');\r\n    }\r\n    // 當三角形撞上 shooter\r\n    enemyMethods.hitShooter(game.triangles, idx, 'triangle', this.axisRotateR, this.axisRotateAngle);\r\n  }\r\n\r\n\r\n\r\n  shoot() {\r\n    this.bullets.push(new TriBullet({\r\n      p: {\r\n        x: originPos(this.axisRotateR, this.axisRotateAngle).x,\r\n        y: originPos(this.axisRotateR, this.axisRotateAngle).y,\r\n      },\r\n      axisRotateR: this.axisRotateR,\r\n      rotateAngle: this.rotate,\r\n    }));\r\n    gameCrawler.textContent = Math.random() >= 0.8 ? 'UNDER ATTACK🤕' : 'ATTACK⚡️';\r\n    playSound('membrane', 'G5');\r\n  }\r\n\r\n\r\n\r\n  appear(isBossGenerate) {\r\n    gameCrawler.textContent = '⚠ ENEMY IS COMING';\r\n    TweenLite.to(this, 0.8, {\r\n      scale: 1,\r\n      ease: Back.easeOut.config(1.7),\r\n    });\r\n    let rotateNum = 0;\r\n    if (isBossGenerate) {\r\n      rotateNum = getRandom(40, 80);\r\n      const rNum = getRandom(40, 80);\r\n      TweenLite.to(this, 1.6, {\r\n        axisRotateAngle: `+=${rotateNum}`,\r\n        axisRotateR: `+=${rNum}`,\r\n        ease: Power2.easeOut,\r\n      });\r\n    }\r\n    TweenLite.to(this, 1.6, {\r\n      rotate: `+=${rotateNum + 360}`,\r\n      ease: Back.easeOut.config(1.7),\r\n    });\r\n    game.isStart && playSound('synth', 'B4', '4n');\r\n  }\r\n}\r\n\r\n\r\n\r\nclass TriSub {\r\n  constructor(args) {\r\n    const def = {\r\n      axisRotateR: 0,\r\n      axisRotateAngle: 0,\r\n      // r: 26 * 0.4,\r\n      r: 10.4,\r\n      rotate: 0,\r\n      rotateV: 4,\r\n      color: globalColor.blue,\r\n      HP: 2,\r\n      isReproduceMoving: false,\r\n      order: 0,\r\n    }\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n  draw() {\r\n    const triOuterBigR = this.r + 1.6;\r\n    const triInnerBigR = this.r - 6.4;\r\n    const triInnerSmallR = this.r - 8.8;\r\n    ctx.save();\r\n    // 淡三角\r\n    ctx.translate(originPos(this.axisRotateR, this.axisRotateAngle).x, originPos(this.axisRotateR, this.axisRotateAngle).y);\r\n    // ctx.scale(0.4, 0.4);\r\n    ctx.rotate(this.rotate * degToPi);\r\n    ctx.save();\r\n    ctx.translate(0.8, -Math.sqrt(1.92));\r\n    ctx.beginPath();\r\n    ctx.moveTo(triOuterBigR * Math.cos(0), triOuterBigR * Math.sin(0));\r\n    ctx.lineTo(triOuterBigR * Math.cos(120 * degToPi), triOuterBigR * Math.sin(120 * degToPi));\r\n    ctx.lineTo(triOuterBigR * Math.cos(240 * degToPi), triOuterBigR * Math.sin(240 * degToPi));\r\n    ctx.closePath();\r\n    ctx.fillStyle = 'rgba(54, 118, 187, 0.34)';\r\n    ctx.fill();\r\n    ctx.restore();\r\n    // 主體三角\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.r * Math.cos(0), this.r * Math.sin(0));\r\n    ctx.lineTo(this.r * Math.cos(120 * degToPi), this.r * Math.sin(120 * degToPi));\r\n    ctx.lineTo(this.r * Math.cos(240 * degToPi), this.r * Math.sin(240 * degToPi));\r\n    ctx.closePath();\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n    // 大白三角\r\n    ctx.translate(-1.28, -0.64);\r\n    ctx.fillStyle = globalColor.white;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.lineTo(triInnerBigR * Math.cos(30 * degToPi), triInnerBigR * Math.sin(30 * degToPi));\r\n    ctx.lineTo(triInnerBigR * Math.cos(90 * degToPi), triInnerBigR * Math.sin(90 * degToPi));\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    // 小白三角\r\n    ctx.translate(0, -3.52);\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.lineTo(triInnerSmallR * Math.cos(30 * degToPi), triInnerSmallR * Math.sin(30 * degToPi));\r\n    ctx.lineTo(triInnerSmallR * Math.cos(90 * degToPi), triInnerSmallR * Math.sin(90 * degToPi));\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  update(idx) {\r\n    this.rotate += this.rotateV;\r\n    if (!this.isReproduceMoving) {\r\n      TweenLite.to(this, 0.8, {\r\n        axisRotateAngle: `${this.order === 1 ? '+=' : '-='}10`,\r\n        ease: Power2.easeOut,\r\n        onComplete: () => {\r\n          TweenLite.to(this, 1.6, {\r\n            axisRotateR: 0,\r\n            ease: Power1.easeIn,\r\n          });\r\n        }\r\n      });\r\n      this.isReproduceMoving = true;\r\n    }\r\n    // 當小三角形撞上 shooter\r\n    enemyMethods.hitShooter(game.subTris, idx, 'triangle', this.axisRotateR, this.axisRotateAngle);\r\n  }\r\n}\r\n\r\n\r\n\r\nclass TriBullet {\r\n  constructor(args) {\r\n    const def = {\r\n      p: {\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n      moveX: 0,\r\n      moveXV: -4.5,\r\n      rotateAngle: 0,\r\n      color: globalColor.blue,\r\n    }\r\n    Object.assign(def, args);\r\n    Object.assign(this, def);\r\n  }\r\n  draw() {\r\n    ctx.save();\r\n    ctx.translate(this.p.x, this.p.y);\r\n    ctx.rotate(this.rotateAngle * degToPi);\r\n    ctx.translate(this.moveX, 0);\r\n    // 主體三角子彈\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.moveTo(-16, 0);\r\n    ctx.$triLineTo(38, 174);\r\n    ctx.$triLineTo(16.8, 200);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    // 淡三角子彈\r\n    ctx.fillStyle = 'rgba(54, 118, 187, 0.34)';\r\n    ctx.beginPath();\r\n    ctx.moveTo(-16.4, 0);\r\n    ctx.$triLineTo(38, 174);\r\n    ctx.$triLineTo(15.6, 168);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  update(idx, arr) {\r\n    // 三角子彈移動\r\n    this.moveX += this.moveXV;\r\n    // 子彈擊中 shooter\r\n    enemyMethods.attackShooter(this, idx, arr, 37.8);\r\n    // 當子彈超出邊界\r\n    this.beyondBoundary(idx, arr);\r\n  }\r\n  // 當子彈超出邊界\r\n  beyondBoundary(idx, arr) {\r\n    // Math.sqrt(856 * 856 + 624 * 624) = 1059.3\r\n    if (this.moveX <= -1060) {\r\n      arr.splice(idx, 1);\r\n    }\r\n  }\r\n}","ctx.$triLineTo = function (r, angle, angleAdd = 0) {\r\n  return ctx.lineTo(r * Math.cos(angle * degToPi + angleAdd), r * Math.sin(angle * degToPi + angleAdd));\r\n}\r\n\r\n// 繪製波狀子彈\r\nfunction drawWaveBullet(bullet, originPos, lineWidth, shadowColor) {\r\n  ctx.strokeStyle = bullet.color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.shadowColor = shadowColor;\r\n  ctx.shadowBlur = 2;\r\n  // 正半波\r\n  ctx.beginPath();\r\n  for (let i = 0; i < bullet.waveLength; i += 1) {\r\n    const degree = (i * bullet.waveFreq) + (updateTime / bullet.waveFlow);\r\n    ctx.lineTo(bullet[originPos] + (bullet.waveAmp * Math.sin(degree)), i);\r\n  }\r\n  ctx.stroke();\r\n  // 負半波\r\n  ctx.beginPath();\r\n  for (let i = 0; i < bullet.waveLength; i += 1) {\r\n    const degree = (i * bullet.waveFreq) + (updateTime / bullet.waveFlow);\r\n    ctx.lineTo(bullet[originPos] + (bullet.waveAmp * Math.sin(degree)), -i);\r\n  }\r\n  ctx.stroke();\r\n}\r\n\r\n// 繪製電池\r\n// function drawBattery(p) {\r\n//   ctx.save();\r\n//     ctx.translate(p.x, p.y);\r\n//     ctx.fillStyle = globalColor.orange;\r\n//     // 瓶身\r\n//     ctx.beginPath();\r\n//     ctx.moveTo(0, 0);\r\n//     ctx.lineTo(-24, 0);\r\n//     ctx.lineTo(-24, 42);\r\n//     ctx.lineTo(0, 42);\r\n//     ctx.closePath();\r\n//     ctx.fill();\r\n//     // 瓶底\r\n//     ctx.save();\r\n//       ctx.translate(0, 44);\r\n//       ctx.beginPath();\r\n//       ctx.moveTo(0, 0);\r\n//       ctx.lineTo(-24, 0);\r\n//       ctx.lineTo(-24, 3);\r\n//       ctx.lineTo(0, 3);\r\n//       ctx.closePath();\r\n//       ctx.fill();\r\n//     ctx.restore();\r\n//     // 瓶蓋\r\n//     ctx.fillStyle = globalColor.white;\r\n//     ctx.save();\r\n//       ctx.translate(-6.75, 0);\r\n//       ctx.beginPath();\r\n//       ctx.moveTo(0, 0);\r\n//       ctx.lineTo(0, -3);\r\n//       ctx.lineTo(-10.5, -3);\r\n//       ctx.lineTo(-10.5, -0);\r\n//       ctx.closePath();\r\n//       ctx.fill();\r\n//     ctx.restore();\r\n//     // 閃電\r\n//     drawLightning({ x: -11, y: 9 });\r\n//   ctx.restore();\r\n// }\r\n\r\n\r\n\r\n// 繪製閃電\r\nfunction drawLightning(translate = { x: 0, y: 0 }, scale = 1) {\r\n  ctx.fillStyle = globalColor.white;\r\n  ctx.translate(translate.x, translate.y);\r\n  ctx.beginPath();\r\n  ctx.moveTo(0, 0);\r\n  ctx.rotate(18 * degToPi);\r\n  ctx.lineTo(0, 10 * scale);\r\n  ctx.translate(0, 10 * scale);\r\n  ctx.rotate(-18 * degToPi);\r\n\r\n  ctx.lineTo(10 * scale, 0);\r\n  ctx.translate(10 * scale, 0);\r\n\r\n  ctx.rotate(28 * degToPi);\r\n  ctx.lineTo(0, 16 * scale);\r\n  ctx.translate(0, 16 * scale);\r\n  ctx.rotate(-28 * degToPi);\r\n\r\n  ctx.rotate(3.6 * degToPi);\r\n  ctx.lineTo(0, -10 * scale);\r\n  ctx.translate(0, -10 * scale);\r\n  ctx.rotate(-3.6 * degToPi);\r\n\r\n  ctx.lineTo(-8 * scale, 0);\r\n  ctx.closePath();\r\n  ctx.fill();\r\n}\r\n\r\n\r\n\r\nfunction originPos(axisRotateR, axisRotateAngle) {\r\n  return {\r\n    x: (gameW / 2) + axisRotateR * Math.cos(axisRotateAngle * degToPi),\r\n    y: (gameH / 2) + axisRotateR * Math.sin(axisRotateAngle * degToPi),\r\n  };\r\n}\r\n\r\n\r\n\r\n// 以 x 為底的 y 的對數：logxy\r\nfunction baseLog(x, y) {\r\n  return Math.log(y) / Math.log(x);\r\n}\r\n\r\n\r\n\r\n// 餘弦定理\r\nfunction cosineFormula(a, b, angle) {\r\n  return Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(angle * degToPi));\r\n}\r\n\r\nfunction getAngleB(a, b, c) {\r\n  return Math.acos((a * a + c * c - b * b) / (2 * a * c));\r\n}\r\n\r\n\r\n\r\n// 取得某區間的隨機亂數\r\nfunction getRandom(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\n\r\n\r\nfunction playSound(instrument, note, duration = '8n', timeout = 0, volume = 0) {\r\n  if (game.isMuted) return;\r\n  let synth;\r\n  switch (instrument) {\r\n    case 'membrane':\r\n      setTimeout(() => {\r\n        synth = new Tone.MembraneSynth().toMaster();\r\n        synth.triggerAttackRelease(note, duration);\r\n        synth.volume.value = volume;\r\n      }, timeout);\r\n      break;\r\n    case 'duo':\r\n      setTimeout(() => {\r\n        synth = new Tone.DuoSynth().toMaster();\r\n        synth.triggerAttackRelease(note, duration);\r\n        synth.volume.value = volume;\r\n      }, timeout);\r\n      break;\r\n    case 'mono':\r\n      setTimeout(() => {\r\n        synth = new Tone.MonoSynth().toMaster();\r\n        synth.triggerAttackRelease(note, duration);\r\n        synth.volume.value = volume;\r\n      }, timeout);\r\n      break;\r\n    default:\r\n      setTimeout(() => {\r\n        synth = new Tone.Synth().toMaster();\r\n        synth.triggerAttackRelease(note, duration);\r\n        synth.volume.value = volume;\r\n      }, timeout);\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n/* 2D Vector Class */\r\n// class Vec2 {\r\n//   constructor(x, y) {\r\n//     this.x = x;\r\n//     this.y = y;\r\n//   }\r\n//   set(x, y) {\r\n//     this.x = x;\r\n//     this.y = y;\r\n//   }\r\n//   move(x, y) {\r\n//     this.x += x;\r\n//     this.y += y;\r\n//   }\r\n//   add(v) {\r\n//     return new Vec2(this.x + v.x, this.y + v.y);\r\n//   }\r\n//   sub(v) {\r\n//     return new Vec2(this.x - v.x, this.y - v.y);\r\n//   }\r\n//   mul(s) {\r\n//     return new Vec2(this.x * s, this.y * s);\r\n//   }\r\n//   clone() {\r\n//     return new Vec2(this.x, this.y);\r\n//   }\r\n//   equal(v) {\r\n//     return this.x === v.x && this.y === v.y;\r\n//   }\r\n//   get length() {\r\n//     return Math.sqrt(this.x * this.x + this.y * this.y);\r\n//   }\r\n//   set length(newVal) {\r\n//     const newLength = this.unit.mul(newVal);\r\n//     this.set(newLength.x, newLength.y);\r\n//   }\r\n//   get angle() {\r\n//     return Math.atan2(this.y, this.x);\r\n//   }\r\n//   get unit() {\r\n//     return this.mul(1 / this.length);\r\n//   }\r\n// }"]}